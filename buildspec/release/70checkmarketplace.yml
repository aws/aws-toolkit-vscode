version: 0.2

phases:
    install:
        runtime-versions:
            nodejs: 16

        commands:
            - apt update
            - apt install -y wget gpg
            - curl -sSL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
            - install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
            - sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'
            - apt update
            - apt install -y code

    pre_build:
        commands:
            # Check for implicit env vars passed from the release pipeline.
            - test -n "${TARGET_EXTENSION}"

    build:
        commands:
            - VERSION=$(node -e "console.log(require('./packages/${TARGET_EXTENSION}/package.json').version);")
            # get extension name, if in beta, use some hard-coded recent version
            - |
                if [ "${TARGET_EXTENSION}" = "amazonq" ]; then
                  extension_name="amazonwebservices.amazon-q-vscode"
                  [ "$STAGE" != "prod" ] && VERSION="1.43.0" || true
                elif [ "${TARGET_EXTENSION}" = "toolkit" ]; then
                  extension_name="amazonwebservices.aws-toolkit-vscode"
                  [ "$STAGE" != "prod" ] && VERSION="3.42.0" || true
                else
                  echo checkmarketplace: "Unknown TARGET_EXTENSION: ${TARGET_EXTENSION}"
                  exit 1
                fi
                if [ "$STAGE" != "prod" ]; then
                  echo "checkmarketplace: Non-production stage detected. Installing hardcoded version '${VERSION}'."
                fi
            # keep installing the desired extension version until successful. Otherwise fail on codebuild timeout (1 hour).
            - |
                while true; do
                  code --uninstall-extension "${extension_name}" --no-sandbox --user-data-dir /tmp/vscode
                  code --install-extension "${extension_name}@${VERSION}" --no-sandbox --user-data-dir /tmp/vscode || true
                  cur_version=$(code --list-extensions --show-versions --no-sandbox --user-data-dir /tmp/vscode | grep ${extension_name} | cut -d'@' -f2)
                  if [ "${cur_version}" = "${VERSION}" ]; then
                    echo "checkmarketplace: Extension ${extension_name} is updated to version '${cur_version}.'"
                    break
                  else
                    echo "checkmarketplace: Expected extension version '${VERSION}' has not been successfully installed. Retrying..."
                  fi
                  sleep 120 # Wait for 2 minutes before retrying
                done
