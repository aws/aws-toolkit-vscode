version: 0.2

env:
    variables:
        NODE_OPTIONS: '--max-old-space-size=8192'

phases:
    pre_build:
        commands:
            - aws codeartifact login --tool npm --domain "$TOOLKITS_CODEARTIFACT_DOMAIN" --domain-owner "$TOOLKITS_ACCOUNT_ID" --repository "$TOOLKITS_CODEARTIFACT_REPO"
            - test -n "${TARGET_EXTENSION}"

    install:
        runtime-versions:
            nodejs: 16

    build:
        commands:
            - |
                echo "TARGET_EXTENSION=${TARGET_EXTENSION}"
                echo "Removing SNAPSHOT from version string"
                git config --global user.name "aws-toolkit-automation"
                git config --global user.email "<>"
                VERSION=$(node -e "console.log(require('./packages/${TARGET_EXTENSION}/package.json').version);" | (IFS="-"; read -r version unused && echo "$version"))
                DATE=$(date)
                npm version --no-git-tag-version "$VERSION" -w packages/${TARGET_EXTENSION}
                # 'createRelease' uses ts-node.
                # Ignore broken "postinstall" script in "src.gen/@amzn/codewhisperer-streaming/package.json".
                npm install --ignore-scripts ts-node
            - |
                npm run createRelease -w packages/${TARGET_EXTENSION}
            - |
                git add packages/${TARGET_EXTENSION}/package.json
                git add package-lock.json
                git commit -m "Release $VERSION"
                echo "tagging commit"
                # e.g. amazonq/v1.0.0. Ensure this tag is up to date with 50githubrelease.yml
                git tag -a "${TARGET_EXTENSION}/v${VERSION}" -m "${TARGET_EXTENSION} version $VERSION $DATE"
                # cleanup
                git clean -fxd
                git reset HEAD --hard

artifacts:
    files:
        - '**/*'
