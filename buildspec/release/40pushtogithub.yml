version: 0.2

env:
    variables:
        NODE_OPTIONS: '--max-old-space-size=8192'

phases:
    install:
        runtime-versions:
            nodejs: 16

    pre_build:
        commands:
            # Check for implicit env vars passed from the release pipeline.
            - test -n "${TOOLKITS_GITHUB_REPO_OWNER}"
            - test -n "${GITHUB_TOKEN}"
            - test -n "${TARGET_EXTENSION}"
            - test -n "${TARGET_BRANCH}"
            - REPO_URL="https://$GITHUB_TOKEN@github.com/${TOOLKITS_GITHUB_REPO_OWNER}/aws-toolkit-vscode.git"

    build:
        commands:
            - |
                echo "TARGET_EXTENSION=${TARGET_EXTENSION}"
                git config --global user.name "aws-toolkit-automation"
                git config --global user.email "<>"
                git remote add originWithCreds "$REPO_URL"
                echo "Adding SNAPSHOT to next version string"
                # Increase minor version
                npm version --no-git-tag-version minor -w packages/${TARGET_EXTENSION}
                VERSION=$(node -e "console.log(require('./packages/${TARGET_EXTENSION}/package.json').version);")
                # Append -SNAPSHOT
                npm version --no-git-tag-version "${VERSION}-SNAPSHOT" -w packages/${TARGET_EXTENSION}
                git add packages/${TARGET_EXTENSION}/package.json
                git add package-lock.json
                git commit -m "Update version to snapshot version: ${VERSION}-SNAPSHOT"
            - |
                if [ "$STAGE" != "prod" ]; then
                  echo "SKIPPED (stage=${STAGE}): 'git push originWithCreds ${TARGET_BRANCH}'"
                  exit 0
                fi
                echo "pushing to github"
                git fetch originWithCreds ${TARGET_BRANCH}
                git merge --no-edit -m "Merge release into ${TARGET_BRANCH}" FETCH_HEAD
                git push originWithCreds --tags
                git push originWithCreds ${TARGET_BRANCH}
