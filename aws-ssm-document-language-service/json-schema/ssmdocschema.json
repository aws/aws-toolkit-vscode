{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "AWS System Manager Document Schema",
    "type": "object",
    "properties": {
        "schemaVersion": {
            "type": "string",
            "description": "Schema Version of Document. Command Document can use schemaVersion 1.2, 2.0, 2.2. Policy Document can use schemaVersion 2.0 and later. Automation Document must use schemaVersion 0.3."
        }
    },
    "required": ["schemaVersion"],
    "oneOf": [
        {
            "properties": {
                "schemaVersion": {
                    "enum": ["0.3", "1.2", "2.0", "2.2"]
                },
                "description": {
                    "type": "string",
                    "description": "Information you provide to describe the purpose of the document."
                },
                "assumeRole": {
                    "type": "string",
                    "description": "The ARN of the role that allows Automation to perform the actions on your behalf."
                },
                "parameters": {
                    "type": "object",
                    "description": "A structure that defines the parameters the document accepts.",
                    "properties": {},
                    "additionalProperties": {
                        "type": "object",
                        "description": "Custom defined parameters.",
                        "required": ["type"],
                        "additionalProperties": false,
                        "defaultSnippets": [
                            {
                                "label": "Snippet: String parameter",
                                "description": "Insert snippet for a parameter",
                                "body": {
                                    "type": "String",
                                    "description": "(Required) Description for this parameter.",
                                    "default": "default value",
                                    "allowedValues": ["value1", "value2"],
                                    "allowedPattern": "value[0-9]+",
                                    "minChars": 0
                                }
                            },
                            {
                                "label": "Snippet: Integer parameter",
                                "description": "Insert snippet for a Integer parameter",
                                "body": {
                                    "type": "Integer",
                                    "description": "(Required) Description for this parameter.",
                                    "default": 100
                                }
                            },
                            {
                                "label": "Snippet: MapList parameter",
                                "description": "Insert snippet for a MapList parameter",
                                "body": {
                                    "type": "MapList",
                                    "description": "(Required) Description for this parameter.",
                                    "default": [
                                        {
                                            "key1": "value1",
                                            "key2": {
                                                "key2_1": "value2"
                                            }
                                        },
                                        {
                                            "key1": "value3",
                                            "key2": {
                                                "key2_1": "value4"
                                            }
                                        }
                                    ],
                                    "maxItems": 2
                                }
                            },
                            {
                                "label": "Snippet: Boolean parameter",
                                "description": "Insert snippet for a Boolean parameter",
                                "body": {
                                    "type": "Boolean",
                                    "description": "(Required) Description for this parameter.",
                                    "default": true
                                }
                            },
                            {
                                "label": "Snippet: StringList parameter",
                                "description": "Insert snippet for a StringList parameter",
                                "body": {
                                    "type": "StringList",
                                    "description": "(Required) Description for this parameter.",
                                    "minItems": 1,
                                    "displayType": "textarea"
                                }
                            },
                            {
                                "label": "Snippet: StringMap parameter",
                                "description": "Insert snippet for a StringMap parameter",
                                "body": {
                                    "type": "StringMap",
                                    "description": "(Required) Description for this parameter.",
                                    "default": {
                                        "key1": "value1",
                                        "key2": "value2",
                                        "key3": "value3"
                                    }
                                }
                            }
                        ],
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": ["String", "Integer", "Boolean", "StringList", "StringMap", "MapList"],
                                "description": "Type of the parameter."
                            },
                            "description": {
                                "type": "string",
                                "description": "Description of the parameter."
                            },
                            "allowedPattern": {
                                "type": "string",
                                "description": " A regular expression that validates whether the user input matches the defined pattern for the parameter. If the user input does not match the allowed pattern, the execution fails to start."
                            },
                            "displayType": {
                                "type": "string",
                                "description": "Used to display either a textfield or a textarea in the AWS Management Console. textfield is a single-line text box. textarea is a multi-line text area.",
                                "enum": ["textfield", "textarea"]
                            },
                            "minItems": {
                                "type": "integer",
                                "description": "The minimum number of items allowed."
                            },
                            "maxItems": {
                                "type": "integer",
                                "description": "The maximum number of items allowed."
                            },
                            "minChars": {
                                "type": "integer",
                                "description": "The minimum number of parameter characters allowed."
                            },
                            "maxChars": {
                                "type": "integer",
                                "description": "The maximum number of parameter characters allowed."
                            },
                            "allowedValues": {
                                "type": "array",
                                "description": "An array of values allowed for the parameter. Defining allowed values for the parameter validates the user input. If a user inputs a value that is not allowed, the execution fails to start."
                            },
                            "default": {
                                "description": "Default value of the parameter."
                            }
                        },
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "type": {
                                            "const": "String"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "default": {
                                            "type": "string"
                                        },
                                        "allowedValues": {
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "minItems": {
                                            "not": {}
                                        },
                                        "maxItems": {
                                            "not": {}
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "type": {
                                            "const": "Boolean"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "default": {
                                            "type": "boolean"
                                        },
                                        "allowedValues": {
                                            "items": {
                                                "type": "boolean"
                                            }
                                        },
                                        "minItems": {
                                            "not": {}
                                        },
                                        "maxItems": {
                                            "not": {}
                                        },
                                        "minChars": {
                                            "not": {}
                                        },
                                        "maxChars": {
                                            "not": {}
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "type": {
                                            "const": "Integer"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "default": {
                                            "type": "integer"
                                        },
                                        "allowedValues": {
                                            "items": {
                                                "type": "integer"
                                            }
                                        },
                                        "minItems": {
                                            "not": {}
                                        },
                                        "maxItems": {
                                            "not": {}
                                        },
                                        "minChars": {
                                            "not": {}
                                        },
                                        "maxChars": {
                                            "not": {}
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "type": {
                                            "const": "StringList"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "default": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "allowedValues": {
                                            "items": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "minChars": {
                                            "not": {}
                                        },
                                        "maxChars": {
                                            "not": {}
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "type": {
                                            "const": "StringMap"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "default": {
                                            "type": "object"
                                        },
                                        "allowedValues": {
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "minItems": {
                                            "not": {}
                                        },
                                        "maxItems": {
                                            "not": {}
                                        },
                                        "minChars": {
                                            "not": {}
                                        },
                                        "maxChars": {
                                            "not": {}
                                        }
                                    }
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "type": {
                                            "const": "MapList"
                                        }
                                    }
                                },
                                "then": {
                                    "properties": {
                                        "default": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "allowedValues": {
                                            "items": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "minChars": {
                                            "not": {}
                                        },
                                        "maxChars": {
                                            "not": {}
                                        }
                                    }
                                }
                            }
                        ]
                    }
                },
                "runtimeConfig": {
                    "type": "object",
                    "description": "(Schema version 1.2 only) The configuration for the instance as applied by one or more Systems Manager plugins. Plugins are not guaranteed to run in sequence."
                },
                "files": {
                    "type": "object",
                    "description": "(Schema version 0.3 only) The script files (and their checksums) attached to the document and run during an automation execution. Applies only to documents that include the aws:executeScript action and for which attachments have been specified in one or more steps."
                },
                "outputs": {
                    "type": "array",
                    "description": "(Schema version 0.3 only) Data generated by the execution of this document that can be used in other processes. For example, if your document creates a new AMI, you might specify \"CreateImage.ImageId\" as the output value, and then use this output to create new instances in a subsequent automation execution. "
                },
                "mainSteps": {
                    "type": "array",
                    "description": "(Schema version 0.3, 2.0, and 2.2 only) An object that can include multiple steps (plugins). Plugins are defined within steps. Steps run in sequential order as listed in the document.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "action": {
                                "type": "string",
                                "description": "The name of the action the step is to run."
                            },
                            "name": {
                                "type": "string",
                                "description": "An identifier that must be unique across all step names in the document."
                            },
                            "inputs": {
                                "type": "object",
                                "description": "The properties specific to the action."
                            },
                            "outputs": {
                                "type": "array",
                                "description": "Outputs for this step."
                            }
                        }
                    }
                }
            },
            "required": ["schemaVersion"],
            "additionalProperties": false,
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "schemaVersion": {
                                "const": "1.2"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "mainSteps": {
                                "not": {}
                            },
                            "runtimeConfig": {
                                "properties": {
                                    "aws:applications": {
                                        "type": "object",
                                        "description": "Install, repair, or uninstall applications on an EC2 instance. This plugin only runs on Windows Server operating systems.",
                                        "properties": {
                                            "properties": {
                                                "type": "array",
                                                "description": "Properties of plugin aws:applications.",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "description": "id of the step."
                                                        },
                                                        "action": {
                                                            "type": "string",
                                                            "description": "The action to take.",
                                                            "default": "{{ action }}"
                                                        },
                                                        "parameters": {
                                                            "type": "string",
                                                            "description": "The parameters for the installer.",
                                                            "default": "{{ parameters }}"
                                                        },
                                                        "source": {
                                                            "type": "string",
                                                            "description": "The URL of the .msi file for the application.",
                                                            "default": "{{ source }}"
                                                        },
                                                        "sourceHash": {
                                                            "type": "string",
                                                            "description": "The SHA256 hash of the .msi file.",
                                                            "default": "{{ sourceHash }}"
                                                        }
                                                    },
                                                    "required": ["action", "source"],
                                                    "additionalProperties": false
                                                }
                                            }
                                        }
                                    },
                                    "aws:cloudWatch": {
                                        "type": "object",
                                        "description": "Export data from Windows Server to Amazon CloudWatch or Amazon CloudWatch Logs and monitor the data using CloudWatch metrics. This plugin only runs on Windows Server operating systems.",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "id of the step."
                                            },
                                            "settings": {
                                                "type": "object",
                                                "description": "Settings for cloudWatch."
                                            },
                                            "properties": {
                                                "type": "string",
                                                "description": "Properties of cloudWatch."
                                            }
                                        }
                                    },
                                    "aws:domainJoin": {
                                        "type": "object",
                                        "description": "Join an EC2 instance to a domain. This plugin only runs on Windows Server operating systems.",
                                        "properties": {
                                            "properties": {
                                                "type": "object",
                                                "description": "Properties of plugin aws:domainJoin",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "description": "id of the step."
                                                    },
                                                    "directoryId": {
                                                        "type": "string",
                                                        "description": "The ID of the directory. Example \"d-1234567890\".",
                                                        "default": "{{ directoryId }}"
                                                    },
                                                    "directoryName": {
                                                        "type": "string",
                                                        "description": "The name of the domain.",
                                                        "default": "{{ directoryName }}"
                                                    },
                                                    "directoryOU": {
                                                        "type": "string",
                                                        "description": "The organizational unit (OU).",
                                                        "default": "{{ directoryOU }}"
                                                    },
                                                    "dnsIpAddresses": {
                                                        "description": "The IP addresses of the DNS servers.",
                                                        "default": "{{ dnsIpAddresses }}"
                                                    }
                                                },
                                                "required": ["directoryId", "directoryName"],
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "aws:psModule": {
                                        "description": "Install PowerShell modules on an EC2 instance. This plugin only runs on Windows Server operating systems.",
                                        "properties": {
                                            "properties": {
                                                "description": "Properties of plugin aws:psMoudle.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "description": "id of the step."
                                                        },
                                                        "runCommand": {
                                                            "description": "The PowerShell command to run after the module is installed",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "default": "{{ runCommand }}"
                                                        },
                                                        "source": {
                                                            "type": "string",
                                                            "description": "The URL or local path on the instance to the application .zip file.",
                                                            "default": "{{ source }}"
                                                        },
                                                        "sourceHash": {
                                                            "type": "string",
                                                            "description": "The SHA256 hash of the .zip file.",
                                                            "default": "{{ sourceHash }}"
                                                        },
                                                        "timeoutSeconds": {
                                                            "type": ["string", "integer"],
                                                            "description": "The time in seconds for a command to be completed before it is considered to have failed.",
                                                            "default": "{{ timeoutSeconds }}"
                                                        },
                                                        "workingDirectory": {
                                                            "type": "string",
                                                            "description": "The path to the working directory on your instance.",
                                                            "default": "{{ workingDirectory }}"
                                                        }
                                                    },
                                                    "required": ["source"],
                                                    "additionalProperties": false
                                                }
                                            }
                                        }
                                    },
                                    "aws:runPowerShellScript": {
                                        "description": "Run PowerShell scripts or specify the path to a script to run. This plugin runs on Microsoft Windows Server and Linux operating systems.",
                                        "properties": {
                                            "properties": {
                                                "description": "Properties of plugin aws:runPowerShellScript.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "description": "id of the step."
                                                        },
                                                        "runCommand": {
                                                            "description": "Specify the commands to run or the path to an existing script on the instance.",
                                                            "default": "{{ runCommand }}"
                                                        },
                                                        "timeoutSeconds": {
                                                            "type": ["string", "integer"],
                                                            "description": "The time in seconds for a command to be completed before it is considered to have failed. When the timeout is reached, Systems Manager stops the command execution.",
                                                            "default": "{{ timeoutSeconds }}"
                                                        },
                                                        "workingDirectory": {
                                                            "type": "string",
                                                            "description": "The path to the working directory on your instance.",
                                                            "default": "{{ workingDirectory }}"
                                                        }
                                                    },
                                                    "required": ["runCommand"],
                                                    "additionalProperties": false
                                                }
                                            }
                                        }
                                    },
                                    "aws:runShellScript": {
                                        "description": "Run Linux shell scripts or specify the path to a script to run. This plugin only runs on Linux operating systems.",
                                        "properties": {
                                            "properties": {
                                                "type": "array",
                                                "description": "Properties of plugin aws:runShellScript.",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "description": "id of the step."
                                                        },
                                                        "runCommand": {
                                                            "description": "Specify the commands to run or the path to an existing script on the instance.",
                                                            "default": "{{ runCommand }}"
                                                        },
                                                        "timeoutSeconds": {
                                                            "type": ["string", "integer"],
                                                            "description": "The time in seconds for a command to be completed before it is considered to have failed. When the timeout is reached, Systems Manager stops the command execution.",
                                                            "default": "{{ timeoutSeconds }}"
                                                        },
                                                        "workingDirectory": {
                                                            "type": "string",
                                                            "description": "The path to the working directory on your instance.",
                                                            "default": "{{ workingDirectory }}"
                                                        }
                                                    },
                                                    "required": ["runCommand"]
                                                }
                                            }
                                        }
                                    },
                                    "aws:updateAgent": {
                                        "description": "Update the EC2Config service to the latest version or specify an older version. This plugin only runs on Microsoft Windows Server operating systems.",
                                        "properties": {
                                            "properties": {
                                                "type": "object",
                                                "description": "Properties of plugin aws:updateAgent.",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "description": "id of the step."
                                                    },
                                                    "agentName": {
                                                        "type": "string",
                                                        "description": "EC2Config. This is the name of the agent that runs the EC2Config service.",
                                                        "default": "Ec2Config"
                                                    },
                                                    "source": {
                                                        "type": "string",
                                                        "description": "",
                                                        "default": "https://s3.{Region}.amazonaws.com/aws-ssm-{Region}/manifest.json"
                                                    },
                                                    "allowDowngrade": {
                                                        "type": ["string", "boolean"],
                                                        "description": "Allow the EC2Config service to be downgraded to an earlier version. If set to false, the service can be upgraded to newer versions only (default). If set to true, specify the earlier version.",
                                                        "default": "{{ allowDowngrade }}"
                                                    },
                                                    "targetVersion": {
                                                        "type": "string",
                                                        "description": "A specific version of the EC2Config service to install. If not specified, the service will be updated to the latest version.",
                                                        "default": "{{ targetVersion }}"
                                                    }
                                                },
                                                "required": ["agentName", "source"],
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "aws:updateSsmAgent": {
                                        "description": "Update the SSM Agent to the latest version or specify an older version. This plugin runs on Linux and Windows Server operating systems.",
                                        "properties": {
                                            "properties": {
                                                "type": "array",
                                                "description": "Properties of plugin aws:updateSsmAgent.",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "description": "id of the step."
                                                        },
                                                        "agentName": {
                                                            "type": "string",
                                                            "description": "amazon-ssm-agent. This is the name of the Systems Manager agent that processes requests and runs commands on the instance.",
                                                            "default": "amazon-ssm-agent"
                                                        },
                                                        "source": {
                                                            "type": "string",
                                                            "description": "",
                                                            "default": "https://s3.{Region}.amazonaws.com/aws-ssm-{Region}/manifest.json"
                                                        },
                                                        "allowDowngrade": {
                                                            "type": ["string", "boolean"],
                                                            "description": "Allow the EC2Config service to be downgraded to an earlier version. If set to false, the service can be upgraded to newer versions only (default). If set to true, specify the earlier version.",
                                                            "default": "{{ allowDowngrade }}"
                                                        },
                                                        "targetVersion": {
                                                            "type": "string",
                                                            "description": "A specific version of the EC2Config service to install. If not specified, the service will be updated to the latest version.",
                                                            "default": "{{ targetVersion }}"
                                                        }
                                                    },
                                                    "required": ["agentName", "source", "allowDowngrade"],
                                                    "additionalProperties": false
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "schemaVersion": {
                                "const": "2.2"
                            }
                        }
                    },
                    "then": {
                        "runtimeConfig": {
                            "not": {}
                        },
                        "properties": {
                            "mainSteps": {
                                "items": {
                                    "properties": {
                                        "action": {
                                            "enum": [
                                                "aws:applications",
                                                "aws:cloudWatch",
                                                "aws:configureDocker",
                                                "aws:configurePackage",
                                                "aws:domainJoin",
                                                "aws:downloadContent",
                                                "aws:psModule",
                                                "aws:refreshAssociation",
                                                "aws:runDockerAction",
                                                "aws:runDocument",
                                                "aws:runPowerShellScript",
                                                "aws:runShellScript",
                                                "aws:softwareInventory",
                                                "aws:updateAgent",
                                                "aws:updateSsmAgent"
                                            ]
                                        },
                                        "precondition": {
                                            "type": "object",
                                            "description": "Preconditions for this step."
                                        }
                                    },
                                    "allOf": [
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:applications"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Install, repair, or uninstall applications on an EC2 instance. This plugin only runs on Windows Server operating systems.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "action": {
                                                                "description": "The action to take.",
                                                                "type": "string",
                                                                "oneOf": [
                                                                    {
                                                                        "enum": ["Install", "Repair", "Uninstall"]
                                                                    },
                                                                    {
                                                                        "pattern": "^{{[ ]{0,1}[a-zA-Z_.]+[ ]{0,1}}}$"
                                                                    }
                                                                ]
                                                            },
                                                            "source": {
                                                                "type": "string",
                                                                "description": "The URL of the .msi file for the application."
                                                            },
                                                            "parameters": {
                                                                "type": "string",
                                                                "description": "The parameters for the installer."
                                                            },
                                                            "sourceHash": {
                                                                "type": "string",
                                                                "description": "The SHA256 hash of the .msi file."
                                                            }
                                                        },
                                                        "required": ["action", "source"]
                                                    }
                                                },
                                                "required": ["inputs"]
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:cloudWatch"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Export data from Windows Server to Amazon CloudWatch or Amazon CloudWatch Logs and monitor the data using CloudWatch metrics. This plugin only runs on Windows Server operating systems.",
                                                "properties": {
                                                    "settings": {
                                                        "description": "Settings for cloudWatch.",
                                                        "type": "object"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:configureDocker"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "(Schema version 2.0 or later) Configure an instance to work with containers and Docker. This plugin is supported on Linux and Windows Server operating systems.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "action": {
                                                                "description": "The type of action to perform. Install | Uninstall | set as parameter.",
                                                                "type": "string",
                                                                "anyOf": [
                                                                    {
                                                                        "enum": ["Install", "Uninstall", "{{ action }}"]
                                                                    },
                                                                    {
                                                                        "pattern": "^{{[ ]{0,1}[a-zA-Z_.]+[ ]{0,1}}}$"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["action"]
                                                    }
                                                },
                                                "required": ["inputs"]
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:configurePackage"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "(Schema version 2.0 or later) Install or uninstall a Distributor package. You can install the latest version, default version, or a version of the package you specify. Packages provided by AWS are also supported. This plugin runs on Windows Server and Linux operating systems, but not all the available packages are supported on Linux operating systems.                                               Available AWS packages for Windows Server include the following: AWSPVDriver, AWSNVMe, AwsEnaNetworkDriver, AwsVssComponents, AmazonCloudWatchAgent, and AWSSupport-EC2Rescue. Available AWS packages for Linux operating systems include the following: AmazonCloudWatchAgent and AWSSupport-EC2Rescue.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "name": {
                                                                "description": "The name of the AWS package to install or uninstall. Available packages include the following: AWSPVDriver, AwsEnaNetworkDriver, AwsVssComponents, and AmazonCloudWatchAgent.",
                                                                "type": "string"
                                                            },
                                                            "action": {
                                                                "description": "Install or uninstall a package.",
                                                                "type": "string",
                                                                "anyOf": [
                                                                    {
                                                                        "enum": ["Install", "Uninstall"]
                                                                    },
                                                                    {
                                                                        "pattern": "^{{[ ]{0,1}[a-zA-Z_.]+[ ]{0,1}}}$"
                                                                    }
                                                                ]
                                                            },
                                                            "installationType": {
                                                                "description": "The type of installation to perform. If you specify Uninstall and reinstall, the package is completely uninstalled, and then reinstalled. The application is unavailable until the reinstallation completes. If you specify In-place update, only new or changed files are added to the existing installation according you instructions you provide in an update script. The application remains available throughout the update process. Uninstall and reinstall is the default value.",
                                                                "type": "string",
                                                                "anyOf": [
                                                                    {
                                                                        "enum": [
                                                                            "Uninstall and reinstall",
                                                                            "In-place update"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "pattern": "^{{[ ]{0,1}[a-zA-Z_.]+[ ]{0,1}}}$"
                                                                    }
                                                                ]
                                                            },
                                                            "version": {
                                                                "description": "A specific version of the package to install or uninstall. If installing, the system installs the latest published version, by default. If uninstalling, the system uninstalls the currently installed version, by default. If no installed version is found, the latest published version is downloaded, and the uninstall action is run.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": ["name", "action"]
                                                    }
                                                },
                                                "required": ["inputs"]
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:domainJoin"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Join an EC2 instance to a domain. This plugin only runs on Windows Server operating systems.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "directoryId": {
                                                                "description": "The ID of the directory. Example d-1234567890",
                                                                "type": "string"
                                                            },
                                                            "directoryName": {
                                                                "description": "The name of the domain.",
                                                                "type": "string"
                                                            },
                                                            "directoryOU": {
                                                                "description": "The organizational unit (OU).",
                                                                "type": "string"
                                                            },
                                                            "dnsIpAddresses": {
                                                                "description": "The IP addresses of the DNS servers.",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "required": ["directoryId", "directoryName"]
                                                    }
                                                },
                                                "required": ["inputs"]
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:downloadContent"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "(Schema version 2.0 or later) Download SSM documents and scripts from remote locations. This plugin is supported on Linux and Windows Server operating systems.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "sourceType": {
                                                                "description": "The download source. Systems Manager currently supports the following source types for downloading scripts and SSM documents: GitHub, S3, and SSMDocument.",
                                                                "type": "string",
                                                                "anyOf": [
                                                                    {
                                                                        "enum": ["Github", "S3", "SSMDocument"]
                                                                    },
                                                                    {
                                                                        "pattern": "^{{[ ]{0,1}[a-zA-Z_.]+[ ]{0,1}}}$"
                                                                    }
                                                                ]
                                                            },
                                                            "sourceInfo": {
                                                                "description": "The information required to retrieve the content from the required source.",
                                                                "type": ["object", "string"]
                                                            },
                                                            "destinationPath": {
                                                                "description": "An optional local path on the instance where you want to download the file. If you don't specify a path, the content is downloaded to a path relative to your command ID.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "allOf": [
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "sourceType": {
                                                                            "const": "Github"
                                                                        },
                                                                        "sourceInfo": {
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "properties": {
                                                                        "sourceInfo": {
                                                                            "properties": {
                                                                                "owner": {
                                                                                    "description": "The repository owner.",
                                                                                    "type": "string"
                                                                                },
                                                                                "repository": {
                                                                                    "description": "The name of the repository.",
                                                                                    "type": "string"
                                                                                },
                                                                                "path": {
                                                                                    "description": "The path to the file or directory you want to download.",
                                                                                    "type": "string"
                                                                                },
                                                                                "getOptions": {
                                                                                    "description": " Extra options to retrieve content from a branch other than master or from a specific commit in the repository. getOptions can be omitted if you are using the latest commit in the master branch.\nThis parameter uses the following format:\n\tbranch:branch_name\n\tThe default is master\nbranch is required only if your SSM Document is stored in a branch other than master\n\n\tcommitID:commitID\n\tThe default is head.\n\tTo use the version of your SSM document in a commit other than the latest, specify the full commit ID.",
                                                                                    "type": "string",
                                                                                    "default": "branch:branch_name"
                                                                                },
                                                                                "tokenInfo": {
                                                                                    "description": "The Systems Manager parameter (a SecureString parameter) where you store your GitHub access token information, in the format {{ssm-secure:secure-string-token-name}}.",
                                                                                    "default": "{{ssm-secure:secure-string-token}}"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "sourceType": {
                                                                            "const": "S3"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "properties": {
                                                                        "sourceInfo": {
                                                                            "properties": {
                                                                                "path": {
                                                                                    "description": "The URL to the file or directory you want to download from Amazon S3.",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "sourceType": {
                                                                            "const": "SSMDocument"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "properties": {
                                                                        "sourceInfo": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "Option 1:\n\tThe name and version of the document in the following format: name:version. Version is optional.\n\nOption 2:\n\tThe ARN for the document in the following format: arn:aws:ssm:region:account_id:document/document_name .",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                "required": ["inputs"]
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:psModule"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Install PowerShell modules on an EC2 instance. This plugin only runs on Windows Server operating systems.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "runCommand": {
                                                                "description": "The PowerShell command to run after the module is installed.",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "source": {
                                                                "description": "The URL or local path on the instance to the application .zip file.",
                                                                "type": "string"
                                                            },
                                                            "sourceHash": {
                                                                "description": "The SHA256 hash of the .zip file.",
                                                                "type": "string"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The time in seconds for a command to be completed before it is considered to have failed.",
                                                                "type": ["string", "number"]
                                                            },
                                                            "workingDirectory": {
                                                                "description": "The path to the working directory on your instance.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": ["source"]
                                                    }
                                                },
                                                "required": ["inputs"]
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:refreshAssociation"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "properties": {
                                                    "inputs": {
                                                        "description": "(Schema version 2.0 or later) Refresh (force apply) an association on demand. This action will change the system state based on what is defined in the selected association or all associations bound to the targets. This plugin runs on Linux and Microsoft Windows Server operating systems.",
                                                        "properties": {
                                                            "associationIds": {
                                                                "description": "List of association IDs. If empty, all associations bound to the specified target are applied.",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:runDockerAction"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "(Schema version 2.0 or later) Run Docker actions on containers. This plugin runs on Linux and Microsoft Windows Server operating systems.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "action": {
                                                                "description": "The type of action to perform.",
                                                                "type": "string"
                                                            },
                                                            "container": {
                                                                "description": "The Docker container ID.",
                                                                "type": "string"
                                                            },
                                                            "image": {
                                                                "description": "The Docker image name.",
                                                                "type": "string"
                                                            },
                                                            "cmd": {
                                                                "description": "The container command.",
                                                                "type": "string"
                                                            },
                                                            "memory": {
                                                                "description": "The container memory limit.",
                                                                "type": "string"
                                                            },
                                                            "cpuShares": {
                                                                "description": "The container CPU shares (relative weight).",
                                                                "type": "string"
                                                            },
                                                            "volume": {
                                                                "description": "The container volume mounts.",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "env": {
                                                                "description": "The container environment variables.",
                                                                "type": "string"
                                                            },
                                                            "user": {
                                                                "description": "The container user name.",
                                                                "type": "string"
                                                            },
                                                            "publish": {
                                                                "description": "The container published ports.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": ["action"]
                                                    }
                                                },
                                                "required": ["inputs"]
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:runDocument"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "(Schema version 2.0 or later) Runs SSM documents stored in Systems Manager or on a local share. You can use this plugin with the aws:downloadContent plugin to download an SSM document from a remote location to a local share, and then run it. This plugin is supported on Linux and Windows Server operating systems.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "documentType": {
                                                                "description": "The document type to run. You can run local documents (LocalPath) or documents stored in Systems Manager (SSMDocument).",
                                                                "type": "string",
                                                                "enum": ["LocalPath", "SSMDocument"]
                                                            },
                                                            "documentPath": {
                                                                "description": "The path to the document. If documentType is LocalPath, then specify the path to the document on the local share. If documentType is SSMDocument, then specify the name of the document.",
                                                                "type": "string"
                                                            },
                                                            "documentParameters": {
                                                                "description": "Parameters for the document",
                                                                "type": ["object", "string"]
                                                            }
                                                        },
                                                        "required": ["documentType"]
                                                    }
                                                },
                                                "required": ["inputs"]
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:runPowerShellScript"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Run PowerShell scripts or specify the path to a script to run. This plugin runs on Microsoft Windows Server and Linux operating systems.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "runCommand": {
                                                                "description": "Specify the commands to run or the path to an existing script on the instance.",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The time in seconds for a command to be completed before it is considered to have failed. When the timeout is reached, Systems Manager stops the command execution.",
                                                                "type": ["string", "number"]
                                                            },
                                                            "workingDirectory": {
                                                                "description": "The path to the working directory on your instance.",
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:runShellScript"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Run Linux shell scripts or specify the path to a script to run. This plugin only runs on Linux operating systems.",
                                                "properties": {
                                                    "inputs": {
                                                        "runCommand": {
                                                            "description": "Specify the commands to run or the path to an existing script on the instance.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "timeoutSeconds": {
                                                            "description": "The time in seconds for a command to be completed before it is considered to have failed. When the timeout is reached, Systems Manager stops the command execution.",
                                                            "type": ["string", "number"]
                                                        },
                                                        "workingDirectory": {
                                                            "description": "The path to the working directory on your instance.",
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:softwareInventory"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "(Schema version 2.0 or later) Gather metadata about applications, files, and configurations on your managed instances. This plugin runs on Linux and Microsoft Windows Server operating systems.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "applications": {
                                                                "description": "(Optional) Collect metadata for installed applications.",
                                                                "type": "string"
                                                            },
                                                            "awsComponents": {
                                                                "description": "(Optional) Collect metadata for AWS components like amazon-ssm-agent.",
                                                                "type": "string"
                                                            },
                                                            "files": {
                                                                "description": "(Optional, requires SSM Agent version 2.2.64.0 or later) Collect metadata for files, including file names, the time files were created, the time files were last modified and accessed, and file sizes, to name a few.",
                                                                "type": "string"
                                                            },
                                                            "networkConfig": {
                                                                "description": "(Optional) Collect metadata for network configurations.",
                                                                "type": "string"
                                                            },
                                                            "windowsUpdates": {
                                                                "description": "(Optional) Collect metadata for all Windows updates.",
                                                                "type": "string"
                                                            },
                                                            "instanceDetailedInformation": {
                                                                "description": "(Optional) Collect more instance information than is provided by the default inventory plugin (aws:instanceInformation), including CPU model, speed, and the number of cores, to name a few.",
                                                                "type": "string"
                                                            },
                                                            "services": {
                                                                "description": "(Optional, Windows OS only, requires SSM Agent version 2.2.64.0 or later) Collect metadata for service configurations.",
                                                                "type": "string"
                                                            },
                                                            "windowsRegistry": {
                                                                "description": "(Optional, Windows OS only, requires SSM Agent version 2.2.64.0 or later) Collect Windows Registry keys and values. You can choose a key path and collect all keys and values recursively. You can also collect a specific registry key and its value for a specific path. Inventory collects the key path, name, type, and the value.",
                                                                "type": "string"
                                                            },
                                                            "windowsRoles": {
                                                                "description": "(Optional, Windows OS only, requires SSM Agent version 2.2.64.0 or later) Collect metadata for Microsoft Windows role configurations.",
                                                                "type": "string"
                                                            },
                                                            "customInventory": {
                                                                "description": "(Optional) Collect custom inventory data.",
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:updateAgent"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Update the EC2Config service to the latest version or specify an older version. This plugin only runs on Microsoft Windows Server operating systems.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "agentName": {
                                                                "description": "EC2Config. This is the name of the agent that runs the EC2Config service.",
                                                                "type": "string"
                                                            },
                                                            "allowDowngrade": {
                                                                "description": "Allow the EC2Config service to be downgraded to an earlier version. If set to false, the service can be upgraded to newer versions only (default). If set to true, specify the earlier version.",
                                                                "type": ["string", "boolean"]
                                                            },
                                                            "source": {
                                                                "description": "The location where Systems Manager copies the version of EC2Config to install. You can't change this location.",
                                                                "type": "string"
                                                            },
                                                            "targetVersion": {
                                                                "description": "A specific version of the EC2Config service to install. If not specified, the service will be updated to the latest version.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": ["source"]
                                                    }
                                                },
                                                "required": ["inputs"]
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:updateSsmAgent"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Update the SSM Agent to the latest version or specify an older version. This plugin runs on Linux and Windows Server operating systems.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "agentName": {
                                                                "description": "amazon-ssm-agent. This is the name of the Systems Manager agent that processes requests and runs commands on the instance.",
                                                                "type": "string"
                                                            },
                                                            "allowDowngrade": {
                                                                "description": "Allow the SSM Agent to be downgraded to an earlier version. If set to false, the agent can be upgraded to newer versions only (default). If set to true, specify the earlier version.",
                                                                "type": ["string", "boolean"]
                                                            },
                                                            "source": {
                                                                "description": "The location where Systems Manager copies the SSM Agent version to install. You can't change this location.",
                                                                "type": "string"
                                                            },
                                                            "targetVersion": {
                                                                "description": "A specific version of SSM Agent to install. If not specified, the agent will be updated to the latest version.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": ["source", "agentName", "allowDowngrade"]
                                                    }
                                                },
                                                "required": ["inputs"]
                                            }
                                        },
                                        {
                                            "defaultSnippets": [
                                                {
                                                    "label": "Snippet: aws:applications",
                                                    "description": "Insert snippet for aws:applications\n\nInstall, repair, or uninstall applications on an EC2 instance. This plugin only runs on Windows Server operating systems.",
                                                    "body": {
                                                        "action": "aws:applications",
                                                        "name": "exampleApplications",
                                                        "inputs": {
                                                            "action": "Install",
                                                            "source": "{{ source }}"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:configureDocker",
                                                    "description": "Insert snippet for aws:configureDocker\n\n(Schema version 2.0 or later) Configure an instance to work with containers and Docker. This plugin is supported on Linux and Windows Server operating systems.",
                                                    "body": {
                                                        "action": "aws:configureDocker",
                                                        "name": "exampleConfigureDocker",
                                                        "inputs": {
                                                            "action": "{{ action }}"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:configurePackage",
                                                    "description": "Insert snippet for aws:configurePackage\n\n(Schema version 2.0 or later) Install or uninstall a Distributor package. You can install the latest version, default version, or a version of the package you specify. Packages provided by AWS are also supported. This plugin runs on Windows Server and Linux operating systems, but not all the available packages are supported on Linux operating systems.\n\nAvailable AWS packages for Windows Server include the following: AWSPVDriver, AWSNVMe, AwsEnaNetworkDriver, AwsVssComponents, AmazonCloudWatchAgent, and AWSSupport-EC2Rescue.\n\nAvailable AWS packages for Linux operating systems include the following: AmazonCloudWatchAgent and AWSSupport-EC2Rescue.",
                                                    "body": {
                                                        "action": "aws:configurePackage",
                                                        "name": "exampleConfigurePackage",
                                                        "inputs": {
                                                            "name": "{{ name }}",
                                                            "action": "{{ action }}"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:domainJoin",
                                                    "description": "Insert snippet for aws:domainJoin\n\nJoin an EC2 instance to a domain. This plugin only runs on Windows Server operating systems.",
                                                    "body": {
                                                        "action": "aws:domainJoin",
                                                        "name": "exampleDomainJoin",
                                                        "inputs": {
                                                            "directoryId": "{{ directoryId }}",
                                                            "directoryName": "{{ directoryName }}"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:downloadContent",
                                                    "description": "Insert snippet for aws:downloadContent\n\n(Schema version 2.0 or later) Download SSM documents and scripts from remote locations. This plugin is supported on Linux and Windows Server operating systems.",
                                                    "body": {
                                                        "action": "aws:downloadContent",
                                                        "name": "exampleDownloadContent",
                                                        "inputs": {
                                                            "sourceType": "Github",
                                                            "sourceInfo": {
                                                                "owner": "TestUser",
                                                                "repository": "GitHubTest",
                                                                "path": "scripts/python/test-script",
                                                                "getOptions": "branch:master",
                                                                "tokenInfo": "{{ssm-secure:secure-string-token}}"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:psModule",
                                                    "description": "Insert snippet for aws:psModule\n\nInstall PowerShell modules on an EC2 instance. This plugin only runs on Windows Server operating systems.",
                                                    "body": {
                                                        "action": "aws:psModule",
                                                        "name": "examplePsModule",
                                                        "inputs": {
                                                            "source": "{{ source }}"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:updateAgent",
                                                    "description": "Insert snippet for aws:updateAgent\n\nUpdate the EC2Config service to the latest version or specify an older version. This plugin only runs on Microsoft Windows Server operating systems.",
                                                    "body": {
                                                        "action": "aws:updateAgent",
                                                        "name": "exampleUpdateAgent",
                                                        "inputs": {
                                                            "agentName": "Ec2Config",
                                                            "source": "https://s3.{Region}.amazonaws.com/aws-ssm-{Region}/manifest.json"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:updateSsmAgent",
                                                    "description": "Insert snippet for aws:updateSsmAgent\n\nUpdate the SSM Agent to the latest version or specify an older version. This plugin runs on Linux and Windows Server operating systems.",
                                                    "body": {
                                                        "action": "aws:updateSsmAgent",
                                                        "name": "exampleUpdateSSMAgent",
                                                        "inputs": {
                                                            "agentName": "amazon-ssm-agent",
                                                            "source": "https://s3.{Region}.amazonaws.com/amazon-ssm-{Region}/ssm-agent-manifest.json",
                                                            "allowDowngrade": "{{ allowDowngrade }}"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:softwareInventory",
                                                    "description": "Insert snippet for aws:softwareInventory\n\n(Schema version 2.0 or later) Gather metadata about applications, files, and configurations on your managed instances. This plugin runs on Linux and Microsoft Windows Server operating systems.",
                                                    "body": {
                                                        "action": "aws:softwareInventory",
                                                        "name": "exampleSoftwareInventory",
                                                        "inputs": {
                                                            "applications": "{{ applications }}",
                                                            "awsComponents": "{{ awsComponents }}",
                                                            "networkConfig": "{{ networkConfig }}",
                                                            "files": "{{ files }}",
                                                            "services": "{{ services }}",
                                                            "windowsRoles": "{{ windowsRoles }}",
                                                            "windowsRegistry": "{{ windowsRegistry}}",
                                                            "windowsUpdates": "{{ windowsUpdates }}",
                                                            "instanceDetailedInformation": "{{ instanceDetailedInformation }}",
                                                            "customInventory": "{{ customInventory }}"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:runShellScript",
                                                    "description": "Insert snippet for aws:runShellScript\n\nRun Linux shell scripts or specify the path to a script to run. This plugin only runs on Linux operating systems.",
                                                    "body": {
                                                        "action": "aws:runShellScript",
                                                        "name": "exampleRunShellScript",
                                                        "inputs": {
                                                            "timeoutSeconds": "60",
                                                            "runCommand": ["{{ commands }}"]
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:runPowerShellScript",
                                                    "description": "Insert snippet for aws:runPowerShellScript\n\nRun PowerShell scripts or specify the path to a script to run. This plugin runs on Microsoft Windows Server and Linux operating systems.",
                                                    "body": {
                                                        "action": "aws:runPowerShellScript",
                                                        "name": "exampleRunPowerShellScript",
                                                        "inputs": {
                                                            "timeoutSeconds": "60",
                                                            "runCommand": ["{{ commands }}"]
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:runDocument",
                                                    "description": "Insert snippet for aws:runDocument\n\n(Schema version 2.0 or later) Runs SSM documents stored in Systems Manager or on a local share. You can use this plugin with the aws:downloadContent plugin to download an SSM document from a remote location to a local share, and then run it. This plugin is supported on Linux and Windows Server operating systems.",
                                                    "body": {
                                                        "action": "aws:runDocument",
                                                        "name": "exampleRunDocument",
                                                        "inputs": {
                                                            "documentType": "{{ documentType }}"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:runDockerAction",
                                                    "description": "Insert snippet for aws:runDockerAction\n\n(Schema version 2.0 or later) Run Docker actions on containers. This plugin runs on Linux and Microsoft Windows Server operating systems.",
                                                    "body": {
                                                        "action": "aws:runDockerAction",
                                                        "name": "exampleRunDockerAction",
                                                        "inputs": {
                                                            "action": "{{ action }}",
                                                            "container": "{{ container }}",
                                                            "image": "{{ image }}",
                                                            "memory": "{{ memory }}",
                                                            "cpuShares": "{{ cpuShares }}",
                                                            "volume": "{{ volume }}",
                                                            "cmd": "{{ cmd }}",
                                                            "env": "{{ env }}",
                                                            "user": "{{ user }}",
                                                            "publish": "{{ publish }}"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:refreshAssociation",
                                                    "description": "Insert snippet for aws:refreshAssociation\n\n(Schema version 2.0 or later) Refresh (force apply) an association on demand. This action will change the system state based on what is defined in the selected association or all associations bound to the targets. This plugin runs on Linux and Microsoft Windows Server operating systems.",
                                                    "body": {
                                                        "action": "aws:refreshAssociation",
                                                        "name": "exampleRefreshAssociation",
                                                        "inputs": {
                                                            "associationIds": ["{{ associationIds }}"]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "schemaVersion": {
                                "const": "0.3"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "runtimeConfig": {
                                "not": {}
                            },
                            "mainSteps": {
                                "items": {
                                    "properties": {
                                        "action": {
                                            "enum": [
                                                "aws:approve",
                                                "aws:assertAwsResourceProperty",
                                                "aws:branch",
                                                "aws:changeInstanceState",
                                                "aws:copyImage",
                                                "aws:createImage",
                                                "aws:createStack",
                                                "aws:createTags",
                                                "aws:deleteImage",
                                                "aws:deleteStack",
                                                "aws:executeAutomation",
                                                "aws:executeAwsApi",
                                                "aws:executeScript",
                                                "aws:executeStateMachine",
                                                "aws:invokeLambdaFunction",
                                                "aws:pause",
                                                "aws:runCommand",
                                                "aws:runInstances",
                                                "aws:sleep",
                                                "aws:waitForAwsResourceProperty"
                                            ]
                                        },
                                        "maxAttemps": {
                                            "default": 1
                                        },
                                        "onFailure": {
                                            "pattern": "((^|, )(Abort|Continue|step:\\w+))$"
                                        },
                                        "nextStep": {
                                            "type": "string",
                                            "description": "Specifies which step in an Automation workflow to process next after successfully completing a step."
                                        },
                                        "timeoutSeconds": {
                                            "description": "The execution timeout value for the step. If the timeout is reached and the value of maxAttempts is greater than 1, then the step is not considered to have timed out until all retries have been attempted."
                                        },
                                        "isEnd": {
                                            "type": ["string", "boolean"],
                                            "default": false
                                        },
                                        "isCritical": {
                                            "type": ["string", "boolean"],
                                            "default": true
                                        }
                                    },
                                    "allOf": [
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:approve"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Temporarily pauses an Automation execution until designated principals either approve or reject the action. After the required number of approvals is reached, the Automation execution resumes. You can insert the approval step any place in the mainSteps section of your Automation document.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "NotificationArn": {
                                                                "description": "The ARN of an Amazon SNS topic for Automation approvals. When you specify an aws:approve step in an Automation document, Automation sends a message to this topic letting principals know that they must either approve or reject an Automation step. The title of the Amazon SNS topic must be prefixed with \"Automation\".",
                                                                "type": "string"
                                                            },
                                                            "Message": {
                                                                "description": "The information you want to include in the SNS topic when the approval request is sent. The maximum message length is 4096 characters.",
                                                                "type": "string"
                                                            },
                                                            "MinRequiredApprovals": {
                                                                "description": "The minimum number of approvals required to resume the Automation execution. If you don't specify a value, the system defaults to one. The value for this parameter must be a positive number. The value for this parameter can't exceed the number of approvers defined by the Approvers parameter.",
                                                                "type": ["string", "integer"]
                                                            },
                                                            "Approvers": {
                                                                "description": "A list of AWS authenticated principals who are able to either approve or reject the action. The maximum number of approvers is 10. You can specify principals by using any of the following formats:\n\nAn AWS Identity and Access Management (IAM) user name\n\nAn IAM user ARN\n\nAn IAM role ARN\n\nAn IAM assume role user ARN"
                                                            }
                                                        },
                                                        "required": ["Approvers"]
                                                    },
                                                    "outputs": {
                                                        "properties": {
                                                            "ApprovalStatus": {
                                                                "description": "The approval status of the step. The status can be one of the following: Approved, Rejected, or Waiting. Waiting means that Automation is waiting for input from approvers.",
                                                                "type": "string"
                                                            },
                                                            "ApproverDecisions": {
                                                                "description": "A JSON map that includes the approval decision of each approver.",
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                },
                                                "required": ["inputs"]
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:assertAwsResourceProperty"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "The aws:assertAwsResourceProperty action enables you to assert a specific resource state or event state for a specific Automation step.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "Service": {
                                                                "description": "The AWS service namespace that contains the API action that you want to run. For example, the namespace for Systems Manager is ssm. The namespace for Amazon EC2 is ec2. You can view a list of supported AWS service namespaces in the Available Services section of the AWS CLI Command Reference.",
                                                                "type": "string"
                                                            },
                                                            "Api": {
                                                                "description": "The name of the API action that you want to run. You can view the API actions (also called methods) by choosing a service in the left navigation on the following Services Reference page. Choose a method in the Client section for the service that you want to invoke. For example, all API actions (methods) for Amazon Relational Database Service (Amazon RDS) are listed on the following page: Amazon RDS methods.",
                                                                "type": "string"
                                                            },
                                                            "PropertySelector": {
                                                                "description": "The JSONPath to a specific attribute in the response object. You can view the response objects by choosing a service in the left navigation on the following Services Reference page. Choose a method in the Client section for the service that you want to invoke."
                                                            },
                                                            "DesiredValues": {
                                                                "description": "The expected status or state on which to continue the Automation workflow. If you specify a Boolean value, you must use a capital letter such as True or False."
                                                            }
                                                        },
                                                        "additionalProperties": {
                                                            "description": "One or more API action inputs. You can view the available inputs (also called parameters) by choosing a service in the left navigation on the following Services Reference page. Choose a method in the Client section for the service that you want to invoke."
                                                        },
                                                        "required": [
                                                            "Service",
                                                            "Api",
                                                            "PropertySelector",
                                                            "DesiredValues"
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:branch"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "The aws:branch action enables you to create a dynamic Automation workflow that evaluates different choices in a single step and then jumps to a different step in the Automation document based on the results of that evaluation. \n\nWhen you specify the aws:branch action for a step, you specify Choices that the workflow must evaluate. The Choices can be based on either a value that you specified in the Parameters section of the Automation document, or a dynamic value generated as the output from the previous step. The Automation workflow evaluates each choice by using a Boolean expression. If the first choice is true, then the workflow jumps to the step designated for that choice. If the first choice is false, the workflow evaluates the next choice. The workflow continues evaluating each choice until it process a true choice. The workflow then jumps to the designated step for the true choice. \n\nIf none of the choices are true, the workflow checks to see if the step contains a default value. A default value defines a step that the workflow should jump to if none of the choices are true. If no default value is specified for the step, then the Automation workflow processes the next step in the document.\n\nThe aws:branch action supports complex choice evaluations by using a combination of And, Not, and Or operators.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "Choices": {
                                                                "description": "One or more expressions that the Automation should evaluate when determining the next step to process. Choices are evaluated by using a Boolean expression.",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "NextStep": {
                                                                            "description": "The next step in the Automation document to process if the designated choice is true.",
                                                                            "type": "string"
                                                                        },
                                                                        "Variable": {
                                                                            "description": "Specify either the name of a parameter that is defined in the Parameters section of the Automation document. Or specify an output object from a previous step in the Automation document.",
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "Default": {
                                                                "description": "The name of a step the workflow should jump to if none of the Choices are true.",
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:changeInstanceState"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Changes or asserts the state of the instance.\n\nThis action can be used in assert mode (do not run the API to change the state but verify the instance is in the desired state.) To use assert mode, set the CheckStateOnly parameter to true. This mode is useful when running the Sysprep command on Windows, which is an asynchronous command that can run in the background for a long time. You can ensure that the instance is stopped before you create an AMI.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "InstanceIds": {
                                                                "description": "The IDs of the instances."
                                                            },
                                                            "CheckStateOnlt": {
                                                                "description": "If false, sets the instance state to the desired state. If true, asserts the desired state using polling.",
                                                                "type": ["boolean", "string"],
                                                                "default": false
                                                            },
                                                            "DesiredState": {
                                                                "description": "The desired state. When set to running, this action waits for the Amazon EC2 state to be Running, the Instance Status to be OK, and the System Status to be OK before completing.",
                                                                "type": "string",
                                                                "oneOf": [
                                                                    {
                                                                        "enum": ["running", "stopped", "terminated"]
                                                                    },
                                                                    {
                                                                        "pattern": "^{{[ ]{0,1}[a-zA-Z_.]+[ ]{0,1}}}$"
                                                                    }
                                                                ]
                                                            },
                                                            "Force": {
                                                                "description": "If set, forces the instances to stop. The instances do not have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures. This option is not recommended for EC2 instances for Windows Server.",
                                                                "type": ["string", "boolean"]
                                                            }
                                                        },
                                                        "required": ["InstanceIds", "DesiredState"]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:copyImage"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Copies an AMI from any region into the current region. This action can also encrypt the new AMI.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "SourceRegion": {
                                                                "description": "The region where the source AMI currently exists.",
                                                                "type": "string"
                                                            },
                                                            "SourceImageId": {
                                                                "description": "The AMI ID to copy from the source region.",
                                                                "type": "string"
                                                            },
                                                            "ImageName": {
                                                                "description": "The name for the new image.",
                                                                "type": "string"
                                                            },
                                                            "ImageDescription": {
                                                                "description": "A description for the target image.",
                                                                "type": "string"
                                                            },
                                                            "Encrypted": {
                                                                "description": "Encrypt the target AMI.",
                                                                "type": ["string", "boolean"]
                                                            },
                                                            "KmsKeyId": {
                                                                "description": "The full Amazon Resource Name (ARN) of the AWS Key Management Service CMK to use when encrypting the snapshots of an image during a copy operation.",
                                                                "type": "string"
                                                            },
                                                            "ClientToken": {
                                                                "description": "A unique, case-sensitive identifier that you provide to ensure request idempotency.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": ["SourceRegion", "SourceImageId", "ImageName"]
                                                    },
                                                    "outputs": {
                                                        "properties": {
                                                            "ImageId": {
                                                                "description": "The ID of the copied image."
                                                            },
                                                            "ImageState": {
                                                                "description": "The state of the copied image."
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:createImage"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Creates a new AMI from an instance that is either running or stopped.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "InstanceId": {
                                                                "description": "The ID of the instance.",
                                                                "type": "string"
                                                            },
                                                            "ImageName": {
                                                                "description": "The name for the image.",
                                                                "type": "string"
                                                            },
                                                            "ImageDescription": {
                                                                "description": "A description of the image.",
                                                                "type": "string"
                                                            },
                                                            "NoReboot": {
                                                                "description": "A boolean literal.\n\nBy default, Amazon EC2 attempts to shut down and reboot the instance before creating the image. If the No Reboot option is set to true, Amazon EC2 doesn't shut down the instance before creating the image. When this option is used, file system integrity on the created image can't be guaranteed.\n\nIf you do not want the instance to run after you create an AMI image from it, first use the aws:changeInstanceState – Change or assert instance state action to stop the instance, and then use this aws:createImage action with the NoReboot option set to true.",
                                                                "type": ["string", "boolean"]
                                                            },
                                                            "BlockDeviceMappings": {
                                                                "description": "The block devices for the intance.",
                                                                "type": ["string", "object"]
                                                            }
                                                        },
                                                        "required": ["InstanceId", "ImageName"]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:createStack"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Creates a new AWS CloudFormation stack from a template.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "Capabilities": {
                                                                "description": "A list of values that you specify before AWS CloudFormation can create certain stacks. Some stack templates include resources that can affect permissions in your AWS account. For example, creating new AWS Identity and Access Management (IAM) users can affect permissions in your account. For those stacks, you must explicitly acknowledge their capabilities by specifying this parameter. \n\nValid values include CAPABILITY_IAM, CAPABILITY_NAMED_IAM, and CAPABILITY_AUTO_EXPAND.\n\nIf you have IAM resources, you can specify either capability. If you have IAM resources with custom names, you must specify CAPABILITY_NAMED_IAM. If you don't specify this parameter, this action returns an InsufficientCapabilities error. The following resources require you to specify either CAPABILITY_IAM or CAPABILITY_NAMED_IAM.\n\n",
                                                                "type": ["string", "array"],
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "CAPABILITY_IAM",
                                                                        "CAPABILITY_NAMED_IAM",
                                                                        "CAPABILITY_AUTO_EXPAND"
                                                                    ]
                                                                }
                                                            },
                                                            "ClientRequestToken": {
                                                                "description": "A unique identifier for this CreateStack request. Specify this token if you set maxAttempts in this step to a value greater than 1. By specifying this token, AWS CloudFormation knows that you're not attempting to create a new stack with the same name.",
                                                                "type": "string",
                                                                "pattern": "[a-zA-Z0-9][-a-zA-Z0-9]*",
                                                                "maxLength": 128,
                                                                "minLength": 1
                                                            },
                                                            "DisableRollback": {
                                                                "description": "Set to true to disable rollback of the stack if stack creation failed.\n\nConditional: You can specify either the DisableRollback parameter or the OnFailure parameter, but not both.",
                                                                "type": ["string", "boolean"],
                                                                "default": false
                                                            },
                                                            "NotificationARNs": {
                                                                "description": "The Amazon SNS topic ARNs for publishing stack-related events.",
                                                                "type": ["string", "array"],
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 5
                                                            },
                                                            "onFailure": {
                                                                "description": "Determines the action to take if stack creation failed. You must specify DO_NOTHING, ROLLBACK, or DELETE.\n\nConditional: You can specify either the OnFailure parameter or the DisableRollback parameter, but not both.",
                                                                "type": "string",
                                                                "default": "ROLLBACK",
                                                                "enum": ["DO_NOTHING", "ROLLBACK", "DELETE"]
                                                            },
                                                            "Parameters": {
                                                                "description": "A list of Parameter structures that specify input parameters for the stack.",
                                                                "type": ["string", "array"],
                                                                "items": {
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "ResourceTypes": {
                                                                "description": "The template resource types that you have permissions to work with for this create stack action.",
                                                                "type": ["string", "array"],
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "minItems": 1,
                                                                "maxItems": 256
                                                            },
                                                            "RoleARN": {
                                                                "description": "The Amazon Resource Name (ARN) of an IAM role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants the least amount of privileges.\n\nIf you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.",
                                                                "type": "string",
                                                                "maxLength": 2048,
                                                                "minLength": 20
                                                            },
                                                            "StackName": {
                                                                "description": "The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.\n\nA stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.",
                                                                "type": "string",
                                                                "maxLength": 128
                                                            },
                                                            "StackPolicyBody": {
                                                                "description": "Structure containing the stack policy body.\n\nConditional: You can specify either the StackPolicyBody parameter or the StackPolicyURL parameter, but not both.",
                                                                "type": "string",
                                                                "maxLength": 16384,
                                                                "minLength": 1
                                                            },
                                                            "StackPolicyURL": {
                                                                "description": "Location of a file containing the stack policy. The URL must point to a policy located in an S3 bucket in the same region as the stack. The maximum file size allowed for the stack policy is 16 KB.\n\nConditional: You can specify either the StackPolicyBody parameter or the StackPolicyURL parameter, but not both.",
                                                                "type": "string",
                                                                "maxLength": 1350,
                                                                "minLength": 1
                                                            },
                                                            "Tags": {
                                                                "description": "Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. You can specify a maximum number of 10 tags."
                                                            },
                                                            "TemplateBody": {
                                                                "description": "Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes.\n\nConditional: You can specify either the TemplateBody parameter or the TemplateURL parameter, but not both.",
                                                                "type": "string",
                                                                "minLength": 1
                                                            },
                                                            "TemplateURL": {
                                                                "description": "Location of a file containing the template body. The URL must point to a template that is located in an S3 bucket. The maximum size allowed for the template is 460,800 bytes.\n\nConditional: You can specify either the TemplateBody parameter or the TemplateURL parameter, but not both.",
                                                                "type": "string",
                                                                "maxLength": 1024,
                                                                "minLength": 1
                                                            },
                                                            "TimeoutInMinutes": {
                                                                "description": "The amount of time that can pass before the stack status becomes CREATE_FAILED. If DisableRollback is not set or is set to false, the stack will be rolled back.",
                                                                "type": ["integer", "string"],
                                                                "minimum": 1
                                                            }
                                                        },
                                                        "required": ["StackName"]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:createTags"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Create new tags for EC2 instances or Systems Manager managed instances.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "ResourceIds": {
                                                                "description": "The IDs of the resource(s) to be tagged. If resource type is not “EC2”, this field can contain only a single item.",
                                                                "type": ["string", "array"],
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "Tags": {
                                                                "description": "The tags to associate with resource(s).",
                                                                "type": ["string", "array"],
                                                                "items": {
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "ResourceType": {
                                                                "description": "The type of resource(s) to be tagged. If not supplied, the default value of “EC2” is used.",
                                                                "type": "string",
                                                                "oneOf": [
                                                                    {
                                                                        "enum": [
                                                                            "EC2",
                                                                            "ManagedInstance",
                                                                            "MaintenanceWindow",
                                                                            "Parameter"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "pattern": "^{{[ ]{0,1}[a-zA-Z_.]+[ ]{0,1}}}$"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["ResourceIds", "Tags"]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:deleteImage"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Deletes the specified image and all related snapshots.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "ImageId": {
                                                                "description": "The ID of the image to be deleted.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": ["ImageId"]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:deleteStack"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Deletes an AWS CloudFormation stack.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "ClientRequestToken": {
                                                                "description": "A unique identifier for this DeleteStack request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You can retry DeleteStack requests to verify that AWS CloudFormation received them.",
                                                                "type": "string",
                                                                "oneOf": [
                                                                    {
                                                                        "pattern": "[a-zA-Z][-a-zA-Z0-9]*",
                                                                        "maxLength": 128,
                                                                        "minLength": 1
                                                                    },
                                                                    {
                                                                        "pattern": "^{{[ ]{0,1}[a-zA-Z_.]+[ ]{0,1}}}$"
                                                                    }
                                                                ]
                                                            },
                                                            "StackName": {
                                                                "description": "The name or the unique stack ID that is associated with the stack.",
                                                                "type": "string"
                                                            },
                                                            "RoleARN": {
                                                                "description": "The Amazon Resource Name (ARN) of an IAM role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants the least amount of privileges.\n\nIf you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.",
                                                                "type": "string",
                                                                "maxLength": 2048,
                                                                "minLength": 20
                                                            },
                                                            "RetainResources.member.N": {
                                                                "description": "This input applies only to stacks that are in a DELETE_FAILED state. A list of logical resource IDs for the resources you want to retain. During deletion, AWS CloudFormation deletes the stack, but does not delete the retained resources.\n\nRetaining resources is useful when you can't delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.",
                                                                "type": ["string", "array"]
                                                            }
                                                        },
                                                        "required": ["StackName"]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:executeAutomation"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Runs a secondary Automation workflow by calling a secondary Automation document. With this action, you can create Automation documents for your most common workflows, and reference those documents during an Automation execution. This action can simplify your Automation documents by removing the need to duplicate steps across similar documents.\n\nThe secondary Automation runs in the context of the user who initiated the primary Automation. This means that the secondary Automation uses the same IAM role or user account as the user who started the first Automation.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "DocumentName": {
                                                                "description": "The name of the secondary Automation document to run during the step. The document must belong to the same AWS account as the primary Automation document.",
                                                                "type": "string"
                                                            },
                                                            "DocumentVersion": {
                                                                "description": "The version of the secondary Automation document to run. If not specified, Automation runs the default document version.",
                                                                "type": "string"
                                                            },
                                                            "RuntimeParameters": {
                                                                "description": "Required parameters for the secondary document execution. The mapping uses the following format: {\"parameter1\" : [\"value1\"], \"parameter2\" : [\"value2\"] }",
                                                                "type": ["string", "object"]
                                                            }
                                                        },
                                                        "required": ["DocumentName"]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:executeAwsApi"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Calls and runs AWS API actions. Most API actions are supported, although not all API actions have been tested.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "Service": {
                                                                "description": "The AWS service namespace that contains the API action that you want to run.",
                                                                "type": "string"
                                                            },
                                                            "Api": {
                                                                "description": "The name of the API action that you want to run.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": ["Service"]
                                                    },
                                                    "outputs": {
                                                        "properties": {
                                                            "Name": {
                                                                "description": "A name for the output.",
                                                                "type": "string"
                                                            },
                                                            "Selector": {
                                                                "description": "The JSONPath to a specific attribute in the response object."
                                                            },
                                                            "Type": {
                                                                "description": "The data type for the response element."
                                                            }
                                                        },
                                                        "required": ["Name", "Type", "Selector"]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:executeScript"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Runs the Python or PowerShell script provided, using the specified runtime and handler. (For PowerShell, the handler is not required.)\n\nCurrently, the aws:executeScript action contains the following preinstalled PowerShell Core modules.\n\n\tMicrosoft.PowerShell.Host\n\n\tMicrosoft.PowerShell.Management\n\n\tMicrosoft.PowerShell.Security\n\n\tMicrosoft.PowerShell.Utility\n\n\tPackageManagement\n\n\tPowerShellGet",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "Runtime": {
                                                                "description": "The runtime language to be used for executing the provided script. Currently, aws:executeScript supports Python 3.6 (python3.6), Python 3.7 (python3.7), and PowerShell Core 6.0 (dotnetcore2.1) scripts.",
                                                                "type": "string",
                                                                "oneOf": [
                                                                    {
                                                                        "enum": [
                                                                            "python3.6",
                                                                            "python3.7",
                                                                            "PowerShell Core 6.0"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "pattern": "^{{[ ]{0,1}[a-zA-Z_.]+[ ]{0,1}}}$"
                                                                    }
                                                                ]
                                                            },
                                                            "Handler": {
                                                                "description": "The entry for script execution, usually a function name. You must ensure the function defined in the handler has two parameters, events and context. (Not required for PowerShell.)",
                                                                "type": "string"
                                                            },
                                                            "InputPayload": {
                                                                "description": "A JSON or YAML object that will be passed to the first parameter of the handler. This can be used to pass input data to the script.",
                                                                "type": ["string", "object"]
                                                            },
                                                            "Script": {
                                                                "description": "An embedded script that you want to run during the automation execution. (Not supported for JSON documents.)",
                                                                "type": ["string"]
                                                            },
                                                            "Attachment": {
                                                                "description": "The name of a standalone script file or .zip file that can be invoked by the action. To invoke a file for python, use the filename.method_name format in Handler. For PowerShell, invoke the attachment using and inline script. Gzip is not supported.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": ["Runtime"]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:executeStateMachine"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Run an AWS Step Functions state machine.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "stateMachineArn": {
                                                                "description": "The ARN of the Step Functions state machine.",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "The name of the execution.",
                                                                "type": "string"
                                                            },
                                                            "input": {
                                                                "description": "A string that contains the JSON input data for the execution.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": ["stateMachineArn"]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:invokeLambdaFunction"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Invokes the specified Lambda function.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "FunctionName": {
                                                                "description": "The name of the Lambda function. This function must exist.",
                                                                "type": "string"
                                                            },
                                                            "Qualifier": {
                                                                "description": "The function version or alias name.",
                                                                "type": "string"
                                                            },
                                                            "InvocationType": {
                                                                "description": "The invocation type. The default is RequestResponse.",
                                                                "type": "string",
                                                                "oneOf": [
                                                                    {
                                                                        "enum": ["Event", "RequestResponse", "DryRun"]
                                                                    },
                                                                    {
                                                                        "pattern": "^{{[ ]{0,1}[a-zA-Z_.]+[ ]{0,1}}}$"
                                                                    }
                                                                ]
                                                            },
                                                            "LogType": {
                                                                "description": "If Tail, the invocation type must be RequestResponse. AWS Lambda returns the last 4 KB of log data produced by your Lambda function, base64-encoded.",
                                                                "type": "string",
                                                                "oneOf": [
                                                                    {
                                                                        "enum": ["None", "Tail"]
                                                                    },
                                                                    {
                                                                        "pattern": "^{{[ ]{0,1}[a-zA-Z_.]+[ ]{0,1}}}$"
                                                                    }
                                                                ]
                                                            },
                                                            "ClientContext": {
                                                                "description": "The client-specific information."
                                                            },
                                                            "Payload": {
                                                                "description": "The JSON input for your lambda function."
                                                            }
                                                        },
                                                        "required": ["FunctionName"]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:pause"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "This action pauses the Automation execution. Once paused, the execution status is Waiting. To continue the Automation execution, use the SendAutomationSignal API action with the Resume signal type."
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:runCommand"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Runs the specified commands.\n\nAutomation only supports output of one Run Command action. A document can include multiple Run Command actions, but output is supported for only one action at a time.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "DocumentName": {
                                                                "description": "The name of the Run Command document.",
                                                                "type": "string"
                                                            },
                                                            "InstanceIds": {
                                                                "description": "The instance IDs where you want the command to run. You can specify a maximum of 50 IDs.\n\nYou can also use the pseudo parameter {{RESOURCE_ID}} in place of instance IDs to more easily run the command on all instances in the target group.\n\nAnother alternative is to send commands to a fleet of instances by using the Targets parameter. The Targets parameter accepts Amazon EC2 tags.",
                                                                "type": ["string", "array"],
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "Targets": {
                                                                "description": "An array of search criteria that targets instances by using a Key,Value combination that you specify. Targets is required if you don't provide one or more instance IDs in the call.",
                                                                "type": ["string", "array"],
                                                                "items": {
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "Parameters": {
                                                                "description": "The required and optional parameters specified in the document.",
                                                                "type": ["string", "object"]
                                                            },
                                                            "CloudWatchOutputConfig": {
                                                                "description": "Configuration options for sending command output to Amazon CloudWatch Logs.",
                                                                "type": ["object", "string"]
                                                            },
                                                            "Comment": {
                                                                "description": "User-defined information about the command.",
                                                                "type": "string"
                                                            },
                                                            "DocumentHash": {
                                                                "description": "The hash for the document.",
                                                                "type": "string"
                                                            },
                                                            "DocumentHashType": {
                                                                "description": "The type of the hash.",
                                                                "type": "string",
                                                                "oneOf": [
                                                                    {
                                                                        "enum": ["Sha256", "Sha1"]
                                                                    },
                                                                    {
                                                                        "pattern": "^{{[ ]{0,1}[a-zA-Z_.]+[ ]{0,1}}}$"
                                                                    }
                                                                ]
                                                            },
                                                            "NotificationConfig": {
                                                                "description": "The configurations for sending notifications."
                                                            },
                                                            "OutputS3BucketName": {
                                                                "description": "The name of the S3 bucket for command execution responses.",
                                                                "type": "string"
                                                            },
                                                            "OutputS3KeyPrefix": {
                                                                "description": "The prefix.",
                                                                "type": "string"
                                                            },
                                                            "ServiceRoleArn": {
                                                                "description": "The ARN of the IAM role.",
                                                                "type": "string"
                                                            },
                                                            "TimeoutSeconds": {
                                                                "description": "THe run-command timeout value, in seconds.",
                                                                "type": ["string", "integer"]
                                                            }
                                                        },
                                                        "required": ["DocumentName"]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:runInstances"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Launchs a new instance.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "ImageId": {
                                                                "description": "The ID of the Amazon Machine Image (AMI).",
                                                                "type": "string"
                                                            },
                                                            "InstanceType": {
                                                                "description": "The instance type. \n\nIf an instance type value is not provided, the m1.small instance type is used.",
                                                                "type": "string"
                                                            },
                                                            "MinInstanceCount": {
                                                                "description": "The minimum number of instances to be launched.",
                                                                "type": "string"
                                                            },
                                                            "MaxInstanceCount": {
                                                                "description": "The maximum number of instances to be launched.",
                                                                "type": "string"
                                                            },
                                                            "AdditionalInfo": {
                                                                "description": "Reserved.",
                                                                "type": "string"
                                                            },
                                                            "BlockDeviceMappings": {
                                                                "description": "The block deviceds for the instance.",
                                                                "type": ["string", "array"],
                                                                "items": {
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "ClientToken": {
                                                                "description": "The identifier to ensure idempotency of the request.",
                                                                "type": "string"
                                                            },
                                                            "DisableApiTermination": {
                                                                "description": "Enables or disables instance API termination.",
                                                                "type": ["boolean", "string"]
                                                            },
                                                            "EbsOptimized": {
                                                                "description": "Enables or diables EBS optimization.",
                                                                "type": ["boolean", "string"]
                                                            },
                                                            "IamInstanceProfileArn": {
                                                                "description": "The ARN of the IAM instance profile for the instance.",
                                                                "type": "string"
                                                            },
                                                            "IamInstanceProfileName": {
                                                                "description": "The name of the IAM instance profile for the instance.",
                                                                "type": "string"
                                                            },
                                                            "InstanceInitiatedShutdownBehavior": {
                                                                "description": "Indicates whether the instance stops or terminates on system shutdown.",
                                                                "type": "string"
                                                            },
                                                            "KernelId": {
                                                                "description": "The ID of the kernel.",
                                                                "type": "string"
                                                            },
                                                            "KeyName": {
                                                                "description": "The name of the key pair.",
                                                                "type": "string"
                                                            },
                                                            "Monitoring": {
                                                                "description": "Enables or disables detailed monitoring.",
                                                                "type": ["string", "boolean"]
                                                            },
                                                            "NetworkInterfaces": {
                                                                "description": "The network interfaces."
                                                            },
                                                            "Placement": {
                                                                "description": "The placement for the instance.",
                                                                "type": ["object", "string"]
                                                            },
                                                            "PrivateIpAddress": {
                                                                "description": "The primary IPv4 address.",
                                                                "type": "string"
                                                            },
                                                            "RamdiskId": {
                                                                "description": "The ID of the RAM disk.",
                                                                "type": "string"
                                                            },
                                                            "SecurityGroupIds": {
                                                                "description": "The IDs of the security groups for the instance."
                                                            },
                                                            "SecurityGroup": {
                                                                "description": "The names of the security groups for the instance."
                                                            },
                                                            "SubnetId": {
                                                                "description": "The subnet ID.",
                                                                "type": "string"
                                                            },
                                                            "TagSpecifications": {
                                                                "description": "The tags to apply to the resources during launch. You can only tag instances and volumes at launch. The specified tags are applied to all instances or volumes that are created during launch. To tag an instance after it has been launched, use the aws:createTags – Create tags for AWS resources action."
                                                            },
                                                            "UserData": {
                                                                "description": "An execution script provided as a string literal value. If a literal value is entered, then it must be Base64-encoded.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": ["ImageId"]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:sleep"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "Delays Automation execution for a specified amount of time. This action uses the International Organization for Standardization (ISO) 8601 date and time format.\n\nAutomation currently supports a maximum delay of 604800 seconds (7 days).",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "Duration": {
                                                                "description": "An ISO 8601 duration. You can't specify a negative duration.",
                                                                "type": "string"
                                                            },
                                                            "TimeStamp": {
                                                                "description": "An ISO 8601 timestamp. If you don't specify a value for this parameter, then you must specify a value for the Duration parameter.",
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "action": {
                                                        "const": "aws:waitForAwsResourceProperty"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "description": "The aws:waitForAwsResourceProperty action enables your Automation workflow to wait for a specific resource state or event state before continuing the workflow.",
                                                "properties": {
                                                    "inputs": {
                                                        "properties": {
                                                            "Service": {
                                                                "description": "The AWS service namespace that contains the API action that you want to run. For example, the namespace for Systems Manager is ssm. The namespace for Amazon EC2 is ec2.",
                                                                "type": "string"
                                                            },
                                                            "Api": {
                                                                "description": "The name of the API action that you want to run.",
                                                                "type": "string"
                                                            },
                                                            "PropertySelector": {
                                                                "description": "The JSONPath to a specific attribute in the response object."
                                                            },
                                                            "DesiredValues": {
                                                                "description": "The expected status or state on which to continue the Automation workflow."
                                                            }
                                                        },
                                                        "required": [
                                                            "Service",
                                                            "Api",
                                                            "PropertySelector",
                                                            "DesiredValues"
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "defaultSnippets": [
                                                {
                                                    "label": "Snippet: aws:approve",
                                                    "description": "Insert snippet for aws:approve\n\nTemporarily pauses an Automation execution until designated principals either approve or reject the action. After the required number of approvals is reached, the Automation execution resumes. You can insert the approval step any place in the mainSteps section of your Automation document.\n\nThe default timeout for this action is 7 days (604800 seconds). You can limit or extend the timeout by specifying the timeoutSeconds parameter for an aws:approve step. If the automation step reaches the timeout value before receiving all required approval decisions, then the step and the automation stop running and return a status of Timed Out.",
                                                    "body": {
                                                        "name": "exampleApprove",
                                                        "action": "aws:approve",
                                                        "timeoutSeconds": 1000,
                                                        "onFailure": "Abort",
                                                        "inputs": {
                                                            "NotificationArn": "arn:aws:sns:us-east-2:12345678901:AutomationApproval",
                                                            "Message": "{{ message }}",
                                                            "MinRequiredApprovals": 1,
                                                            "Approvers": ["arn:aws:iam::12345678901:user/AWS-User-1"]
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:assertAwsResourceProperty",
                                                    "description": "Insert snippet for aws:assertAwsResourceProperty\n\nThe aws:assertAwsResourceProperty action enables you to assert a specific resource state or event state for a specific Automation step. For example, you can specify that an Automation step must wait for an EC2 instance to start. Then it will call the Amazon EC2 DescribeInstanceStatus API action with the DesiredValue property of running. This ensures that the Automation workflow waits for a running instance and then continues when the instance is, in fact, running.",
                                                    "body": {
                                                        "name": "exampleAssertAwsResourceProperty",
                                                        "action": "aws:assertAwsResourceProperty",
                                                        "inputs": {
                                                            "Service": "The official namespace of the service",
                                                            "Api": "The API action or method name",
                                                            "API action inputs or parameters": "A value",
                                                            "PropertySelector": "Response object",
                                                            "DesiredValues": ["Desired property values"]
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:branch",
                                                    "description": "Insert snippet for aws:branch\n\nThe aws:branch action enables you to create a dynamic Automation workflow that evaluates different choices in a single step and then jumps to a different step in the Automation document based on the results of that evaluation.\n\nWhen you specify the aws:branch action for a step, you specify Choices that the workflow must evaluate. The Choices can be based on either a value that you specified in the Parameters section of the Automation document, or a dynamic value generated as the output from the previous step. The Automation workflow evaluates each choice by using a Boolean expression. If the first choice is true, then the workflow jumps to the step designated for that choice. If the first choice is false, the workflow evaluates the next choice. The workflow continues evaluating each choice until it process a true choice. The workflow then jumps to the designated step for the true choice.\n\nIf none of the choices are true, the workflow checks to see if the step contains a default value. A default value defines a step that the workflow should jump to if none of the choices are true. If no default value is specified for the step, then the Automation workflow processes the next step in the document.\n\nThe aws:branch action supports complex choice evaluations by using a combination of And, Not, and Or operators.",
                                                    "body": {
                                                        "name": "exampleBranch",
                                                        "action": "aws:branch",
                                                        "inputs": {
                                                            "Choices": [
                                                                {
                                                                    "NextStep": "NextStep",
                                                                    "Variable": "{{ varName }}",
                                                                    "StringEquals": "windows"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:changeInstanceState",
                                                    "description": "Insert snippet for aws:changeInstanceState\n\nChanges or asserts the state of the instance.\n\nThis action can be used in assert mode (do not run the API to change the state but verify the instance is in the desired state.) To use assert mode, set the CheckStateOnly parameter to true. This mode is useful when running the Sysprep command on Windows, which is an asynchronous command that can run in the background for a long time. You can ensure that the instance is stopped before you create an AMI.",
                                                    "body": {
                                                        "name": "exampleChangeInstanceState",
                                                        "action": "aws:changeInstanceState",
                                                        "maxAttempts": 3,
                                                        "timeoutSeconds": 3600,
                                                        "onFailure": "Abort",
                                                        "inputs": {
                                                            "InstanceIds": ["i-1234567890abcdef0"],
                                                            "CheckStateOnly": true,
                                                            "DesiredState": "stopped"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:copyImage",
                                                    "description": "Insert snippet for aws:copyImage\n\nCopies an AMI from any region into the current region. This action can also encrypt the new AMI.",
                                                    "body": {
                                                        "name": "exampleCopyImage",
                                                        "action": "aws:copyImage",
                                                        "maxAttempts": 3,
                                                        "onFailure": "Abort",
                                                        "inputs": {
                                                            "SourceImageId": "ami-0fe10819",
                                                            "SourceRegion": "us-east-1",
                                                            "ImageName": "Encrypted Copy of LAMP base AMI in us-east-1",
                                                            "Encrypted": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:createImage",
                                                    "description": "Insert snippet for aws:createImage\n\nCreates a new AMI from an instance that is either running or stopped.",
                                                    "body": {
                                                        "name": "exampleCreateImage",
                                                        "action": "aws:createImage",
                                                        "maxAttempts": 3,
                                                        "onFailure": "Abort",
                                                        "inputs": {
                                                            "InstanceId": "i-1234567890abcdef0",
                                                            "ImageName": "AMI Created on{{global:DATE_TIME}}",
                                                            "NoReboot": true,
                                                            "ImageDescription": "My newly created AMI"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:createStack",
                                                    "description": "Insert snippet for aws:createStack\n\nCreates a new AWS CloudFormation stack from a template.",
                                                    "body": {
                                                        "name": "exampleCreateStack",
                                                        "action": "aws:createStack",
                                                        "maxAttempts": 1,
                                                        "onFailure": "Abort",
                                                        "inputs": {
                                                            "Capabilities": ["CAPABILITY_IAM"],
                                                            "StackName": "myStack",
                                                            "TemplateURL": "http://s3.amazonaws.com/mybucket/myStackTemplate",
                                                            "TimeoutInMinutes": 5
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:createTags",
                                                    "description": "Insert snippet for aws:createTags\n\nCreate new tags for EC2 instances or Systems Manager managed instances.",
                                                    "body": {
                                                        "name": "exampleCreateTags",
                                                        "action": "aws:createTags",
                                                        "maxAttempts": 3,
                                                        "onFailure": "Abort",
                                                        "inputs": {
                                                            "ResourceType": "EC2",
                                                            "ResourceIds": ["ami-9a3768fa", "i-02951acd5111a8169"],
                                                            "Tags": [
                                                                {
                                                                    "Key": "production",
                                                                    "Value": ""
                                                                },
                                                                {
                                                                    "Key": "department",
                                                                    "Value": "devops"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:deleteImage",
                                                    "description": "Insert snippet for aws:deleteImage\n\nDeletes the specified image and all related snapshots.",
                                                    "body": {
                                                        "name": "exampleDeleteImage",
                                                        "action": "aws:deleteImage",
                                                        "maxAttempts": 3,
                                                        "timeoutSeconds": 180,
                                                        "onFailure": "Abort",
                                                        "inputs": {
                                                            "ImageId": "ami-12345678"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:deleteStack",
                                                    "description": "Insert snippet for aws:deleteStack\n\nDeletes an AWS CloudFormation stack.",
                                                    "body": {
                                                        "name": "exampleDeleteStack",
                                                        "action": "aws:deleteStack",
                                                        "maxAttempts": 1,
                                                        "onFailure": "Abort",
                                                        "inputs": {
                                                            "StackName": "{{stackName}}"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:executeAutomation",
                                                    "description": "Insert snippet for aws:executeAutomation\n\nRuns a secondary Automation workflow by calling a secondary Automation document. With this action, you can create Automation documents for your most common workflows, and reference those documents during an Automation execution. This action can simplify your Automation documents by removing the need to duplicate steps across similar documents.\n\nThe secondary Automation runs in the context of the user who initiated the primary Automation. This means that the secondary Automation uses the same IAM role or user account as the user who started the first Automation.\n\nIf you specify parameters in a secondary Automation that use an assume role (a role that uses the iam:passRole policy), then the user or role that initiated the primary Automation must have permission to pass the assume role specified in the secondary Automation.",
                                                    "body": {
                                                        "name": "exampleExecuteAutomation",
                                                        "action": "aws:executeAutomation",
                                                        "maxAttempts": 3,
                                                        "timeoutSeconds": 3600,
                                                        "onFailure": "Abort",
                                                        "inputs": {
                                                            "DocumentName": "secondaryWorkflow",
                                                            "RuntimeParameters": {
                                                                "instanceIds": ["i-1234567890abcdef0"]
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:executeAwsApi",
                                                    "description": "Insert snippet for aws:executeAwsApi\n\nCalls and runs AWS API actions. Most API actions are supported, although not all API actions have been tested.",
                                                    "body": {
                                                        "name": "exampleExecuteAwsApi",
                                                        "action": "aws:executeAwsApi",
                                                        "inputs": {
                                                            "Service": "The official namespace of the service",
                                                            "Api": "The API action or method name",
                                                            "API action inputs or parameters": "A value"
                                                        },
                                                        "outputs": [
                                                            {
                                                                "Name": "The name for a user-specified output key",
                                                                "Selector": "A response object specified by using JSONPath format",
                                                                "Type": "The data type"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:executeScript",
                                                    "description": "Insert snippet for aws:executeScript\n\nRuns the Python or PowerShell script provided, using the specified runtime and handler. (For PowerShell, the handler is not required.)\n\nCurrently, the aws:executeScript action contains the following preinstalled PowerShell Core modules.\n\tMicrosoft.PowerShell.Host\n\tMicrosoft.PowerShell.Management\n\tMicrosoft.PowerShell.Security\n\tMicrosoft.PowerShell.Utility\n\tPackageManagement\n\tPowerShellGet",
                                                    "body": {
                                                        "name": "exampleExecuteScript",
                                                        "action": "aws:executeScript",
                                                        "inputs": {
                                                            "Runtime": "python3.6",
                                                            "Handler": "script_handler",
                                                            "InputPayload": {
                                                                "parameter1": "parameter_value1",
                                                                "parameter2": "parameter_value2"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:executeStateMachine",
                                                    "description": "Insert snippet for aws:executeStateMachine\n\nRun an AWS Step Functions state machine.",
                                                    "body": {
                                                        "name": "exampleExecuteStateMachine",
                                                        "action": "aws:executeStateMachine",
                                                        "inputs": {
                                                            "stateMachineArn": "StateMachine_ARN",
                                                            "input": "{\"parameters\":\"values\"}",
                                                            "name": "name"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:invokeLambdaFunction",
                                                    "description": "Insert snippet for aws:invokeLambdaFunction\n\nInvokes the specified Lambda function.",
                                                    "body": {
                                                        "name": "exampleInvokeLambdaFunction",
                                                        "action": "aws:invokeLambdaFunction",
                                                        "maxAttempts": 3,
                                                        "timeoutSeconds": 120,
                                                        "onFailure": "Abort",
                                                        "inputs": {
                                                            "FunctionName": "MyLambdaFunction"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:pause",
                                                    "description": "Insert snippet for aws:pause\n\nThis action pauses the Automation execution. Once paused, the execution status is Waiting. To continue the Automation execution, use the SendAutomationSignal API action with the Resume signal type.",
                                                    "body": {
                                                        "name": "examplePause",
                                                        "action": "aws:pause",
                                                        "inputs": {}
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:runCommand",
                                                    "description": "Insert snippet for aws:runCommand\n\nRuns the specified commands.",
                                                    "body": {
                                                        "name": "exampleRunCommand",
                                                        "action": "aws:runCommand",
                                                        "inputs": {
                                                            "DocumentName": "AWS-RunPowerShellScript",
                                                            "InstanceIds": ["{{InstanceIds}}"],
                                                            "Parameters": {
                                                                "commands": [
                                                                    "(Get-WmiObject -Class Win32_ComputerSystem).PartOfDomain"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:runInstances",
                                                    "description": "Insert snippet for aws:runInstances\n\nLaunches a new instance.",
                                                    "body": {
                                                        "name": "exampleRunInstances",
                                                        "action": "aws:runInstances",
                                                        "maxAttempts": 3,
                                                        "timeoutSeconds": 1200,
                                                        "onFailure": "Abort",
                                                        "inputs": {
                                                            "ImageId": "ami-12345678",
                                                            "InstanceType": "t2.micro",
                                                            "MinInstanceCount": 1,
                                                            "MaxInstanceCount": 1,
                                                            "IamInstanceProfileName": "myRunCmdRole",
                                                            "TagSpecifications": [
                                                                {
                                                                    "ResourceType": "instance",
                                                                    "Tags": [
                                                                        {
                                                                            "Key": "LaunchedBy",
                                                                            "Value": "SSMAutomation"
                                                                        },
                                                                        {
                                                                            "Key": "Category",
                                                                            "Value": "HighAvailabilityFleetHost"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:sleep",
                                                    "description": "Insert snippet for aws:sleep\n\nDelays Automation execution for a specified amount of time. This action uses the International Organization for Standardization (ISO) 8601 date and time format.",
                                                    "body": {
                                                        "name": "exampleSleep",
                                                        "action": "aws:sleep",
                                                        "inputs": {
                                                            "Duration": "PT10M"
                                                        }
                                                    }
                                                },
                                                {
                                                    "label": "Snippet: aws:waitForAwsResourceProperty",
                                                    "description": "Insert snippet for aws:waitForAwsResourceProperty\n\nThe aws:waitForAwsResourceProperty action enables your Automation workflow to wait for a specific resource state or event state before continuing the workflow.",
                                                    "body": {
                                                        "name": "exampleWaitForAwsResourceProperty",
                                                        "action": "aws:waitForAwsResourceProperty",
                                                        "inputs": {
                                                            "Service": "The official namespace of the service",
                                                            "Api": "The API action or method name",
                                                            "API action inputs or parameters": "A value",
                                                            "PropertySelector": "Response object",
                                                            "DesiredValues": ["Desired property value"]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    "required": ["inputs"]
                                }
                            }
                        }
                    }
                }
            ]
        },
        {
            "properties": {
                "schemaVersion": {
                    "not": {
                        "enum": ["0.3", "1.2", "2.0", "2.2"]
                    }
                }
            },
            "required": ["schemaVersion"]
        },
        {
            "properties": {
                "schemaVersion": {
                    "not": {}
                }
            }
        }
    ]
}
