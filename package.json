{
    "name": "aws-toolkit-vscode",
    "displayName": "AWS Toolkit",
    "description": "Including support for CodeWhisperer, CodeCatalyst, Lambda, S3, CloudWatch Logs, and many other services",
    "version": "1.72.0-SNAPSHOT",
    "extensionKind": [
        "workspace"
    ],
    "publisher": "amazonwebservices",
    "license": "Apache-2.0",
    "repository": {
        "type": "git",
        "url": "https://github.com/aws/aws-toolkit-vscode"
    },
    "engines": {
        "vscode": "^1.65.0"
    },
    "icon": "resources/marketplace/aws-icon-256x256.png",
    "bugs": {
        "url": "https://github.com/aws/aws-toolkit-vscode/issues"
    },
    "galleryBanner": {
        "color": "#FF9900",
        "theme": "light"
    },
    "categories": [
        "Debuggers",
        "Linters",
        "Other"
    ],
    "keywords": [
        "Lambda",
        "CodeCatalyst",
        "CodeWhisperer",
        "Code",
        "Whisperer"
    ],
    "preview": false,
    "qna": "https://github.com/aws/aws-toolkit-vscode/issues",
    "activationEvents": [
        "onStartupFinished",
        "onDebugResolve:aws-sam",
        "onView:aws.codeWhisperer.securityPanel",
        "onDebugInitialConfigurations",
        "onLanguage:javascript",
        "onLanguage:java",
        "onLanguage:python",
        "onLanguage:csharp",
        "onLanguage:yaml",
        "onFileSystem:s3",
        "onFileSystem:s3-readonly",
        "onCommand:aws.codeWhisperer.accept"
    ],
    "main": "./dist/src/main",
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "%AWS.productName%",
            "cloud9": {
                "cn": {
                    "title": "%AWS.productName.cn%"
                }
            },
            "properties": {
                "aws.profile": {
                    "type": "string",
                    "deprecationMessage": "The current profile is now stored internally by the Toolkit.",
                    "description": "%AWS.configuration.profileDescription%"
                },
                "aws.ecs.openTerminalCommand": {
                    "type": "string",
                    "default": "/bin/sh",
                    "markdownDescription": "%AWS.configuration.description.ecs.openTerminalCommand%"
                },
                "aws.iot.maxItemsPerPage": {
                    "type": "number",
                    "default": 100,
                    "minimum": 1,
                    "maximum": 250,
                    "markdownDescription": "%AWS.configuration.description.iot.maxItemsPerPage%"
                },
                "aws.s3.maxItemsPerPage": {
                    "type": "number",
                    "default": 300,
                    "minimum": 3,
                    "maximum": 1000,
                    "markdownDescription": "%AWS.configuration.description.s3.maxItemsPerPage%"
                },
                "aws.samcli.location": {
                    "type": "string",
                    "scope": "machine",
                    "default": "",
                    "markdownDescription": "%AWS.configuration.description.samcli.location%"
                },
                "aws.samcli.lambdaTimeout": {
                    "type": "number",
                    "default": 90000,
                    "markdownDescription": "%AWS.configuration.description.samcli.lambdaTimeout%"
                },
                "aws.samcli.legacyDeploy": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "%AWS.configuration.description.samcli.legacyDeploy%"
                },
                "aws.logLevel": {
                    "type": "string",
                    "default": "info",
                    "enum": [
                        "error",
                        "warn",
                        "info",
                        "verbose",
                        "debug"
                    ],
                    "enumDescriptions": [
                        "Errors Only",
                        "Errors and Warnings",
                        "Errors, Warnings, and Info",
                        "Errors, Warnings, Info, and Verbose",
                        "Errors, Warnings, Info, Verbose, and Debug"
                    ],
                    "markdownDescription": "%AWS.configuration.description.logLevel%",
                    "cloud9": {
                        "cn": {
                            "markdownDescription": "%AWS.configuration.description.logLevel.cn%"
                        }
                    }
                },
                "aws.telemetry": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%AWS.configuration.description.telemetry%",
                    "cloud9": {
                        "cn": {
                            "markdownDescription": "%AWS.configuration.description.telemetry.cn%"
                        }
                    }
                },
                "aws.stepfunctions.asl.format.enable": {
                    "type": "boolean",
                    "scope": "window",
                    "default": true,
                    "description": "%AWS.stepFunctions.asl.format.enable.desc%"
                },
                "aws.stepfunctions.asl.maxItemsComputed": {
                    "type": "number",
                    "default": 5000,
                    "description": "%AWS.stepFunctions.asl.maxItemsComputed.desc%"
                },
                "aws.ssmDocument.ssm.maxItemsComputed": {
                    "type": "number",
                    "default": 5000,
                    "description": "%AWS.ssmDocument.ssm.maxItemsComputed.desc%"
                },
                "aws.cloudWatchLogs.limit": {
                    "type": "number",
                    "default": 10000,
                    "description": "%AWS.cloudWatchLogs.limit.desc%",
                    "maximum": 10000
                },
                "aws.samcli.manuallySelectedBuckets": {
                    "type": "object",
                    "description": "%AWS.samcli.deploy.bucket.recentlyUsed%",
                    "default": []
                },
                "aws.samcli.enableCodeLenses": {
                    "type": "boolean",
                    "description": "%AWS.configuration.enableCodeLenses%",
                    "default": false
                },
                "aws.suppressPrompts": {
                    "type": "object",
                    "description": "%AWS.configuration.description.suppressPrompts%",
                    "default": {},
                    "properties": {
                        "apprunnerNotifyPricing": {
                            "type": "boolean",
                            "default": false
                        },
                        "apprunnerNotifyPause": {
                            "type": "boolean",
                            "default": false
                        },
                        "ecsRunCommand": {
                            "type": "boolean",
                            "default": false
                        },
                        "ecsRunCommandEnable": {
                            "type": "boolean",
                            "default": false
                        },
                        "ecsRunCommandDisable": {
                            "type": "boolean",
                            "default": false
                        },
                        "regionAddAutomatically": {
                            "type": "boolean",
                            "default": false
                        },
                        "yamlExtPrompt": {
                            "type": "boolean",
                            "default": false
                        },
                        "fileViewerEdit": {
                            "type": "boolean",
                            "default": false
                        },
                        "createCredentialsProfile": {
                            "type": "boolean",
                            "default": false
                        },
                        "samcliConfirmDevStack": {
                            "type": "boolean",
                            "default": false
                        },
                        "remoteConnected": {
                            "type": "boolean",
                            "default": false
                        },
                        "codeWhispererConnectionExpired": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "additionalProperties": false
                },
                "aws.experiments": {
                    "type": "object",
                    "markdownDescription": "%AWS.configuration.description.experiments%",
                    "default": {
                        "jsonResourceModification": false
                    },
                    "properties": {
                        "jsonResourceModification": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "additionalProperties": false
                },
                "aws.codeWhisperer.includeSuggestionsWithCodeReferences": {
                    "type": "boolean",
                    "description": "%AWS.configuration.description.codewhisperer%",
                    "default": true
                },
                "aws.codeWhisperer.importRecommendation": {
                    "type": "boolean",
                    "description": "%AWS.configuration.description.codewhisperer.importRecommendation%",
                    "default": true
                },
                "aws.codeWhisperer.shareCodeWhispererContentWithAWS": {
                    "type": "boolean",
                    "markdownDescription": "%AWS.configuration.description.codewhisperer.shareCodeWhispererContentWithAWS%",
                    "default": true
                },
                "aws.codeWhisperer.javaCompilationOutput": {
                    "type": "string",
                    "default": "",
                    "description": "Provide the ABSOLUTE path which is used to store java project compilation results."
                },
                "aws.resources.enabledResources": {
                    "type": "array",
                    "description": "%AWS.configuration.description.resources.enabledResources%",
                    "items": {
                        "type": "string"
                    }
                },
                "aws.lambda.recentlyUploaded": {
                    "type": "object",
                    "description": "%AWS.configuration.description.lambda.recentlyUploaded%",
                    "default": []
                }
            }
        },
        "debuggers": [
            {
                "type": "aws-sam",
                "label": "%AWS.configuration.description.awssam.debug.label%",
                "configurationAttributes": {
                    "direct-invoke": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "title": "AwsSamDebuggerConfiguration",
                        "additionalProperties": false,
                        "properties": {
                            "aws": {
                                "title": "AWS Connection",
                                "description": "%AWS.configuration.description.awssam.debug.aws%",
                                "properties": {
                                    "credentials": {
                                        "description": "%AWS.configuration.description.awssam.debug.credentials%",
                                        "type": "string",
                                        "cloud9": {
                                            "cn": {
                                                "description": "%AWS.configuration.description.awssam.debug.credentials.cn%"
                                            }
                                        }
                                    },
                                    "region": {
                                        "description": "%AWS.configuration.description.awssam.debug.region%",
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "invokeTarget": {
                                "oneOf": [
                                    {
                                        "title": "Template Target Properties",
                                        "description": "%AWS.configuration.description.awssam.debug.invokeTarget%",
                                        "properties": {
                                            "templatePath": {
                                                "description": "%AWS.configuration.description.awssam.debug.templatePath%",
                                                "type": "string"
                                            },
                                            "logicalId": {
                                                "description": "%AWS.configuration.description.awssam.debug.logicalId%",
                                                "type": "string"
                                            },
                                            "target": {
                                                "description": "%AWS.configuration.description.awssam.debug.target%",
                                                "type": "string",
                                                "enum": [
                                                    "template"
                                                ]
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "templatePath",
                                            "logicalId",
                                            "target"
                                        ],
                                        "type": "object"
                                    },
                                    {
                                        "title": "Code Target Properties",
                                        "description": "%AWS.configuration.description.awssam.debug.invokeTarget%",
                                        "properties": {
                                            "lambdaHandler": {
                                                "description": "%AWS.configuration.description.awssam.debug.lambdaHandler%",
                                                "type": "string"
                                            },
                                            "projectRoot": {
                                                "description": "%AWS.configuration.description.awssam.debug.projectRoot%",
                                                "type": "string"
                                            },
                                            "target": {
                                                "description": "%AWS.configuration.description.awssam.debug.target%",
                                                "type": "string",
                                                "enum": [
                                                    "code"
                                                ]
                                            },
                                            "architecture": {
                                                "description": "%AWS.configuration.description.awssam.debug.architecture%",
                                                "type": "string",
                                                "enum": [
                                                    "x86_64",
                                                    "arm64"
                                                ]
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "lambdaHandler",
                                            "projectRoot",
                                            "target"
                                        ],
                                        "type": "object"
                                    },
                                    {
                                        "title": "API Target Properties",
                                        "description": "%AWS.configuration.description.awssam.debug.invokeTarget%",
                                        "properties": {
                                            "templatePath": {
                                                "description": "%AWS.configuration.description.awssam.debug.templatePath%",
                                                "type": "string"
                                            },
                                            "logicalId": {
                                                "description": "%AWS.configuration.description.awssam.debug.logicalId%",
                                                "type": "string"
                                            },
                                            "target": {
                                                "description": "%AWS.configuration.description.awssam.debug.target%",
                                                "type": "string",
                                                "enum": [
                                                    "api"
                                                ]
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "templatePath",
                                            "logicalId",
                                            "target"
                                        ],
                                        "type": "object"
                                    }
                                ]
                            },
                            "lambda": {
                                "title": "Lambda Properties",
                                "description": "%AWS.configuration.description.awssam.debug.lambda%",
                                "properties": {
                                    "environmentVariables": {
                                        "description": "%AWS.configuration.description.awssam.debug.envvars%",
                                        "additionalProperties": {
                                            "type": [
                                                "string"
                                            ]
                                        },
                                        "type": "object"
                                    },
                                    "payload": {
                                        "description": "%AWS.configuration.description.awssam.debug.event%",
                                        "properties": {
                                            "json": {
                                                "description": "%AWS.configuration.description.awssam.debug.event.json%",
                                                "type": "object"
                                            },
                                            "path": {
                                                "description": "%AWS.configuration.description.awssam.debug.event.path%",
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "memoryMb": {
                                        "description": "%AWS.configuration.description.awssam.debug.memoryMb%",
                                        "type": "number"
                                    },
                                    "runtime": {
                                        "description": "%AWS.configuration.description.awssam.debug.runtime%",
                                        "type": "string"
                                    },
                                    "timeoutSec": {
                                        "description": "%AWS.configuration.description.awssam.debug.timeout%",
                                        "type": "number"
                                    },
                                    "pathMappings": {
                                        "type:": "array",
                                        "items": {
                                            "title": "Path Mapping",
                                            "type": "object",
                                            "properties": {
                                                "localRoot": {
                                                    "type": "string"
                                                },
                                                "remoteRoot": {
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "localRoot",
                                                "remoteRoot"
                                            ]
                                        }
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "sam": {
                                "title": "SAM CLI Properties",
                                "description": "%AWS.configuration.description.awssam.debug.sam%",
                                "properties": {
                                    "buildArguments": {
                                        "description": "%AWS.configuration.description.awssam.debug.buildArguments%",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "buildDir": {
                                        "description": "%AWS.configuration.description.awssam.debug.buildDir%",
                                        "type": "string"
                                    },
                                    "containerBuild": {
                                        "description": "%AWS.configuration.description.awssam.debug.containerBuild%",
                                        "type": "boolean"
                                    },
                                    "dockerNetwork": {
                                        "description": "%AWS.configuration.description.awssam.debug.dockerNetwork%",
                                        "type": "string"
                                    },
                                    "localArguments": {
                                        "description": "%AWS.configuration.description.awssam.debug.localArguments%",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "skipNewImageCheck": {
                                        "description": "%AWS.configuration.description.awssam.debug.skipNewImageCheck%",
                                        "type": "boolean"
                                    },
                                    "template": {
                                        "description": "%AWS.configuration.description.awssam.debug.template%",
                                        "properties": {
                                            "parameters": {
                                                "description": "%AWS.configuration.description.awssam.debug.templateParameters%",
                                                "additionalProperties": {
                                                    "type": [
                                                        "string",
                                                        "number"
                                                    ]
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                    }
                                },
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "api": {
                                "title": "API Gateway Properties",
                                "description": "%AWS.configuration.description.awssam.debug.api%",
                                "properties": {
                                    "path": {
                                        "description": "%AWS.configuration.description.awssam.debug.api.path%",
                                        "type": "string"
                                    },
                                    "httpMethod": {
                                        "description": "%AWS.configuration.description.awssam.debug.api.httpMethod%",
                                        "type": "string",
                                        "enum": [
                                            "delete",
                                            "get",
                                            "head",
                                            "options",
                                            "patch",
                                            "post",
                                            "put"
                                        ]
                                    },
                                    "payload": {
                                        "description": "%AWS.configuration.description.awssam.debug.event%",
                                        "properties": {
                                            "json": {
                                                "description": "%AWS.configuration.description.awssam.debug.event.json%",
                                                "type": "object"
                                            },
                                            "path": {
                                                "description": "%AWS.configuration.description.awssam.debug.event.path%",
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "headers": {
                                        "description": "%AWS.configuration.description.awssam.debug.api.headers%",
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "querystring": {
                                        "description": "%AWS.configuration.description.awssam.debug.api.queryString%",
                                        "type": "string"
                                    },
                                    "stageVariables": {
                                        "description": "%AWS.configuration.description.awssam.debug.api.stageVariables%",
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "clientCertificateId": {
                                        "description": "%AWS.configuration.description.awssam.debug.api.clientCertId%",
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "path",
                                    "httpMethod"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "invokeTarget"
                        ],
                        "type": "object"
                    }
                },
                "configurationSnippets": [
                    {
                        "label": "%AWS.configuration.description.awssam.debug.snippets.lambdaCode.label%",
                        "description": "%AWS.configuration.description.awssam.debug.snippets.lambdaCode.description%",
                        "body": {
                            "type": "aws-sam",
                            "request": "direct-invoke",
                            "name": "${3:Invoke Lambda}",
                            "invokeTarget": {
                                "target": "code",
                                "lambdaHandler": "${1:Function Handler}",
                                "projectRoot": "^\"\\${workspaceFolder}\""
                            },
                            "lambda": {
                                "runtime": "${2:Lambda Runtime}",
                                "payload": {
                                    "json": {}
                                }
                            }
                        },
                        "cloud9": {
                            "cn": {
                                "label": "%AWS.configuration.description.awssam.debug.snippets.lambdaCode.label.cn%",
                                "description": "%AWS.configuration.description.awssam.debug.snippets.lambdaCode.description.cn%"
                            }
                        }
                    },
                    {
                        "label": "%AWS.configuration.description.awssam.debug.snippets.lambdaTemplate.label%",
                        "description": "%AWS.configuration.description.awssam.debug.snippets.lambdaTemplate.description%",
                        "body": {
                            "type": "aws-sam",
                            "request": "direct-invoke",
                            "name": "${3:Invoke Lambda}",
                            "invokeTarget": {
                                "target": "template",
                                "templatePath": "${1:Template Location}",
                                "logicalId": "${2:Function Logical ID}"
                            },
                            "lambda": {
                                "payload": {
                                    "json": {}
                                }
                            }
                        },
                        "cloud9": {
                            "cn": {
                                "label": "%AWS.configuration.description.awssam.debug.snippets.lambdaTemplate.label.cn%",
                                "description": "%AWS.configuration.description.awssam.debug.snippets.lambdaTemplate.description.cn%"
                            }
                        }
                    },
                    {
                        "label": "%AWS.configuration.description.awssam.debug.snippets.api.label%",
                        "description": "%AWS.configuration.description.awssam.debug.snippets.api.description%",
                        "body": {
                            "type": "aws-sam",
                            "request": "direct-invoke",
                            "name": "${5:Invoke Lambda with API Gateway}",
                            "invokeTarget": {
                                "target": "api",
                                "templatePath": "${1:Template Location}",
                                "logicalId": "${2:Function Logical ID}"
                            },
                            "api": {
                                "path": "${3:Path}",
                                "httpMethod": "${4:Method}",
                                "payload": {
                                    "json": {}
                                }
                            }
                        },
                        "cloud9": {
                            "cn": {
                                "label": "%AWS.configuration.description.awssam.debug.snippets.api.label.cn%",
                                "description": "%AWS.configuration.description.awssam.debug.snippets.api.description.cn%"
                            }
                        }
                    }
                ]
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "aws-explorer",
                    "title": "%AWS.title%",
                    "icon": "resources/aws-logo.svg",
                    "cloud9": {
                        "cn": {
                            "title": "%AWS.title.cn%",
                            "icon": "resources/aws-cn-logo.svg"
                        }
                    }
                }
            ],
            "panel": [
                {
                    "id": "aws-codewhisperer-reference-log",
                    "title": "CodeWhisperer Reference Log",
                    "icon": "media/aws-logo.svg"
                }
            ]
        },
        "views": {
            "aws-explorer": [
                {
                    "id": "aws.explorer",
                    "name": "%AWS.lambda.explorerTitle%"
                },
                {
                    "id": "aws.developerTools",
                    "name": "%AWS.developerTools.explorerTitle%"
                }
            ],
            "aws-codewhisperer-reference-log": [
                {
                    "type": "webview",
                    "id": "aws.codeWhisperer.referenceLog",
                    "name": ""
                }
            ]
        },
        "submenus": [
            {
                "id": "aws.auth",
                "label": "%AWS.submenu.auth.title%",
                "icon": "$(ellipsis)"
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "aws.apig.copyUrl",
                    "when": "false"
                },
                {
                    "command": "aws.apig.invokeRemoteRestApi",
                    "when": "false"
                },
                {
                    "command": "aws.deleteCloudFormation",
                    "when": "false"
                },
                {
                    "command": "aws.downloadStateMachineDefinition",
                    "when": "false"
                },
                {
                    "command": "aws.ecr.createRepository",
                    "when": "false"
                },
                {
                    "command": "aws.executeStateMachine",
                    "when": "false"
                },
                {
                    "command": "aws.copyArn",
                    "when": "false"
                },
                {
                    "command": "aws.copyName",
                    "when": "false"
                },
                {
                    "command": "aws.listCommands",
                    "when": "false"
                },
                {
                    "command": "aws.codecatalyst.listCommands",
                    "when": "false"
                },
                {
                    "command": "aws.codecatalyst.openDevEnv",
                    "when": "!isCloud9"
                },
                {
                    "command": "aws.codecatalyst.createDevEnv",
                    "when": "!isCloud9"
                },
                {
                    "command": "aws.codecatalyst.removeConnection",
                    "when": "false"
                },
                {
                    "command": "aws.codeWhisperer.removeConnection",
                    "when": "false"
                },
                {
                    "command": "aws.downloadSchemaItemCode",
                    "when": "false"
                },
                {
                    "command": "aws.deleteLambda",
                    "when": "false"
                },
                {
                    "command": "aws.downloadLambda",
                    "when": "false"
                },
                {
                    "command": "aws.invokeLambda",
                    "when": "false"
                },
                {
                    "command": "aws.copyLambdaUrl",
                    "when": "false"
                },
                {
                    "command": "aws.viewSchemaItem",
                    "when": "false"
                },
                {
                    "command": "aws.searchSchema",
                    "when": "false"
                },
                {
                    "command": "aws.searchSchemaPerRegistry",
                    "when": "false"
                },
                {
                    "command": "aws.refreshAwsExplorer",
                    "when": "false"
                },
                {
                    "command": "aws.cdk.refresh",
                    "when": "false"
                },
                {
                    "command": "aws.cdk.viewDocs",
                    "when": "false"
                },
                {
                    "command": "aws.ssmDocument.openLocalDocument",
                    "when": "false"
                },
                {
                    "command": "aws.ssmDocument.openLocalDocumentJson",
                    "when": "false"
                },
                {
                    "command": "aws.ssmDocument.openLocalDocumentYaml",
                    "when": "false"
                },
                {
                    "command": "aws.ssmDocument.deleteDocument",
                    "when": "false"
                },
                {
                    "command": "aws.ssmDocument.updateDocumentVersion",
                    "when": "false"
                },
                {
                    "command": "aws.copyLogStreamName",
                    "when": "resourceScheme == awsCloudWatchLogs"
                },
                {
                    "command": "aws.saveCurrentLogStreamContent",
                    "when": "resourceScheme == awsCloudWatchLogs"
                },
                {
                    "command": "aws.s3.editFile",
                    "when": "resourceScheme == s3-readonly"
                },
                {
                    "command": "aws.cloudWatchLogs.viewLogStream",
                    "when": "false"
                },
                {
                    "command": "aws.ecr.deleteRepository",
                    "when": "false"
                },
                {
                    "command": "aws.ecr.copyTagUri",
                    "when": "false"
                },
                {
                    "command": "aws.ecr.copyRepositoryUri",
                    "when": "false"
                },
                {
                    "command": "aws.ecr.deleteTag",
                    "when": "false"
                },
                {
                    "command": "aws.iot.createThing",
                    "when": "false"
                },
                {
                    "command": "aws.iot.deleteThing",
                    "when": "false"
                },
                {
                    "command": "aws.iot.createCert",
                    "when": "false"
                },
                {
                    "command": "aws.iot.deleteCert",
                    "when": "false"
                },
                {
                    "command": "aws.iot.attachCert",
                    "when": "false"
                },
                {
                    "command": "aws.iot.attachPolicy",
                    "when": "false"
                },
                {
                    "command": "aws.iot.activateCert",
                    "when": "false"
                },
                {
                    "command": "aws.iot.deactivateCert",
                    "when": "false"
                },
                {
                    "command": "aws.iot.revokeCert",
                    "when": "false"
                },
                {
                    "command": "aws.iot.createPolicy",
                    "when": "false"
                },
                {
                    "command": "aws.iot.deletePolicy",
                    "when": "false"
                },
                {
                    "command": "aws.iot.createPolicyVersion",
                    "when": "false"
                },
                {
                    "command": "aws.iot.deletePolicyVersion",
                    "when": "false"
                },
                {
                    "command": "aws.iot.detachCert",
                    "when": "false"
                },
                {
                    "command": "aws.iot.detachPolicy",
                    "when": "false"
                },
                {
                    "command": "aws.iot.viewPolicyVersion",
                    "when": "false"
                },
                {
                    "command": "aws.iot.setDefaultPolicy",
                    "when": "false"
                },
                {
                    "command": "aws.iot.copyEndpoint",
                    "when": "false"
                },
                {
                    "command": "aws.deploySamApplication",
                    "when": "config.aws.samcli.legacyDeploy"
                },
                {
                    "command": "aws.samcli.sync",
                    "when": "!config.aws.samcli.legacyDeploy"
                },
                {
                    "command": "aws.s3.copyPath",
                    "when": "false"
                },
                {
                    "command": "aws.s3.createBucket",
                    "when": "false"
                },
                {
                    "command": "aws.s3.createFolder",
                    "when": "false"
                },
                {
                    "command": "aws.s3.deleteBucket",
                    "when": "false"
                },
                {
                    "command": "aws.s3.deleteFile",
                    "when": "false"
                },
                {
                    "command": "aws.s3.downloadFileAs",
                    "when": "false"
                },
                {
                    "command": "aws.s3.openFile",
                    "when": "false"
                },
                {
                    "command": "aws.s3.editFile",
                    "when": "false"
                },
                {
                    "command": "aws.s3.uploadFileToParent",
                    "when": "false"
                },
                {
                    "command": "aws.apprunner.startDeployment",
                    "when": "false"
                },
                {
                    "command": "aws.apprunner.createService",
                    "when": "false"
                },
                {
                    "command": "aws.apprunner.pauseService",
                    "when": "false"
                },
                {
                    "command": "aws.apprunner.resumeService",
                    "when": "false"
                },
                {
                    "command": "aws.apprunner.copyServiceUrl",
                    "when": "false"
                },
                {
                    "command": "aws.apprunner.open",
                    "when": "false"
                },
                {
                    "command": "aws.apprunner.deleteService",
                    "when": "false"
                },
                {
                    "command": "aws.apprunner.createServiceFromEcr",
                    "when": "false"
                },
                {
                    "command": "aws.resources.copyIdentifier",
                    "when": "false"
                },
                {
                    "command": "aws.resources.openResourcePreview",
                    "when": "false"
                },
                {
                    "command": "aws.resources.createResource",
                    "when": "false"
                },
                {
                    "command": "aws.resources.deleteResource",
                    "when": "false"
                },
                {
                    "command": "aws.resources.updateResource",
                    "when": "false"
                },
                {
                    "command": "aws.resources.updateResourceInline",
                    "when": "false"
                },
                {
                    "command": "aws.resources.saveResource",
                    "when": "false"
                },
                {
                    "command": "aws.resources.closeResource",
                    "when": "false"
                },
                {
                    "command": "aws.resources.viewDocs",
                    "when": "false"
                },
                {
                    "command": "aws.ecs.runCommandInContainer",
                    "when": "false"
                },
                {
                    "command": "aws.ecs.openTaskInTerminal",
                    "when": "false"
                },
                {
                    "command": "aws.ecs.enableEcsExec",
                    "when": "false"
                },
                {
                    "command": "aws.ecs.disableEcsExec",
                    "when": "false"
                },
                {
                    "command": "aws.ecs.viewDocumentation",
                    "when": "false"
                },
                {
                    "command": "aws.renderStateMachineGraph",
                    "when": "false"
                },
                {
                    "command": "aws.auth.addConnection",
                    "when": "false"
                },
                {
                    "command": "aws.auth.switchConnections",
                    "when": "false"
                },
                {
                    "command": "aws.auth.signout",
                    "when": "false"
                },
                {
                    "command": "aws.auth.help",
                    "when": "false"
                },
                {
                    "command": "aws.auth.showConnectionsPage",
                    "when": "aws.isDevMode"
                },
                {
                    "command": "aws.dev.openMenu",
                    "when": "aws.isDevMode || isCloud9"
                }
            ],
            "editor/title": [
                {
                    "command": "aws.previewStateMachine",
                    "when": "editorLangId == asl || editorLangId == asl-yaml",
                    "group": "navigation"
                },
                {
                    "command": "aws.saveCurrentLogStreamContent",
                    "when": "resourceScheme == awsCloudWatchLogs",
                    "group": "navigation"
                },
                {
                    "command": "aws.s3.editFile",
                    "when": "resourceScheme == s3-readonly",
                    "group": "navigation"
                },
                {
                    "command": "aws.ssmDocument.publishDocument",
                    "when": "editorLangId =~ /^(ssm-yaml|ssm-json)$/",
                    "group": "navigation"
                },
                {
                    "command": "aws.resources.updateResourceInline",
                    "when": "resourceScheme == awsResource && !isCloud9 && config.aws.experiments.jsonResourceModification",
                    "group": "navigation"
                },
                {
                    "command": "aws.resources.closeResource",
                    "when": "resourcePath =~ /^.+(awsResource.json)$/",
                    "group": "navigation"
                },
                {
                    "command": "aws.resources.saveResource",
                    "when": "resourcePath =~ /^.+(awsResource.json)$/",
                    "group": "navigation"
                }
            ],
            "editor/title/context": [
                {
                    "command": "aws.copyLogStreamName",
                    "when": "resourceScheme == awsCloudWatchLogs",
                    "group": "1_cutcopypaste@1"
                }
            ],
            "view/title": [
                {
                    "command": "aws.submitFeedback",
                    "when": "view == aws.explorer",
                    "group": "navigation@6"
                },
                {
                    "command": "aws.refreshAwsExplorer",
                    "when": "view == aws.explorer",
                    "group": "navigation@5"
                },
                {
                    "command": "aws.login",
                    "when": "view == aws.explorer",
                    "group": "1_account@1"
                },
                {
                    "command": "aws.showRegion",
                    "when": "view == aws.explorer",
                    "group": "1_account@2"
                },
                {
                    "command": "aws.listCommands",
                    "when": "view == aws.explorer && !isCloud9",
                    "group": "1_account@3"
                },
                {
                    "command": "aws.lambda.createNewSamApp",
                    "when": "view == aws.explorer",
                    "group": "3_lambda@1"
                },
                {
                    "command": "aws.launchConfigForm",
                    "when": "view == aws.explorer",
                    "group": "3_lambda@2"
                },
                {
                    "command": "aws.deploySamApplication",
                    "when": "config.aws.samcli.legacyDeploy && view == aws.explorer",
                    "group": "3_lambda@3"
                },
                {
                    "command": "aws.samcli.sync",
                    "when": "!config.aws.samcli.legacyDeploy && view == aws.explorer",
                    "group": "3_lambda@3"
                },
                {
                    "command": "aws.quickStart",
                    "when": "view == aws.explorer",
                    "group": "y_toolkitMeta@1"
                },
                {
                    "command": "aws.help",
                    "when": "view == aws.explorer || !aws.explorer.visible && view =~ /^aws/",
                    "group": "y_toolkitMeta@2"
                },
                {
                    "command": "aws.github",
                    "when": "view == aws.explorer || !aws.explorer.visible && view =~ /^aws/",
                    "group": "y_toolkitMeta@3"
                },
                {
                    "command": "aws.createIssueOnGitHub",
                    "when": "view == aws.explorer || !aws.explorer.visible && view =~ /^aws/",
                    "group": "y_toolkitMeta@4"
                },
                {
                    "command": "aws.submitFeedback",
                    "when": "view == aws.explorer || !aws.explorer.visible && view =~ /^aws/",
                    "group": "y_toolkitMeta@5"
                },
                {
                    "command": "aws.aboutToolkit",
                    "when": "view == aws.explorer || !aws.explorer.visible && view =~ /^aws/",
                    "group": "z_about@1"
                },
                {
                    "command": "aws.viewLogs",
                    "when": "view == aws.explorer || !aws.explorer.visible && view =~ /^aws/",
                    "group": "z_about@1"
                },
                {
                    "command": "aws.codecatalyst.cloneRepo",
                    "when": "view == aws.codecatalyst && !isCloud9",
                    "group": "1_codeCatalyst@1"
                },
                {
                    "command": "aws.codecatalyst.createDevEnv",
                    "when": "view == aws.codecatalyst && !isCloud9",
                    "group": "1_codeCatalyst@1"
                },
                {
                    "command": "aws.codecatalyst.listCommands",
                    "when": "view == aws.codecatalyst && !isCloud9",
                    "group": "1_codeCatalyst@1"
                },
                {
                    "command": "aws.codecatalyst.openDevEnv",
                    "when": "view == aws.codecatalyst && !isCloud9",
                    "group": "1_codeCatalyst@1"
                }
            ],
            "explorer/context": [
                {
                    "command": "aws.deploySamApplication",
                    "when": "config.aws.samcli.legacyDeploy && isFileSystemResource && resourceFilename =~ /^template\\.(json|yml|yaml)$/",
                    "group": "z_aws@1"
                },
                {
                    "command": "aws.samcli.sync",
                    "when": "!config.aws.samcli.legacyDeploy && isFileSystemResource && resourceFilename =~ /^(template\\.(json|yml|yaml))|(samconfig\\.toml)$/",
                    "group": "z_aws@1"
                },
                {
                    "command": "aws.uploadLambda",
                    "when": "explorerResourceIsFolder || isFileSystemResource && resourceFilename =~ /^template\\.(json|yml|yaml)$/",
                    "group": "z_aws@3"
                }
            ],
            "view/item/context": [
                {
                    "command": "aws.apig.invokeRemoteRestApi",
                    "when": "view == aws.explorer && viewItem =~ /^(awsApiGatewayNode)$/",
                    "group": "0@1"
                },
                {
                    "command": "aws.codecatalyst.removeConnection",
                    "when": "viewItem == awsCodeCatalystNodeSaved",
                    "group": "0@1"
                },
                {
                    "command": "aws.codecatalyst.removeConnection",
                    "when": "viewItem == awsCodeCatalystNodeSaved",
                    "group": "inline@1"
                },
                {
                    "command": "aws.ecr.createRepository",
                    "when": "view == aws.explorer && viewItem == awsEcrNode",
                    "group": "inline@1"
                },
                {
                    "command": "aws.iot.createThing",
                    "when": "view == aws.explorer && viewItem == awsIotThingsNode",
                    "group": "inline@1"
                },
                {
                    "command": "aws.iot.createCert",
                    "when": "view == aws.explorer && viewItem == awsIotCertsNode",
                    "group": "inline@1"
                },
                {
                    "command": "aws.iot.createPolicy",
                    "when": "view == aws.explorer && viewItem == awsIotPoliciesNode",
                    "group": "inline@1"
                },
                {
                    "command": "aws.iot.attachCert",
                    "when": "view == aws.explorer && viewItem == awsIotThingNode",
                    "group": "inline@1"
                },
                {
                    "command": "aws.iot.attachPolicy",
                    "when": "view == aws.explorer && viewItem =~ /^awsIotCertificateNode.(Things|Policies)/",
                    "group": "inline@1"
                },
                {
                    "command": "aws.s3.openFile",
                    "when": "view == aws.explorer && viewItem == awsS3FileNode && !isCloud9",
                    "group": "0@1"
                },
                {
                    "command": "aws.s3.editFile",
                    "when": "view == aws.explorer && viewItem == awsS3FileNode && !isCloud9",
                    "group": "inline@1"
                },
                {
                    "command": "aws.s3.downloadFileAs",
                    "when": "view == aws.explorer && viewItem == awsS3FileNode",
                    "group": "inline@2"
                },
                {
                    "command": "aws.s3.createBucket",
                    "when": "view == aws.explorer && viewItem == awsS3Node",
                    "group": "inline@1"
                },
                {
                    "command": "aws.s3.createFolder",
                    "when": "view == aws.explorer && viewItem =~ /^(awsS3BucketNode|awsS3FolderNode)$/",
                    "group": "inline@1"
                },
                {
                    "command": "aws.ssmDocument.openLocalDocument",
                    "when": "view == aws.explorer && viewItem =~ /^(awsDocumentItemNode|awsDocumentItemNodeWriteable)$/",
                    "group": "inline@1"
                },
                {
                    "command": "aws.s3.uploadFile",
                    "when": "view == aws.explorer && viewItem =~ /^(awsS3BucketNode|awsS3FolderNode)$/",
                    "group": "inline@2"
                },
                {
                    "command": "aws.showRegion",
                    "when": "view == aws.explorer && viewItem == awsRegionNode",
                    "group": "0@1"
                },
                {
                    "command": "aws.lambda.createNewSamApp",
                    "when": "view == aws.explorer && viewItem == awsLambdaNode || viewItem == awsRegionNode",
                    "group": "1@1"
                },
                {
                    "command": "aws.launchConfigForm",
                    "when": "view == aws.explorer && viewItem == awsLambdaNode || viewItem == awsRegionNode || viewItem == awsCloudFormationRootNode",
                    "group": "1@1"
                },
                {
                    "command": "aws.deploySamApplication",
                    "when": "config.aws.samcli.legacyDeploy && view == aws.explorer && viewItem =~ /^(awsLambdaNode|awsRegionNode|awsCloudFormationRootNode)$/",
                    "group": "1@2"
                },
                {
                    "command": "aws.samcli.sync",
                    "when": "!config.aws.samcli.legacyDeploy && view == aws.explorer && viewItem =~ /^(awsLambdaNode|awsRegionNode|awsCloudFormationRootNode)$/",
                    "group": "1@2"
                },
                {
                    "command": "aws.ecr.copyTagUri",
                    "when": "view == aws.explorer && viewItem == awsEcrTagNode",
                    "group": "2@1"
                },
                {
                    "command": "aws.ecr.deleteTag",
                    "when": "view == aws.explorer && viewItem == awsEcrTagNode",
                    "group": "3@1"
                },
                {
                    "command": "aws.ecr.copyRepositoryUri",
                    "when": "view == aws.explorer && viewItem == awsEcrRepositoryNode",
                    "group": "2@1"
                },
                {
                    "command": "aws.ecr.createRepository",
                    "when": "view == aws.explorer && viewItem == awsEcrNode",
                    "group": "0@1"
                },
                {
                    "command": "aws.ecr.deleteRepository",
                    "when": "view == aws.explorer && viewItem == awsEcrRepositoryNode",
                    "group": "3@1"
                },
                {
                    "command": "aws.invokeLambda",
                    "when": "view == aws.explorer && viewItem =~ /^(awsRegionFunctionNode|awsRegionFunctionNodeDownloadable|awsCloudFormationFunctionNode)$/",
                    "group": "0@1"
                },
                {
                    "command": "aws.downloadLambda",
                    "when": "view == aws.explorer && viewItem =~ /^(awsRegionFunctionNode|awsRegionFunctionNodeDownloadable)$/",
                    "group": "0@2"
                },
                {
                    "command": "aws.uploadLambda",
                    "when": "view == aws.explorer && viewItem =~ /^(awsRegionFunctionNode|awsRegionFunctionNodeDownloadable)$/",
                    "group": "1@1"
                },
                {
                    "command": "aws.deleteLambda",
                    "when": "view == aws.explorer && viewItem =~ /^(awsRegionFunctionNode|awsRegionFunctionNodeDownloadable)$/",
                    "group": "4@1"
                },
                {
                    "command": "aws.copyLambdaUrl",
                    "when": "view == aws.explorer && viewItem =~ /^(awsRegionFunctionNode|awsRegionFunctionNodeDownloadable)$/",
                    "group": "2@0"
                },
                {
                    "command": "aws.deleteCloudFormation",
                    "when": "view == aws.explorer && viewItem == awsCloudFormationNode",
                    "group": "3@5"
                },
                {
                    "command": "aws.searchSchema",
                    "when": "view == aws.explorer && viewItem == awsSchemasNode",
                    "group": "0@1"
                },
                {
                    "command": "aws.searchSchemaPerRegistry",
                    "when": "view == aws.explorer && viewItem == awsRegistryItemNode",
                    "group": "0@1"
                },
                {
                    "command": "aws.viewSchemaItem",
                    "when": "view == aws.explorer && viewItem == awsSchemaItemNode",
                    "group": "0@1"
                },
                {
                    "command": "aws.stepfunctions.createStateMachineFromTemplate",
                    "when": "view == aws.explorer && viewItem == awsStepFunctionsNode",
                    "group": "0@1"
                },
                {
                    "command": "aws.downloadStateMachineDefinition",
                    "when": "view == aws.explorer && viewItem == awsStateMachineNode",
                    "group": "0@1"
                },
                {
                    "command": "aws.renderStateMachineGraph",
                    "when": "view == aws.explorer && viewItem == awsStateMachineNode",
                    "group": "0@2"
                },
                {
                    "command": "aws.cdk.renderStateMachineGraph",
                    "when": "viewItem == awsCdkStateMachineNode",
                    "group": "inline@1"
                },
                {
                    "command": "aws.cdk.renderStateMachineGraph",
                    "when": "viewItem == awsCdkStateMachineNode",
                    "group": "0@1"
                },
                {
                    "command": "aws.executeStateMachine",
                    "when": "view == aws.explorer && viewItem == awsStateMachineNode",
                    "group": "0@3"
                },
                {
                    "command": "aws.iot.createThing",
                    "when": "view == aws.explorer && viewItem == awsIotThingsNode",
                    "group": "0@1"
                },
                {
                    "command": "aws.iot.createCert",
                    "when": "view == aws.explorer && viewItem == awsIotCertsNode",
                    "group": "0@1"
                },
                {
                    "command": "aws.iot.createPolicy",
                    "when": "view == aws.explorer && viewItem == awsIotPoliciesNode",
                    "group": "0@1"
                },
                {
                    "command": "aws.iot.createPolicyVersion",
                    "when": "view == aws.explorer && viewItem == awsIotPolicyNode.WithVersions",
                    "group": "0@1"
                },
                {
                    "command": "aws.iot.viewPolicyVersion",
                    "when": "view == aws.explorer && viewItem =~ /^awsIotPolicyVersionNode./",
                    "group": "0@1"
                },
                {
                    "command": "aws.iot.attachCert",
                    "when": "view == aws.explorer && viewItem == awsIotThingNode",
                    "group": "0@1"
                },
                {
                    "command": "aws.iot.attachPolicy",
                    "when": "view == aws.explorer && viewItem =~ /^awsIotCertificateNode.(Things|Policies)/",
                    "group": "0@1"
                },
                {
                    "command": "aws.s3.createBucket",
                    "when": "view == aws.explorer && viewItem == awsS3Node",
                    "group": "0@1"
                },
                {
                    "command": "aws.s3.downloadFileAs",
                    "when": "view == aws.explorer && viewItem == awsS3FileNode",
                    "group": "0@1"
                },
                {
                    "command": "aws.s3.uploadFile",
                    "when": "view == aws.explorer && viewItem =~ /^(awsS3BucketNode|awsS3FolderNode)$/",
                    "group": "0@1"
                },
                {
                    "command": "aws.s3.uploadFileToParent",
                    "when": "view == aws.explorer && viewItem == awsS3FileNode",
                    "group": "1@1"
                },
                {
                    "command": "aws.s3.createFolder",
                    "when": "view == aws.explorer && viewItem =~ /^(awsS3BucketNode|awsS3FolderNode)$/",
                    "group": "1@1"
                },
                {
                    "command": "aws.iot.deactivateCert",
                    "when": "view == aws.explorer && viewItem =~ /^awsIotCertificateNode.(Things|Policies).ACTIVE$/",
                    "group": "1@1"
                },
                {
                    "command": "aws.iot.activateCert",
                    "when": "view == aws.explorer && viewItem =~ /^awsIotCertificateNode.(Things|Policies).INACTIVE$/",
                    "group": "1@1"
                },
                {
                    "command": "aws.iot.revokeCert",
                    "when": "view == aws.explorer && viewItem =~ /^awsIotCertificateNode.(Things|Policies).(ACTIVE|INACTIVE)$/",
                    "group": "1@2"
                },
                {
                    "command": "aws.iot.setDefaultPolicy",
                    "when": "view == aws.explorer && viewItem == awsIotPolicyVersionNode.NONDEFAULT",
                    "group": "1@1"
                },
                {
                    "command": "aws.iot.copyEndpoint",
                    "when": "view == aws.explorer && viewItem == awsIotNode",
                    "group": "2@1"
                },
                {
                    "command": "aws.copyName",
                    "when": "view == aws.explorer && viewItem =~ /^(awsRegionFunctionNode|awsRegionFunctionNodeDownloadable|awsCloudFormationFunctionNode|awsStateMachineNode|awsCloudFormationNode|awsS3BucketNode|awsS3FolderNode|awsS3FileNode|awsApiGatewayNode|awsIotThingNode)$|^(awsAppRunnerServiceNode|awsIotCertificateNode|awsIotPolicyNode|awsIotPolicyVersionNode)/",
                    "group": "2@1"
                },
                {
                    "command": "aws.copyArn",
                    "when": "view == aws.explorer && viewItem =~ /^(awsRegionFunctionNode|awsRegionFunctionNodeDownloadable|awsCloudFormationFunctionNode|awsStateMachineNode|awsCloudFormationNode|awsCloudWatchLogNode|awsS3BucketNode|awsS3FolderNode|awsS3FileNode|awsApiGatewayNode|awsEcrRepositoryNode|awsIotThingNode)$|^(awsAppRunnerServiceNode|awsEcsServiceNode|awsIotCertificateNode|awsIotPolicyNode|awsIotPolicyVersionNode|awsMdeInstanceNode)/",
                    "group": "2@2"
                },
                {
                    "command": "aws.apig.copyUrl",
                    "when": "view == aws.explorer && viewItem =~ /^(awsApiGatewayNode)$/",
                    "group": "2@0"
                },
                {
                    "command": "aws.s3.copyPath",
                    "when": "view == aws.explorer && viewItem =~ /^(awsS3FolderNode|awsS3FileNode)$/",
                    "group": "2@3"
                },
                {
                    "command": "aws.s3.presignedURL",
                    "when": "view == aws.explorer && viewItem =~ /^(awsS3FileNode)$/",
                    "group": "2@4"
                },
                {
                    "command": "aws.iot.detachCert",
                    "when": "view == aws.explorer && viewItem =~ /^(awsIotCertificateNode.Things)/",
                    "group": "3@1"
                },
                {
                    "command": "aws.iot.detachPolicy",
                    "when": "view == aws.explorer && viewItem == awsIotPolicyNode.Certificates",
                    "group": "3@1"
                },
                {
                    "command": "aws.iot.deleteThing",
                    "when": "view == aws.explorer && viewItem == awsIotThingNode",
                    "group": "3@1"
                },
                {
                    "command": "aws.iot.deleteCert",
                    "when": "view == aws.explorer && viewItem =~ /^awsIotCertificateNode.Policies/",
                    "group": "3@1"
                },
                {
                    "command": "aws.iot.deletePolicy",
                    "when": "view == aws.explorer && viewItem == awsIotPolicyNode.WithVersions",
                    "group": "3@1"
                },
                {
                    "command": "aws.iot.deletePolicyVersion",
                    "when": "view == aws.explorer && viewItem == awsIotPolicyVersionNode.NONDEFAULT",
                    "group": "3@1"
                },
                {
                    "command": "aws.s3.deleteBucket",
                    "when": "view == aws.explorer && viewItem == awsS3BucketNode",
                    "group": "3@1"
                },
                {
                    "command": "aws.s3.deleteFile",
                    "when": "view == aws.explorer && viewItem == awsS3FileNode",
                    "group": "3@1"
                },
                {
                    "command": "aws.downloadSchemaItemCode",
                    "when": "view == aws.explorer && viewItem == awsSchemaItemNode",
                    "group": "1@1"
                },
                {
                    "command": "aws.cloudWatchLogs.viewLogStream",
                    "group": "0@1",
                    "when": "view == aws.explorer && viewItem == awsCloudWatchLogNode"
                },
                {
                    "command": "aws.ssmDocument.openLocalDocumentYaml",
                    "group": "0@1",
                    "when": "view == aws.explorer && viewItem =~ /^(awsDocumentItemNode|awsDocumentItemNodeWriteable)$/"
                },
                {
                    "command": "aws.ssmDocument.openLocalDocumentJson",
                    "group": "0@2",
                    "when": "view == aws.explorer && viewItem =~ /^(awsDocumentItemNode|awsDocumentItemNodeWriteable)$/"
                },
                {
                    "command": "aws.ssmDocument.updateDocumentVersion",
                    "group": "2@1",
                    "when": "view == aws.explorer && viewItem == awsDocumentItemNodeWriteable"
                },
                {
                    "command": "aws.ssmDocument.deleteDocument",
                    "group": "3@2",
                    "when": "view == aws.explorer && viewItem == awsDocumentItemNodeWriteable"
                },
                {
                    "command": "aws.ecs.runCommandInContainer",
                    "group": "0@1",
                    "when": "view == aws.explorer && viewItem =~ /^(awsEcsContainerNodeExec)(.*)$/"
                },
                {
                    "command": "aws.ecs.openTaskInTerminal",
                    "group": "0@2",
                    "when": "view == aws.explorer && viewItem =~ /^(awsEcsContainerNodeExec)(.*)$/ && !isCloud9"
                },
                {
                    "command": "aws.ecs.enableEcsExec",
                    "group": "0@2",
                    "when": "view == aws.explorer && viewItem == awsEcsServiceNode.DISABLED"
                },
                {
                    "command": "aws.ecs.disableEcsExec",
                    "group": "0@2",
                    "when": "view == aws.explorer && viewItem == awsEcsServiceNode.ENABLED"
                },
                {
                    "command": "aws.ecs.viewDocumentation",
                    "group": "1@3",
                    "when": "view == aws.explorer && viewItem =~ /^(awsEcsClusterNode|awsEcsContainerNode)$|^awsEcsServiceNode/"
                },
                {
                    "command": "aws.resources.configure",
                    "when": "view == aws.explorer && viewItem == resourcesRootNode",
                    "group": "1@1"
                },
                {
                    "command": "aws.resources.configure",
                    "when": "view == aws.explorer && viewItem == resourcesRootNode",
                    "group": "inline@1"
                },
                {
                    "command": "aws.resources.openResourcePreview",
                    "when": "view == aws.explorer && viewItem =~ /^(.*)(ResourceNode)$/",
                    "group": "1@1"
                },
                {
                    "command": "aws.resources.copyIdentifier",
                    "when": "view == aws.explorer && viewItem =~ /^(.*)(ResourceNode)$/",
                    "group": "1@1"
                },
                {
                    "command": "aws.resources.viewDocs",
                    "when": "view == aws.explorer && viewItem =~ /^(.*)(Documented)(.*)(ResourceTypeNode)$/",
                    "group": "1@1"
                },
                {
                    "command": "aws.resources.createResource",
                    "when": "view == aws.explorer && viewItem =~ /^(.*)(Creatable)(.*)(ResourceTypeNode)$/ && !isCloud9 && config.aws.experiments.jsonResourceModification",
                    "group": "2@1"
                },
                {
                    "command": "aws.resources.createResource",
                    "when": "view == aws.explorer && viewItem =~ /^(.*)(Creatable)(.*)(ResourceTypeNode)$/ && !isCloud9 && config.aws.experiments.jsonResourceModification",
                    "group": "inline@1"
                },
                {
                    "command": "aws.resources.updateResource",
                    "when": "view == aws.explorer && viewItem =~ /^(.*)(Updatable)(.*)(ResourceNode)$/ && !isCloud9 && config.aws.experiments.jsonResourceModification",
                    "group": "2@1"
                },
                {
                    "command": "aws.resources.deleteResource",
                    "when": "view == aws.explorer && viewItem =~ /^(.*)(Deletable)(.*)(ResourceNode)$/ && !isCloud9 && config.aws.experiments.jsonResourceModification",
                    "group": "2@2"
                },
                {
                    "command": "aws.apprunner.createServiceFromEcr",
                    "group": "0@2",
                    "when": "view == aws.explorer && viewItem =~ /awsEcrTagNode|awsEcrRepositoryNode/"
                },
                {
                    "command": "aws.apprunner.startDeployment",
                    "group": "0@1",
                    "when": "view == aws.explorer && viewItem == awsAppRunnerServiceNode.RUNNING"
                },
                {
                    "command": "aws.apprunner.createService",
                    "group": "0@2",
                    "when": "view == aws.explorer && viewItem == awsAppRunnerNode"
                },
                {
                    "command": "aws.apprunner.pauseService",
                    "group": "0@3",
                    "when": "view == aws.explorer && viewItem == awsAppRunnerServiceNode.RUNNING"
                },
                {
                    "command": "aws.apprunner.resumeService",
                    "group": "0@3",
                    "when": "view == aws.explorer && viewItem == awsAppRunnerServiceNode.PAUSED"
                },
                {
                    "command": "aws.apprunner.copyServiceUrl",
                    "group": "1@1",
                    "when": "view == aws.explorer && viewItem == awsAppRunnerServiceNode.RUNNING"
                },
                {
                    "command": "aws.apprunner.open",
                    "group": "1@2",
                    "when": "view == aws.explorer && viewItem == awsAppRunnerServiceNode.RUNNING"
                },
                {
                    "command": "aws.apprunner.deleteService",
                    "group": "3@1",
                    "when": "view == aws.explorer && viewItem =~ /awsAppRunnerServiceNode.[RUNNING|PAUSED|CREATE_FAILED]/"
                },
                {
                    "command": "aws.cloudFormation.newTemplate",
                    "group": "0@1",
                    "when": "view == aws.explorer && viewItem == awsCloudFormationRootNode"
                },
                {
                    "command": "aws.sam.newTemplate",
                    "group": "0@2",
                    "when": "view == aws.explorer && viewItem == awsCloudFormationRootNode"
                },
                {
                    "command": "aws.codeWhisperer.configure",
                    "when": "viewItem =~ /^awsCodeWhispererNode/ && !isCloud9",
                    "group": "inline@2"
                },
                {
                    "command": "aws.codeWhisperer.introduction",
                    "when": "viewItem =~ /^awsCodeWhispererNode/ && !isCloud9 && CODEWHISPERER_TERMS_ACCEPTED",
                    "group": "inline@1"
                },
                {
                    "command": "aws.codeWhisperer.removeConnection",
                    "when": "viewItem == awsCodeWhispererNodeSaved",
                    "group": "0@1"
                },
                {
                    "command": "aws.codeWhisperer.removeConnection",
                    "when": "viewItem == awsCodeWhispererNodeSaved",
                    "group": "inline@3"
                },
                {
                    "command": "aws.cdk.refresh",
                    "when": "viewItem == awsCdkRootNode",
                    "group": "inline@1"
                },
                {
                    "command": "aws.cdk.refresh",
                    "when": "viewItem == awsCdkRootNode",
                    "group": "0@1"
                },
                {
                    "command": "aws.cdk.viewDocs",
                    "when": "viewItem == awsCdkRootNode",
                    "group": "0@2"
                },
                {
                    "command": "aws.auth.addConnection",
                    "when": "viewItem == awsAuthNode",
                    "group": "0@1"
                },
                {
                    "command": "aws.auth.switchConnections",
                    "when": "viewItem == awsAuthNode",
                    "group": "0@2"
                },
                {
                    "command": "aws.auth.signout",
                    "when": "viewItem == awsAuthNode && !isCloud9",
                    "group": "0@3"
                },
                {
                    "command": "aws.auth.help",
                    "when": "viewItem == awsAuthNode",
                    "group": "inline@1"
                },
                {
                    "submenu": "aws.auth",
                    "when": "viewItem == awsAuthNode",
                    "group": "inline@2"
                }
            ],
            "aws.auth": [
                {
                    "command": "aws.auth.addConnection",
                    "group": "0@1"
                },
                {
                    "command": "aws.auth.switchConnections",
                    "group": "0@2"
                },
                {
                    "command": "aws.auth.signout",
                    "enablement": "!isCloud9",
                    "group": "0@3"
                }
            ]
        },
        "commands": [
            {
                "command": "aws.launchConfigForm",
                "title": "%AWS.command.launchConfigForm.title%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.apig.copyUrl",
                "title": "%AWS.command.apig.copyUrl%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.apig.invokeRemoteRestApi",
                "title": "%AWS.command.apig.invokeRemoteRestApi%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%",
                        "title": "%AWS.command.apig.invokeRemoteRestApi.cn%"
                    }
                }
            },
            {
                "command": "aws.lambda.createNewSamApp",
                "title": "%AWS.command.createNewSamApp%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.login",
                "title": "%AWS.command.login%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "title": "%AWS.command.login.cn%",
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.credentials.profile.create",
                "title": "%AWS.command.credentials.profile.create%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.credentials.edit",
                "title": "%AWS.command.credentials.edit%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.codecatalyst.openOrg",
                "title": "%AWS.command.codecatalyst.openOrg%",
                "category": "AWS"
            },
            {
                "command": "aws.codecatalyst.openProject",
                "title": "%AWS.command.codecatalyst.openProject%",
                "category": "AWS"
            },
            {
                "command": "aws.codecatalyst.openRepo",
                "title": "%AWS.command.codecatalyst.openRepo%",
                "category": "AWS"
            },
            {
                "command": "aws.codecatalyst.openDevEnv",
                "title": "%AWS.command.codecatalyst.openDevEnv%",
                "category": "AWS",
                "enablement": "!isCloud9"
            },
            {
                "command": "aws.codecatalyst.listCommands",
                "title": "%AWS.command.codecatalyst.listCommands%",
                "category": "AWS",
                "enablement": "!isCloud9"
            },
            {
                "command": "aws.codecatalyst.cloneRepo",
                "title": "%AWS.command.codecatalyst.cloneRepo%",
                "category": "AWS",
                "enablement": "!isCloud9"
            },
            {
                "command": "aws.codecatalyst.createDevEnv",
                "title": "%AWS.command.codecatalyst.createDevEnv%",
                "category": "AWS",
                "enablement": "!isCloud9"
            },
            {
                "command": "aws.codecatalyst.removeConnection",
                "title": "%AWS.command.codecatalyst.removeConnection%",
                "category": "AWS",
                "icon": "$(debug-disconnect)"
            },
            {
                "command": "aws.logout",
                "title": "%AWS.command.logout%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.auth.addConnection",
                "title": "%AWS.command.auth.addConnection%",
                "category": "%AWS.title%"
            },
            {
                "command": "aws.auth.showConnectionsPage",
                "title": "%AWS.command.auth.showConnectionsPage%",
                "category": "%AWS.title%",
                "enablement": "aws.isDevMode"
            },
            {
                "command": "aws.auth.switchConnections",
                "title": "%AWS.command.auth.switchConnections%",
                "category": "%AWS.title%"
            },
            {
                "command": "aws.auth.signout",
                "title": "%AWS.command.auth.signout%",
                "category": "%AWS.title%",
                "enablement": "!isCloud9"
            },
            {
                "command": "aws.auth.help",
                "title": "%AWS.generic.viewDocs%",
                "category": "%AWS.title%",
                "icon": "$(question)"
            },
            {
                "command": "aws.createIssueOnGitHub",
                "title": "%AWS.command.createIssueOnGitHub%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ecr.copyTagUri",
                "title": "%AWS.command.ecr.copyTagUri%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ecr.deleteTag",
                "title": "%AWS.command.ecr.deleteTag%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ecr.copyRepositoryUri",
                "title": "%AWS.command.ecr.copyRepositoryUri%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ecr.createRepository",
                "title": "%AWS.command.ecr.createRepository%",
                "category": "%AWS.title%",
                "icon": "$(add)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ecr.deleteRepository",
                "title": "%AWS.command.ecr.deleteRepository%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.showRegion",
                "title": "%AWS.command.showRegion%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.createThing",
                "title": "%AWS.command.iot.createThing%",
                "category": "%AWS.title%",
                "icon": "$(add)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.deleteThing",
                "title": "%AWS.generic.promptDelete%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.createCert",
                "title": "%AWS.command.iot.createCert%",
                "category": "%AWS.title%",
                "icon": "$(add)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.deleteCert",
                "title": "%AWS.generic.promptDelete%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.attachCert",
                "title": "%AWS.command.iot.attachCert%",
                "category": "%AWS.title%",
                "icon": "$(aws-generic-attach-file)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.attachPolicy",
                "title": "%AWS.command.iot.attachPolicy%",
                "category": "%AWS.title%",
                "icon": "$(aws-generic-attach-file)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.activateCert",
                "title": "%AWS.command.iot.activateCert%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.deactivateCert",
                "title": "%AWS.command.iot.deactivateCert%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.revokeCert",
                "title": "%AWS.command.iot.revokeCert%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.createPolicy",
                "title": "%AWS.command.iot.createPolicy%",
                "category": "%AWS.title%",
                "icon": "$(add)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.deletePolicy",
                "title": "%AWS.generic.promptDelete%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.createPolicyVersion",
                "title": "%AWS.command.iot.createPolicyVersion%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.deletePolicyVersion",
                "title": "%AWS.generic.promptDelete%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.detachCert",
                "title": "%AWS.command.iot.detachCert%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.detachPolicy",
                "title": "%AWS.command.iot.detachCert%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.viewPolicyVersion",
                "title": "%AWS.command.iot.viewPolicyVersion%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.setDefaultPolicy",
                "title": "%AWS.command.iot.setDefaultPolicy%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.iot.copyEndpoint",
                "title": "%AWS.command.iot.copyEndpoint%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.s3.presignedURL",
                "title": "%AWS.command.s3.presignedURL%",
                "category": "%AWS.title%"
            },
            {
                "command": "aws.s3.copyPath",
                "title": "%AWS.command.s3.copyPath%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.s3.downloadFileAs",
                "title": "%AWS.command.s3.downloadFileAs%",
                "category": "%AWS.title%",
                "icon": "$(cloud-download)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.s3.openFile",
                "title": "%AWS.command.s3.openFile%",
                "category": "%AWS.title%",
                "icon": "$(open-preview)"
            },
            {
                "command": "aws.s3.editFile",
                "title": "%AWS.command.s3.editFile%",
                "category": "%AWS.title%",
                "icon": "$(edit)"
            },
            {
                "command": "aws.s3.uploadFile",
                "title": "%AWS.command.s3.uploadFile%",
                "category": "%AWS.title%",
                "icon": "$(cloud-upload)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.s3.uploadFileToParent",
                "title": "%AWS.command.s3.uploadFileToParent%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.s3.createFolder",
                "title": "%AWS.command.s3.createFolder%",
                "category": "%AWS.title%",
                "icon": "$(new-folder)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.s3.createBucket",
                "title": "%AWS.command.s3.createBucket%",
                "category": "%AWS.title%",
                "icon": "$(aws-s3-create-bucket)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.s3.deleteBucket",
                "title": "%AWS.generic.promptDelete%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.s3.deleteFile",
                "title": "%AWS.generic.promptDelete%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.invokeLambda",
                "title": "%AWS.command.invokeLambda%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "title": "%AWS.command.invokeLambda.cn%",
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.downloadLambda",
                "title": "%AWS.command.downloadLambda%",
                "category": "%AWS.title%",
                "enablement": "viewItem == awsRegionFunctionNodeDownloadable",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.uploadLambda",
                "title": "%AWS.command.uploadLambda%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.deleteLambda",
                "title": "%AWS.generic.promptDelete%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.copyLambdaUrl",
                "title": "%AWS.generic.copyUrl%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.deploySamApplication",
                "title": "%AWS.command.deploySamApplication%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.submitFeedback",
                "title": "%AWS.command.submitFeedback%",
                "category": "%AWS.title%",
                "icon": "$(comment)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.refreshAwsExplorer",
                "title": "%AWS.command.refreshAwsExplorer%",
                "category": "%AWS.title%",
                "icon": {
                    "dark": "resources/icons/vscode/dark/refresh.svg",
                    "light": "resources/icons/vscode/light/refresh.svg"
                }
            },
            {
                "command": "aws.samcli.detect",
                "title": "%AWS.command.samcli.detect%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.deleteCloudFormation",
                "title": "%AWS.command.deleteCloudFormation%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.downloadStateMachineDefinition",
                "title": "%AWS.command.downloadStateMachineDefinition%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.executeStateMachine",
                "title": "%AWS.command.executeStateMachine%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.renderStateMachineGraph",
                "title": "%AWS.command.renderStateMachineGraph%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.copyArn",
                "title": "%AWS.command.copyArn%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.copyName",
                "title": "%AWS.command.copyName%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.listCommands",
                "title": "%AWS.command.listCommands%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "title": "%AWS.command.listCommands.cn%",
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.viewSchemaItem",
                "title": "%AWS.command.viewSchemaItem%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.searchSchema",
                "title": "%AWS.command.searchSchema%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.searchSchemaPerRegistry",
                "title": "%AWS.command.searchSchemaPerRegistry%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.downloadSchemaItemCode",
                "title": "%AWS.command.downloadSchemaItemCode%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.viewLogs",
                "title": "%AWS.command.viewLogs%",
                "category": "%AWS.title%"
            },
            {
                "command": "aws.help",
                "title": "%AWS.command.help%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.github",
                "title": "%AWS.command.github%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.quickStart",
                "title": "%AWS.command.quickStart%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.cdk.refresh",
                "title": "%AWS.command.refreshCdkExplorer%",
                "category": "%AWS.title%",
                "icon": {
                    "dark": "resources/icons/vscode/dark/refresh.svg",
                    "light": "resources/icons/vscode/light/refresh.svg"
                },
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.cdk.viewDocs",
                "title": "%AWS.generic.viewDocs%",
                "category": "%AWS.title%"
            },
            {
                "command": "aws.stepfunctions.createStateMachineFromTemplate",
                "title": "%AWS.command.stepFunctions.createStateMachineFromTemplate%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.stepfunctions.publishStateMachine",
                "title": "%AWS.command.stepFunctions.publishStateMachine%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.previewStateMachine",
                "title": "%AWS.command.stepFunctions.previewStateMachine%",
                "category": "%AWS.title%",
                "icon": "$(aws-stepfunctions-preview)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.cdk.renderStateMachineGraph",
                "title": "%AWS.command.cdk.previewStateMachine%",
                "category": "AWS",
                "icon": "$(aws-stepfunctions-preview)"
            },
            {
                "command": "aws.aboutToolkit",
                "title": "%AWS.command.aboutToolkit%",
                "category": "%AWS.title%"
            },
            {
                "command": "aws.cloudWatchLogs.viewLogStream",
                "title": "%AWS.command.viewLogStream%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ssmDocument.createLocalDocument",
                "title": "%AWS.command.ssmDocument.createLocalDocument%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ssmDocument.openLocalDocument",
                "title": "%AWS.command.ssmDocument.openLocalDocument%",
                "category": "%AWS.title%",
                "icon": "$(cloud-download)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ssmDocument.openLocalDocumentJson",
                "title": "%AWS.command.ssmDocument.openLocalDocumentJson%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ssmDocument.openLocalDocumentYaml",
                "title": "%AWS.command.ssmDocument.openLocalDocumentYaml%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ssmDocument.deleteDocument",
                "title": "%AWS.command.ssmDocument.deleteDocument%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ssmDocument.publishDocument",
                "title": "%AWS.command.ssmDocument.publishDocument%",
                "category": "%AWS.title%",
                "icon": "$(cloud-upload)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ssmDocument.updateDocumentVersion",
                "title": "%AWS.command.ssmDocument.updateDocumentVersion%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.copyLogStreamName",
                "title": "%AWS.command.copyLogStreamName%",
                "category": "%AWS.title%",
                "icon": "$(files)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.saveCurrentLogStreamContent",
                "title": "%AWS.command.saveCurrentLogStreamContent%",
                "category": "%AWS.title%",
                "icon": "$(save-as)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.addSamDebugConfig",
                "title": "%AWS.command.addSamDebugConfig%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.toggleSamCodeLenses",
                "title": "%AWS.command.toggleSamCodeLenses%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ecs.runCommandInContainer",
                "title": "%AWS.ecs.runCommandInContainer%",
                "category": "%AWS.title%",
                "enablement": "viewItem == awsEcsContainerNodeExecEnabled",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ecs.openTaskInTerminal",
                "title": "%AWS.ecs.openTaskInTerminal%",
                "category": "%AWS.title%",
                "enablement": "viewItem == awsEcsContainerNodeExecEnabled",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ecs.enableEcsExec",
                "title": "%AWS.ecs.enableEcsExec%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ecs.viewDocumentation",
                "title": "%AWS.generic.viewDocs%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.resources.copyIdentifier",
                "title": "%AWS.command.resources.copyIdentifier%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.resources.openResourcePreview",
                "title": "%AWS.generic.preview%",
                "category": "%AWS.title%",
                "icon": "$(open-preview)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.resources.createResource",
                "title": "%AWS.generic.create%",
                "category": "%AWS.title%",
                "icon": "$(add)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.resources.deleteResource",
                "title": "%AWS.generic.promptDelete%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.resources.updateResource",
                "title": "%AWS.generic.promptUpdate%",
                "category": "%AWS.title%",
                "icon": "$(pencil)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.resources.updateResourceInline",
                "title": "%AWS.generic.promptUpdate%",
                "category": "%AWS.title%",
                "icon": "$(pencil)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.resources.saveResource",
                "title": "%AWS.generic.save%",
                "category": "%AWS.title%",
                "icon": "$(save)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.resources.closeResource",
                "title": "%AWS.generic.close%",
                "category": "%AWS.title%",
                "icon": "$(close)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.resources.viewDocs",
                "title": "%AWS.generic.viewDocs%",
                "category": "%AWS.title%",
                "icon": "$(book)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.resources.configure",
                "title": "%AWS.command.resources.configure%",
                "category": "%AWS.title%",
                "icon": "$(gear)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.apprunner.createService",
                "title": "%AWS.command.apprunner.createService%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.ecs.disableEcsExec",
                "title": "%AWS.ecs.disableEcsExec%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.apprunner.createServiceFromEcr",
                "title": "%AWS.command.apprunner.createServiceFromEcr%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.apprunner.pauseService",
                "title": "%AWS.command.apprunner.pauseService%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.apprunner.resumeService",
                "title": "%AWS.command.apprunner.resumeService%",
                "category": "AWS",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.apprunner.copyServiceUrl",
                "title": "%AWS.command.apprunner.copyServiceUrl%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.apprunner.open",
                "title": "%AWS.command.apprunner.open%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.apprunner.deleteService",
                "title": "%AWS.generic.promptDelete%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.apprunner.startDeployment",
                "title": "%AWS.command.apprunner.startDeployment%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.cloudFormation.newTemplate",
                "title": "%AWS.command.cloudFormation.newTemplate%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.sam.newTemplate",
                "title": "%AWS.command.sam.newTemplate%",
                "category": "%AWS.title%",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.samcli.sync",
                "title": "%AWS.command.samcli.sync%",
                "category": "%AWS.title%"
            },
            {
                "command": "aws.codeWhisperer",
                "title": "%AWS.command.codewhisperer.title%",
                "category": "%AWS.title%"
            },
            {
                "command": "aws.codeWhisperer.configure",
                "title": "%AWS.command.codewhisperer.configure%",
                "category": "%AWS.title%",
                "icon": "$(gear)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.codeWhisperer.introduction",
                "title": "%AWS.command.codewhisperer.introduction%",
                "category": "%AWS.title%",
                "icon": "$(question)",
                "cloud9": {
                    "cn": {
                        "category": "%AWS.title.cn%"
                    }
                }
            },
            {
                "command": "aws.codeWhisperer.removeConnection",
                "title": "%AWS.command.codewhisperer.removeConnection%",
                "category": "%AWS.title%",
                "icon": "$(debug-disconnect)"
            },
            {
                "command": "aws.dev.openMenu",
                "title": "Open Developer Menu",
                "category": "AWS (Developer)",
                "enablement": "aws.isDevMode"
            }
        ],
        "jsonValidation": [
            {
                "fileMatch": ".aws/templates.json",
                "url": "./dist/src/templates/templates.json"
            },
            {
                "fileMatch": "*ecs-task-def.json",
                "url": "https://ecs-intellisense.s3-us-west-2.amazonaws.com/task-definition/schema.json"
            }
        ],
        "languages": [
            {
                "id": "asl",
                "extensions": [
                    ".asl.json",
                    ".asl"
                ],
                "aliases": [
                    "Amazon States Language"
                ]
            },
            {
                "id": "asl-yaml",
                "aliases": [
                    "Amazon States Language (YAML)"
                ],
                "extensions": [
                    ".asl.yaml",
                    ".asl.yml"
                ]
            },
            {
                "id": "ssm-json",
                "extensions": [
                    ".ssm.json"
                ],
                "aliases": [
                    "AWS Systems Manager Document (JSON)"
                ]
            },
            {
                "id": "ssm-yaml",
                "extensions": [
                    ".ssm.yaml",
                    ".ssm.yml"
                ],
                "aliases": [
                    "AWS Systems Manager Document (YAML)"
                ]
            }
        ],
        "keybindings": [
            {
                "command": "aws.previewStateMachine",
                "key": "ctrl+shift+v",
                "mac": "cmd+shift+v",
                "when": "editorTextFocus && editorLangId == asl || editorTextFocus && editorLangId == asl-yaml"
            },
            {
                "command": "aws.codeWhisperer",
                "key": "alt+c",
                "mac": "alt+c",
                "when": "editorTextFocus"
            },
            {
                "command": "aws.codeWhisperer.nextCodeSuggestion",
                "key": "right",
                "mac": "right",
                "when": "editorTextFocus && CODEWHISPERER_SERVICE_ACTIVE"
            },
            {
                "command": "aws.codeWhisperer.previousCodeSuggestion",
                "key": "left",
                "mac": "left",
                "when": "editorTextFocus && CODEWHISPERER_SERVICE_ACTIVE"
            },
            {
                "command": "aws.codeWhisperer.rejectCodeSuggestion",
                "key": "escape",
                "mac": "escape",
                "when": "editorTextFocus && CODEWHISPERER_SERVICE_ACTIVE"
            },
            {
                "command": "aws.codeWhisperer.rejectCodeSuggestion",
                "key": "backspace",
                "mac": "backspace",
                "when": "editorTextFocus && CODEWHISPERER_SERVICE_ACTIVE"
            },
            {
                "command": "aws.codeWhisperer.rejectCodeSuggestion",
                "key": "up",
                "mac": "up",
                "when": "editorTextFocus && CODEWHISPERER_SERVICE_ACTIVE",
                "args": "up"
            },
            {
                "command": "aws.codeWhisperer.rejectCodeSuggestion",
                "key": "down",
                "mac": "down",
                "when": "editorTextFocus && CODEWHISPERER_SERVICE_ACTIVE",
                "args": "down"
            },
            {
                "command": "aws.codeWhisperer.acceptCodeSuggestion",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && CODEWHISPERER_SERVICE_ACTIVE"
            },
            {
                "key": "right",
                "command": "editor.action.inlineSuggest.showNext",
                "when": "inlineSuggestionVisible && !editorReadonly && CODEWHISPERER_ENABLED"
            },
            {
                "key": "left",
                "command": "editor.action.inlineSuggest.showPrevious",
                "when": "inlineSuggestionVisible && !editorReadonly && CODEWHISPERER_ENABLED"
            }
        ],
        "grammars": [
            {
                "language": "asl",
                "scopeName": "source.asl",
                "path": "./syntaxes/ASL.tmLanguage"
            },
            {
                "language": "asl-yaml",
                "scopeName": "source.asl.yaml",
                "path": "./syntaxes/asl-yaml.tmLanguage.json"
            },
            {
                "language": "ssm-json",
                "scopeName": "source.ssmjson",
                "path": "./syntaxes/SSMJSON.tmLanguage"
            },
            {
                "language": "ssm-yaml",
                "scopeName": "source.ssmyaml",
                "path": "./syntaxes/SSMYAML.tmLanguage"
            }
        ],
        "resourceLabelFormatters": [
            {
                "scheme": "awsCloudWatchLogs",
                "formatting": {
                    "label": "${path}",
                    "separator": "\\"
                }
            },
            {
                "scheme": "s3*",
                "formatting": {
                    "label": "[S3] ${path}",
                    "separator": "/"
                }
            }
        ],
        "walkthroughs": [
            {
                "id": "getStarted",
                "title": "%AWS.walkthrough.gettingStarted.title%",
                "description": "%AWS.walkthrough.gettingStarted.description%",
                "cloud9": {
                    "cn": {
                        "description": "%AWS.walkthrough.gettingStarted.description.cn%"
                    }
                },
                "steps": [
                    {
                        "id": "connect",
                        "title": "%AWS.walkthrough.gettingStarted.connect%",
                        "media": {
                            "markdown": "resources/walkthrough/setup-connect.md"
                        },
                        "completionEvents": [
                            "onCommand:aws.login",
                            "onCommand:aws.credentials.profile.create"
                        ]
                    },
                    {
                        "id": "changeRegions",
                        "title": "%AWS.walkthrough.gettingStarted.changeRegions%",
                        "media": {
                            "markdown": "resources/walkthrough/setup-region.md"
                        },
                        "completionEvents": [
                            "onCommand:aws.showRegion"
                        ]
                    },
                    {
                        "id": "setupToolchain",
                        "title": "%AWS.walkthrough.gettingStarted.setupToolchain%",
                        "media": {
                            "markdown": "resources/walkthrough/setup-toolchain.md"
                        }
                    }
                ]
            }
        ],
        "icons": {
            "aws-apprunner-service": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1a5"
                }
            },
            "aws-cdk-logo": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1a6"
                }
            },
            "aws-cloudformation-stack": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1a7"
                }
            },
            "aws-cloudwatch-log-group": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1a8"
                }
            },
            "aws-codecatalyst-logo": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1a9"
                }
            },
            "aws-ecr-registry": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1aa"
                }
            },
            "aws-ecs-cluster": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1ab"
                }
            },
            "aws-ecs-container": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1ac"
                }
            },
            "aws-ecs-service": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1ad"
                }
            },
            "aws-generic-attach-file": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1ae"
                }
            },
            "aws-iot-certificate": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1af"
                }
            },
            "aws-iot-policy": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1b0"
                }
            },
            "aws-iot-thing": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1b1"
                }
            },
            "aws-lambda-function": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1b2"
                }
            },
            "aws-s3-bucket": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1b3"
                }
            },
            "aws-s3-create-bucket": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1b4"
                }
            },
            "aws-schemas-registry": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1b5"
                }
            },
            "aws-schemas-schema": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1b6"
                }
            },
            "aws-stepfunctions-preview": {
                "description": "AWS Contributed Icon",
                "default": {
                    "fontPath": "./resources/fonts/aws-toolkit-icons.woff",
                    "fontCharacter": "\\f1b7"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run clean && npm run buildScripts && npm run lint && webpack --mode production && npm run copyFiles -- --webpacked",
        "clean": "ts-node ./scripts/clean.ts dist",
        "reset": "npm run clean -- node_modules && npm install",
        "copyFiles": "ts-node ./scripts/build/copyFiles.ts",
        "buildScripts": "npm run generateClients && npm run generatePackage && npm run generateNonCodeFiles && npm run copyFiles",
        "compile": "npm run clean && npm run buildScripts && webpack --mode development && npm run copyFiles -- --webpacked",
        "watch": "npm run clean && npm run buildScripts && tsc -watch -p ./",
        "postinstall": "npm run generateTelemetry && npm run generateConfigurationAttributes",
        "testCompile": "npm run buildScripts && tsc -p ./ && npm run instrument",
        "test": "npm run testCompile && ts-node ./scripts/test/test.ts && npm run report",
        "testE2E": "npm run testCompile && ts-node ./scripts/test/testE2E.ts && npm run report",
        "integrationTest": "npm run testCompile && ts-node ./scripts/test/integrationTest.ts && npm run report",
        "lint": "eslint -c .eslintrc.js --ext .ts .",
        "lintfix": "eslint -c .eslintrc.js --fix --ext .ts .",
        "package": "ts-node ./scripts/build/package.ts",
        "install-plugin": "vsce package -o aws-toolkit-vscode-test.vsix && code --install-extension aws-toolkit-vscode-test.vsix",
        "generateClients": "ts-node ./scripts/build/generateServiceClient.ts ",
        "generatePackage": "ts-node ./scripts/build/generateIcons.ts",
        "generateTelemetry": "node node_modules/@aws-toolkits/telemetry/lib/generateTelemetry.js --extraInput=src/shared/telemetry/vscodeTelemetry.json --output=src/shared/telemetry/telemetry.gen.ts",
        "generateNonCodeFiles": "ts-node ./scripts/build/generateNonCodeFiles.ts",
        "generateConfigurationAttributes": "ts-node ./scripts/build/generateConfigurationAttributes.ts",
        "newChange": "ts-node ./scripts/newChange.ts",
        "createRelease": "ts-node ./scripts/build/createRelease.ts",
        "serve": "webpack serve --config-name vue-hmr --mode development",
        "instrument": "nyc instrument --in-place ./dist/src",
        "report": "nyc report --reporter=html --reporter=json"
    },
    "devDependencies": {
        "@aws-toolkits/telemetry": "^1.0.120",
        "@cspotcode/source-map-support": "^0.8.1",
        "@sinonjs/fake-timers": "^10.0.2",
        "@types/adm-zip": "^0.4.34",
        "@types/async-lock": "^1.4.0",
        "@types/bytes": "^3.1.0",
        "@types/cross-spawn": "^6.0.0",
        "@types/fs-extra": "^9.0.11",
        "@types/glob": "^7.1.1",
        "@types/js-yaml": "^4.0.5",
        "@types/lodash": "^4.14.180",
        "@types/marked": "^4.0.2",
        "@types/mime-types": "^2.1.1",
        "@types/mocha": "^10.0.0",
        "@types/node": "^14.18.5",
        "@types/readline-sync": "^1.4.3",
        "@types/semver": "^7.3.6",
        "@types/sinon": "^10.0.5",
        "@types/sinonjs__fake-timers": "^8.1.2",
        "@types/tcp-port-used": "^1.0.1",
        "@types/uuid": "^8.3.3",
        "@types/vscode": "^1.65.0",
        "@types/vscode-webview": "^1.57.1",
        "@types/xml2js": "^0.4.8",
        "@typescript-eslint/eslint-plugin": "^5.59.0",
        "@typescript-eslint/parser": "^5.59.1",
        "@vscode/codicons": "^0.0.32",
        "@vscode/test-electron": "^2.2.3",
        "@vue/compiler-sfc": "^3.2.40",
        "circular-dependency-plugin": "^5.2.2",
        "css-loader": "^6.7.3",
        "esbuild-loader": "2.20.0",
        "eslint": "^8.26.0",
        "eslint-config-prettier": "8.3",
        "eslint-plugin-header": "^3.1.1",
        "eslint-plugin-no-null": "^1.0.2",
        "glob": "^7.1.7",
        "husky": "^7.0.2",
        "json-schema-to-typescript": "^11.0.2",
        "marked": "^4.0.10",
        "mocha": "^10.1.0",
        "mocha-junit-reporter": "^2.0.0",
        "mocha-multi-reporters": "^1.5.1",
        "nyc": "^15.1.0",
        "prettier": "^2.8.8",
        "prettier-plugin-sh": "^0.12.8",
        "pretty-quick": "^3.1.3",
        "readline-sync": "^1.4.9",
        "sinon": "^14.0.0",
        "ts-mockito": "^2.5.0",
        "ts-node": "^10.7.0",
        "umd-compat-loader": "^2.1.2",
        "vsce": "^2.6.3",
        "vscode-nls-dev": "^3.3.1",
        "vue-loader": "^16.8.1",
        "vue-style-loader": "^4.1.3",
        "webfont": "^11.2.26",
        "webpack": "^5.81.0",
        "webpack-cli": "^4.9.1",
        "webpack-dev-server": "^4.9.2"
    },
    "dependencies": {
        "@aws-sdk/client-sso": "^3.181.0",
        "@aws-sdk/client-sso-oidc": "^3.181.0",
        "@aws-sdk/credential-provider-ini": "^3.46.0",
        "@aws-sdk/credential-provider-process": "^3.15.0",
        "@aws-sdk/credential-provider-sso": "^3.38.0",
        "@aws-sdk/util-arn-parser": "^3.46.0",
        "@iarna/toml": "^2.2.5",
        "adm-zip": "^0.5.9",
        "amazon-states-language-service": "^1.9.0",
        "async-lock": "^1.4.0",
        "aws-sdk": "^2.1369.0",
        "aws-ssm-document-language-service": "^1.0.0",
        "bytes": "^3.1.2",
        "cross-spawn": "^7.0.3",
        "fast-json-patch": "^3.1.1",
        "fs-extra": "^10.0.1",
        "got": "^11.8.5",
        "immutable": "^4.0.0",
        "js-yaml": "^4.1.0",
        "jsonc-parser": "^3.0.0",
        "lodash": "^4.17.21",
        "mime-types": "^2.1.32",
        "moment": "^2.29.4",
        "portfinder": "^1.0.25",
        "semver": "^7.5.0",
        "strip-ansi": "^5.2.0",
        "tcp-port-used": "^1.0.1",
        "typescript": "^5.0.4",
        "uuid": "^8.3.2",
        "vscode-languageclient": "^6.1.4",
        "vscode-languageserver": "^6.1.1",
        "vscode-languageserver-textdocument": "^1.0.3",
        "vscode-nls": "^5.2.0",
        "vue": "^3.2.31",
        "winston": "^3.7.1",
        "winston-transport": "^4.5.0",
        "xml2js": "^0.5.0",
        "yaml": "^1.9.2",
        "yaml-cfn": "^0.3.2"
    },
    "prettier": {
        "printWidth": 120,
        "trailingComma": "es5",
        "tabWidth": 4,
        "singleQuote": true,
        "semi": false,
        "bracketSpacing": true,
        "arrowParens": "avoid",
        "endOfLine": "lf"
    }
}
