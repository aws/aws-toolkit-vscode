{
    "version": "2.0",
    "metadata": {
        "apiVersion": "2024-02-12",
        "auth": ["aws.auth#sigv4"],
        "endpointPrefix": "sqlworkbench",
        "protocol": "rest-json",
        "protocols": ["rest-json"],
        "serviceFullName": "AmazonSQLWorkbench",
        "serviceId": "SQLWorkbench",
        "signatureVersion": "v4",
        "signingName": "sqlworkbench",
        "uid": "sqlworkbench-2024-02-12"
    },
    "operations": {
        "CancelQueries": {
            "name": "CancelQueries",
            "http": {
                "method": "POST",
                "requestUri": "/database/cancelQueries",
                "responseCode": 200
            },
            "input": { "shape": "CancelQueriesRequest" },
            "output": { "shape": "CancelQueriesResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "BadRequestError" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "CreateConnection": {
            "name": "CreateConnection",
            "http": {
                "method": "PUT",
                "requestUri": "/connections",
                "responseCode": 200
            },
            "input": { "shape": "CreateConnectionRequest" },
            "output": { "shape": "CreateConnectionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "DeleteConnection": {
            "name": "DeleteConnection",
            "http": {
                "method": "DELETE",
                "requestUri": "/connections/{connectionId}",
                "responseCode": 200
            },
            "input": { "shape": "DeleteConnectionRequest" },
            "output": { "shape": "DeleteConnectionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "ExecuteQuery": {
            "name": "ExecuteQuery",
            "http": {
                "method": "POST",
                "requestUri": "/database/executeQuery",
                "responseCode": 200
            },
            "input": { "shape": "ExecuteQueryRequest" },
            "output": { "shape": "ExecuteQueryResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "BadRequestError" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "ExportQueryResults": {
            "name": "ExportQueryResults",
            "http": {
                "method": "POST",
                "requestUri": "/database/exportResults",
                "responseCode": 200
            },
            "input": { "shape": "ExportQueryResultsRequest" },
            "output": { "shape": "ExportQueryResultsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "BadRequestError" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "GetConnectableResources": {
            "name": "GetConnectableResources",
            "http": {
                "method": "POST",
                "requestUri": "/database/getConnectableResources",
                "responseCode": 200
            },
            "input": { "shape": "GetConnectableResourcesRequest" },
            "output": { "shape": "GetConnectableResourcesResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "BadRequestError" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "GetConnection": {
            "name": "GetConnection",
            "http": {
                "method": "GET",
                "requestUri": "/connections/{connectionId}",
                "responseCode": 200
            },
            "input": { "shape": "GetConnectionRequest" },
            "output": { "shape": "GetConnectionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "GetDatabaseConfigurations": {
            "name": "GetDatabaseConfigurations",
            "http": {
                "method": "POST",
                "requestUri": "/database/configurations",
                "responseCode": 200
            },
            "input": { "shape": "GetDatabaseConfigurationsRequest" },
            "output": { "shape": "GetDatabaseConfigurationsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "BadRequestError" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "GetQueryExecutionHistory": {
            "name": "GetQueryExecutionHistory",
            "http": {
                "method": "POST",
                "requestUri": "/queryExecutionHistory/details",
                "responseCode": 200
            },
            "input": { "shape": "GetQueryExecutionHistoryRequest" },
            "output": { "shape": "GetQueryExecutionHistoryResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "BadRequestError" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "GetQueryResult": {
            "name": "GetQueryResult",
            "http": {
                "method": "POST",
                "requestUri": "/database/getQueryResults",
                "responseCode": 200
            },
            "input": { "shape": "GetQueryResultRequest" },
            "output": { "shape": "GetQueryResultResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "BadRequestError" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "GetResources": {
            "name": "GetResources",
            "http": {
                "method": "POST",
                "requestUri": "/database/getResources",
                "responseCode": 200
            },
            "input": { "shape": "GetResourcesRequest" },
            "output": { "shape": "GetResourcesResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "BadRequestError" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "GetTabStates": {
            "name": "GetTabStates",
            "http": {
                "method": "POST",
                "requestUri": "/tab/state",
                "responseCode": 200
            },
            "input": { "shape": "GetTabStatesRequest" },
            "output": { "shape": "GetTabStatesResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "BadRequestError" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "ListQueryExecutionHistory": {
            "name": "ListQueryExecutionHistory",
            "http": {
                "method": "POST",
                "requestUri": "/queryExecutionHistory/list",
                "responseCode": 200
            },
            "input": { "shape": "ListQueryExecutionHistoryRequest" },
            "output": { "shape": "ListQueryExecutionHistoryResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "BadRequestError" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "ListTagsForResource": {
            "name": "ListTagsForResource",
            "http": {
                "method": "GET",
                "requestUri": "/tags/{resourceArn}",
                "responseCode": 200
            },
            "input": { "shape": "ListTagsForResourceRequest" },
            "output": { "shape": "ListTagsForResourceResponse" },
            "errors": [
                { "shape": "BadRequestError" },
                { "shape": "ThrottlingException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "PollQueryExecutionEvents": {
            "name": "PollQueryExecutionEvents",
            "http": {
                "method": "POST",
                "requestUri": "/database/pollQueryExecutionEvents",
                "responseCode": 200
            },
            "input": { "shape": "PollQueryExecutionEventsRequest" },
            "output": { "shape": "PollQueryExecutionEventsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "BadRequestError" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "TagResource": {
            "name": "TagResource",
            "http": {
                "method": "POST",
                "requestUri": "/tags/{resourceArn}",
                "responseCode": 204
            },
            "input": { "shape": "TagResourceRequest" },
            "output": { "shape": "TagResourceResponse" },
            "errors": [
                { "shape": "BadRequestError" },
                { "shape": "ThrottlingException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "UntagResource": {
            "name": "UntagResource",
            "http": {
                "method": "DELETE",
                "requestUri": "/tags/{resourceArn}",
                "responseCode": 204
            },
            "input": { "shape": "UntagResourceRequest" },
            "output": { "shape": "UntagResourceResponse" },
            "errors": [
                { "shape": "BadRequestError" },
                { "shape": "ThrottlingException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ],
            "idempotent": true
        },
        "UpdateConnection": {
            "name": "UpdateConnection",
            "http": {
                "method": "POST",
                "requestUri": "/connections",
                "responseCode": 200
            },
            "input": { "shape": "UpdateConnectionRequest" },
            "output": { "shape": "UpdateConnectionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "ConflictException" },
                { "shape": "InternalServerError" },
                { "shape": "ValidationException" }
            ]
        },
        "VerifyResourcesExistForTagris": {
            "name": "VerifyResourcesExistForTagris",
            "http": {
                "method": "POST",
                "requestUri": "/verifyResourcesExistForTagris",
                "responseCode": 200
            },
            "input": { "shape": "TagrisVerifyResourcesExistInput" },
            "output": { "shape": "TagrisVerifyResourcesExistOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "InternalServerError" },
                { "shape": "TagrisInvalidParameterException" },
                { "shape": "TagrisAccessDeniedException" },
                { "shape": "TagrisInvalidArnException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "TagrisInternalServiceException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "AccessDeniedException" },
                { "shape": "TagrisPartialResourcesExistResultsException" },
                { "shape": "TagrisThrottledException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" }
            ]
        }
    },
    "shapes": {
        "AccessDeniedException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": { "shape": "String" },
                "code": { "shape": "ErrorCode" }
            },
            "error": {
                "httpStatusCode": 403,
                "senderFault": true
            },
            "exception": true
        },
        "AckIds": {
            "type": "list",
            "member": { "shape": "AckIdsMemberString" }
        },
        "AckIdsMemberString": {
            "type": "string",
            "max": 100,
            "min": 0
        },
        "Arn": {
            "type": "string",
            "max": 1011,
            "min": 20
        },
        "AvailableConnectionConfigurationOptions": {
            "type": "list",
            "member": { "shape": "AvailableConnectionConfigurationOptionsMemberString" }
        },
        "AvailableConnectionConfigurationOptionsMemberString": {
            "type": "string",
            "max": 50,
            "min": 0
        },
        "BadRequestError": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": { "shape": "String" },
                "code": { "shape": "ErrorCode" }
            },
            "error": {
                "httpStatusCode": 400,
                "senderFault": true
            },
            "exception": true
        },
        "Boolean": {
            "type": "boolean",
            "box": true
        },
        "CancelQueriesRequest": {
            "type": "structure",
            "required": ["queryExecutionIds", "databaseType"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "accountSettings": { "shape": "DatabaseConnectionAccountSettings" },
                "queryExecutionIds": { "shape": "CancelQueriesRequestQueryExecutionIdsList" },
                "databaseType": {
                    "shape": "DatabaseType",
                    "location": "querystring",
                    "locationName": "databaseType"
                }
            }
        },
        "CancelQueriesRequestQueryExecutionIdsList": {
            "type": "list",
            "member": { "shape": "CancelQueriesRequestQueryExecutionIdsListMemberString" },
            "max": 100,
            "min": 1
        },
        "CancelQueriesRequestQueryExecutionIdsListMemberString": {
            "type": "string",
            "max": 100,
            "min": 1
        },
        "CancelQueriesResponse": {
            "type": "structure",
            "required": ["cancelQueryResponses"],
            "members": {
                "cancelQueryResponses": { "shape": "CancelQueryResponses" }
            }
        },
        "CancelQueryResponse": {
            "type": "structure",
            "required": ["queryExecutionId"],
            "members": {
                "queryExecutionId": { "shape": "CancelQueryResponseQueryExecutionIdString" },
                "queryCancellationStatus": { "shape": "QueryCancellationStatus" }
            }
        },
        "CancelQueryResponseQueryExecutionIdString": {
            "type": "string",
            "max": 1000,
            "min": 0
        },
        "CancelQueryResponses": {
            "type": "list",
            "member": { "shape": "CancelQueryResponse" }
        },
        "ChildObjectTypes": {
            "type": "list",
            "member": { "shape": "ChildObjectTypesMemberString" }
        },
        "ChildObjectTypesMemberString": {
            "type": "string",
            "max": 50,
            "min": 0
        },
        "Columns": {
            "type": "list",
            "member": { "shape": "QueryResultCellValue" }
        },
        "ConflictException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": { "shape": "String" },
                "code": { "shape": "ErrorCode" }
            },
            "error": {
                "httpStatusCode": 409,
                "senderFault": true
            },
            "exception": true
        },
        "ConnectableResource": {
            "type": "structure",
            "required": ["displayName", "identifier", "childObjectTypes", "availableConnectionConfigurationOptions"],
            "members": {
                "displayName": { "shape": "ResourceDisplayName" },
                "identifier": { "shape": "ResourceIdentifier" },
                "type": { "shape": "ConnectableResourceTypeString" },
                "unavailable": { "shape": "Boolean" },
                "tooltipTranslationKey": { "shape": "ConnectableResourceTooltipTranslationKeyString" },
                "childObjectTypes": { "shape": "ChildObjectTypes" },
                "availableConnectionConfigurationOptions": { "shape": "AvailableConnectionConfigurationOptions" }
            }
        },
        "ConnectableResourceTooltipTranslationKeyString": {
            "type": "string",
            "max": 50,
            "min": 0
        },
        "ConnectableResourceTypeString": {
            "type": "string",
            "max": 50,
            "min": 0
        },
        "ConnectableResourceTypes": {
            "type": "list",
            "member": { "shape": "ConnectableResourceTypesMemberString" }
        },
        "ConnectableResourceTypesMemberString": {
            "type": "string",
            "max": 50,
            "min": 0
        },
        "ConnectableResources": {
            "type": "list",
            "member": { "shape": "ConnectableResource" }
        },
        "Connection": {
            "type": "structure",
            "members": {
                "id": {
                    "shape": "String",
                    "documentation": "<p>Id of the connection</p>"
                },
                "name": {
                    "shape": "ConnectionName",
                    "documentation": "<p>Name of the connection</p>"
                },
                "authenticationType": {
                    "shape": "ConnectionAuthenticationTypes",
                    "documentation": "<p>Number representing the type of authentication to use (2 = IAM, 3 = Username and Password). Today we only support the types 2 and 3</p>"
                },
                "secretArn": {
                    "shape": "String",
                    "documentation": "<p>Secret that is linked to this connection</p>"
                },
                "databaseName": {
                    "shape": "DatabaseName",
                    "documentation": "<p>Name of the database where the query is run</p>"
                },
                "clusterId": {
                    "shape": "String",
                    "documentation": "<p>Id of the cluster of the connection</p>"
                },
                "dbUser": {
                    "shape": "DbUser",
                    "documentation": "<p>User of the database</p>"
                },
                "isServerless": { "shape": "Boolean" },
                "isProd": { "shape": "String" },
                "isEnabled": { "shape": "String" },
                "userSettings": { "shape": "UserSettings" },
                "recordDate": { "shape": "String" },
                "updatedDate": { "shape": "String" },
                "tags": { "shape": "Tags" },
                "databaseType": { "shape": "DatabaseType" },
                "connectableResourceType": { "shape": "String" },
                "connectableResourceIdentifier": { "shape": "ResourceIdentifier" }
            }
        },
        "ConnectionAuthenticationTypes": {
            "type": "string",
            "enum": ["2", "3", "4", "5", "6", "7", "8"],
            "sensitive": true
        },
        "ConnectionName": {
            "type": "string",
            "sensitive": true
        },
        "ConnectionProperties": {
            "type": "map",
            "key": { "shape": "ConnectionPropertyKey" },
            "value": { "shape": "ConnectionPropertyValue" },
            "max": 50,
            "min": 1
        },
        "ConnectionPropertyKey": {
            "type": "string",
            "max": 1000,
            "min": 1
        },
        "ConnectionPropertyValue": {
            "type": "string",
            "max": 1000,
            "min": 0
        },
        "CreateConnectionRequest": {
            "type": "structure",
            "required": ["name", "databaseName", "authenticationType"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "name": {
                    "shape": "CreateConnectionRequestNameString",
                    "documentation": "<p>Name of the connection</p>"
                },
                "databaseName": {
                    "shape": "CreateConnectionRequestDatabaseNameString",
                    "documentation": "<p>Name of the database used for this connection</p>"
                },
                "authenticationType": {
                    "shape": "CreateConnectionRequestAuthenticationTypeEnum",
                    "documentation": "<p>Number representing the type of authentication to use (2 = IAM, 3 = Username and Password, 4 = Federated connection)</p>"
                },
                "isProd": { "shape": "CreateConnectionRequestIsProdString" },
                "userSettings": { "shape": "UserSettings" },
                "secretArn": {
                    "shape": "CreateConnectionRequestSecretArnString",
                    "documentation": "<p>secretArn for redshift cluster</p>"
                },
                "clusterId": {
                    "shape": "CreateConnectionRequestClusterIdString",
                    "documentation": "<p>Id of the cluster used for this connection</p>"
                },
                "isServerless": {
                    "shape": "Boolean",
                    "documentation": "<p>Is serverless connection</p>"
                },
                "dbUser": {
                    "shape": "DbUser",
                    "documentation": "<p>User of the database used for this connection</p>"
                },
                "isStoreNewSecret": { "shape": "CreateConnectionRequestIsStoreNewSecretString" },
                "username": {
                    "shape": "DbUser",
                    "documentation": "<p>Username used in the Username_Password connection type</p>"
                },
                "password": {
                    "shape": "CreateConnectionRequestPasswordString",
                    "documentation": "<p>Password of the user used for this connection</p>"
                },
                "tags": { "shape": "Tags" },
                "host": {
                    "shape": "CreateConnectionRequestHostString",
                    "documentation": "<p>Host address used for creating secret for Username_Password connection type</p>"
                },
                "secretName": { "shape": "CreateConnectionRequestSecretNameString" },
                "description": { "shape": "CreateConnectionRequestDescriptionString" },
                "databaseType": { "shape": "DatabaseType" },
                "connectableResourceIdentifier": {
                    "shape": "CreateConnectionRequestConnectableResourceIdentifierString",
                    "documentation": "<p>Id of the connectable resource used for this connection</p>"
                },
                "connectableResourceType": {
                    "shape": "CreateConnectionRequestConnectableResourceTypeString",
                    "documentation": "<p>Type of the connectable resource used for this connection</p>"
                }
            }
        },
        "CreateConnectionRequestAuthenticationTypeEnum": {
            "type": "string",
            "enum": ["2", "3", "4", "5", "6", "7", "8"],
            "max": 1,
            "min": 1,
            "sensitive": true
        },
        "CreateConnectionRequestClusterIdString": {
            "type": "string",
            "max": 63,
            "min": 1
        },
        "CreateConnectionRequestConnectableResourceIdentifierString": {
            "type": "string",
            "max": 63,
            "min": 1,
            "sensitive": true
        },
        "CreateConnectionRequestConnectableResourceTypeString": {
            "type": "string",
            "max": 63,
            "min": 1
        },
        "CreateConnectionRequestDatabaseNameString": {
            "type": "string",
            "max": 64,
            "min": 1,
            "sensitive": true
        },
        "CreateConnectionRequestDescriptionString": {
            "type": "string",
            "max": 1000,
            "min": 0
        },
        "CreateConnectionRequestHostString": {
            "type": "string",
            "max": 1000,
            "min": 0
        },
        "CreateConnectionRequestIsProdString": {
            "type": "string",
            "max": 1000,
            "min": 0
        },
        "CreateConnectionRequestIsStoreNewSecretString": {
            "type": "string",
            "max": 1000,
            "min": 0
        },
        "CreateConnectionRequestNameString": {
            "type": "string",
            "max": 512,
            "min": 1,
            "sensitive": true
        },
        "CreateConnectionRequestPasswordString": {
            "type": "string",
            "max": 64,
            "min": 8,
            "sensitive": true
        },
        "CreateConnectionRequestSecretArnString": {
            "type": "string",
            "max": 1000,
            "min": 1
        },
        "CreateConnectionRequestSecretNameString": {
            "type": "string",
            "max": 1000,
            "min": 0
        },
        "CreateConnectionResponse": {
            "type": "structure",
            "members": {
                "data": { "shape": "Connection" }
            }
        },
        "DatabaseAuthenticationMethod": {
            "type": "string",
            "enum": ["USERNAME_PASSWORD", "TEMPORARY_CREDENTIALS_WITH_IAM"]
        },
        "DatabaseAuthenticationMethods": {
            "type": "list",
            "member": { "shape": "DatabaseAuthenticationMethod" }
        },
        "DatabaseAuthenticationOption": {
            "type": "structure",
            "required": ["connectableResourceType", "authenticationMethods"],
            "members": {
                "connectableResourceType": { "shape": "String" },
                "authenticationMethods": { "shape": "DatabaseAuthenticationMethods" }
            }
        },
        "DatabaseAuthenticationOptions": {
            "type": "list",
            "member": { "shape": "DatabaseAuthenticationOption" }
        },
        "DatabaseConfiguration": {
            "type": "structure",
            "required": [
                "databaseType",
                "authenticationOptions",
                "connectableResourceTypes",
                "sessionSupported",
                "eventAcknowledgementSupported",
                "appendingLimitToQuerySupported",
                "queryStatsSupported"
            ],
            "members": {
                "databaseType": { "shape": "DatabaseType" },
                "authenticationOptions": { "shape": "DatabaseAuthenticationOptions" },
                "connectableResourceTypes": { "shape": "ConnectableResourceTypes" },
                "sessionSupported": { "shape": "Boolean" },
                "eventAcknowledgementSupported": { "shape": "Boolean" },
                "appendingLimitToQuerySupported": { "shape": "Boolean" },
                "queryStatsSupported": { "shape": "Boolean" }
            }
        },
        "DatabaseConfigurations": {
            "type": "list",
            "member": { "shape": "DatabaseConfiguration" }
        },
        "DatabaseConnectionAccountSettings": {
            "type": "structure",
            "members": {
                "masterKeyArn": { "shape": "KmsKeyArn" }
            }
        },
        "DatabaseConnectionConfiguration": {
            "type": "structure",
            "required": ["id", "type", "databaseType", "connectableResourceIdentifier", "connectableResourceType"],
            "members": {
                "id": { "shape": "DatabaseConnectionConfigurationIdString" },
                "type": { "shape": "DatabaseIntegrationConnectionAuthenticationTypes" },
                "auth": { "shape": "DatabaseConnectionConfigurationAuth" },
                "databaseType": { "shape": "DatabaseType" },
                "connectableResourceIdentifier": { "shape": "ResourceIdentifier" },
                "connectableResourceType": { "shape": "DatabaseConnectionConfigurationConnectableResourceTypeString" },
                "database": { "shape": "DatabaseName" }
            }
        },
        "DatabaseConnectionConfigurationAuth": {
            "type": "structure",
            "members": {
                "secretArn": { "shape": "SecretKeyArn" },
                "username": { "shape": "DatabaseConnectionConfigurationAuthUsernameString" },
                "password": { "shape": "DatabaseConnectionConfigurationAuthPasswordString" }
            }
        },
        "DatabaseConnectionConfigurationAuthPasswordString": {
            "type": "string",
            "max": 1000,
            "min": 0,
            "sensitive": true
        },
        "DatabaseConnectionConfigurationAuthUsernameString": {
            "type": "string",
            "max": 1000,
            "min": 0,
            "sensitive": true
        },
        "DatabaseConnectionConfigurationConnectableResourceTypeString": {
            "type": "string",
            "max": 50,
            "min": 0
        },
        "DatabaseConnectionConfigurationIdString": {
            "type": "string",
            "max": 2048,
            "min": 32
        },
        "DatabaseIntegrationConnectionAuthenticationTypes": {
            "type": "string",
            "enum": ["4", "5", "6", "8"],
            "sensitive": true
        },
        "DatabaseName": {
            "type": "string",
            "max": 150,
            "min": 0,
            "sensitive": true
        },
        "DatabaseType": {
            "type": "string",
            "enum": ["REDSHIFT", "ATHENA"]
        },
        "DbUser": {
            "type": "string",
            "max": 127,
            "min": 1,
            "pattern": "[a-zA-Z0-9_][a-zA-Z_0-9+.@$-]*",
            "sensitive": true
        },
        "DeleteConnectionRequest": {
            "type": "structure",
            "required": ["connectionId"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "connectionId": {
                    "shape": "DeleteConnectionRequestConnectionIdString",
                    "documentation": "<p>Id of connection to delete</p>",
                    "location": "uri",
                    "locationName": "connectionId"
                }
            }
        },
        "DeleteConnectionRequestConnectionIdString": {
            "type": "string",
            "max": 1000,
            "min": 1
        },
        "DeleteConnectionResponse": {
            "type": "structure",
            "members": {}
        },
        "ErrorCode": {
            "type": "string",
            "enum": ["QUERY_EXECUTION_NOT_FOUND", "QUERY_EXECUTION_ACCESS_DENIED"]
        },
        "ExecuteQueryRequest": {
            "type": "structure",
            "required": ["query", "queryExecutionType", "queryResponseDeliveryType", "maxItems"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "connectionId": { "shape": "ExecuteQueryRequestConnectionIdString" },
                "databaseType": {
                    "shape": "DatabaseType",
                    "location": "querystring",
                    "locationName": "databaseType"
                },
                "connection": { "shape": "DatabaseConnectionConfiguration" },
                "accountSettings": { "shape": "DatabaseConnectionAccountSettings" },
                "tabId": { "shape": "ExecuteQueryRequestTabIdString" },
                "executionContext": { "shape": "ExecuteQueryRequestExecutionContextList" },
                "query": { "shape": "ExecuteQueryRequestQueryString" },
                "queryExecutionType": { "shape": "QueryExecutionType" },
                "sessionId": { "shape": "ExecuteQueryRequestSessionIdString" },
                "queryResponseDeliveryType": { "shape": "QueryResponseDeliveryType" },
                "maxItems": { "shape": "ExecuteQueryRequestMaxItemsInteger" },
                "limitQueryResults": { "shape": "ExecuteQueryRequestLimitQueryResultsInteger" },
                "isExplain": { "shape": "Boolean" },
                "ignoreHistory": { "shape": "Boolean" },
                "timeoutMillis": { "shape": "ExecuteQueryRequestTimeoutMillisInteger" }
            }
        },
        "ExecuteQueryRequestConnectionIdString": {
            "type": "string",
            "max": 2048,
            "min": 32
        },
        "ExecuteQueryRequestExecutionContextList": {
            "type": "list",
            "member": { "shape": "ParentResource" },
            "max": 100,
            "min": 0
        },
        "ExecuteQueryRequestLimitQueryResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 1000,
            "min": 0
        },
        "ExecuteQueryRequestMaxItemsInteger": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 20
        },
        "ExecuteQueryRequestQueryString": {
            "type": "string",
            "max": 1000000,
            "min": 0,
            "sensitive": true
        },
        "ExecuteQueryRequestSessionIdString": {
            "type": "string",
            "max": 100,
            "min": 0
        },
        "ExecuteQueryRequestTabIdString": {
            "type": "string",
            "max": 100,
            "min": 1
        },
        "ExecuteQueryRequestTimeoutMillisInteger": {
            "type": "integer",
            "box": true,
            "max": 120000,
            "min": 0
        },
        "ExecuteQueryResponse": {
            "type": "structure",
            "required": ["queryExecutions"],
            "members": {
                "sessionId": { "shape": "ExecuteQueryResponseSessionIdString" },
                "queryExecutions": { "shape": "QueryExecutions" },
                "statusCode": {
                    "shape": "statusCode",
                    "location": "statusCode"
                }
            }
        },
        "ExecuteQueryResponseSessionIdString": {
            "type": "string",
            "max": 100,
            "min": 0
        },
        "ExportQueryResultsRequest": {
            "type": "structure",
            "required": ["queryExecutionId", "databaseType"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "accountSettings": { "shape": "DatabaseConnectionAccountSettings" },
                "queryExecutionId": { "shape": "ExportQueryResultsRequestQueryExecutionIdString" },
                "databaseType": {
                    "shape": "DatabaseType",
                    "location": "querystring",
                    "locationName": "databaseType"
                },
                "fileType": { "shape": "FileType" }
            }
        },
        "ExportQueryResultsRequestQueryExecutionIdString": {
            "type": "string",
            "max": 100,
            "min": 1
        },
        "ExportQueryResultsResponse": {
            "type": "structure",
            "required": ["queryResult", "contentType", "fileName"],
            "members": {
                "queryResult": { "shape": "StreamingBlob" },
                "contentType": {
                    "shape": "String",
                    "location": "header",
                    "locationName": "Content-Type"
                },
                "fileName": {
                    "shape": "String",
                    "location": "header",
                    "locationName": "Content-Disposition"
                }
            },
            "payload": "queryResult"
        },
        "FileType": {
            "type": "string",
            "enum": ["JSON", "CSV"]
        },
        "FullQueryText": {
            "type": "string",
            "max": 1000000,
            "min": 0,
            "sensitive": true
        },
        "GetConnectableResourcesRequest": {
            "type": "structure",
            "required": ["type", "maxItems", "databaseType"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "accountSettings": { "shape": "DatabaseConnectionAccountSettings" },
                "type": { "shape": "GetConnectableResourcesRequestTypeString" },
                "maxItems": { "shape": "GetConnectableResourcesRequestMaxItemsInteger" },
                "pageToken": { "shape": "PageToken" },
                "databaseType": {
                    "shape": "DatabaseType",
                    "location": "querystring",
                    "locationName": "databaseType"
                }
            }
        },
        "GetConnectableResourcesRequestMaxItemsInteger": {
            "type": "integer",
            "box": true,
            "max": 50,
            "min": 20
        },
        "GetConnectableResourcesRequestTypeString": {
            "type": "string",
            "max": 150,
            "min": 0
        },
        "GetConnectableResourcesResponse": {
            "type": "structure",
            "required": ["connectableResources"],
            "members": {
                "connectableResources": { "shape": "ConnectableResources" },
                "nextToken": { "shape": "String" }
            }
        },
        "GetConnectionRequest": {
            "type": "structure",
            "required": ["connectionId"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "connectionId": {
                    "shape": "GetConnectionRequestConnectionIdString",
                    "documentation": "<p>Id of connection to delete</p>",
                    "location": "uri",
                    "locationName": "connectionId"
                }
            }
        },
        "GetConnectionRequestConnectionIdString": {
            "type": "string",
            "max": 1000,
            "min": 1
        },
        "GetConnectionResponse": {
            "type": "structure",
            "members": {
                "data": { "shape": "Connection" }
            }
        },
        "GetDatabaseConfigurationsRequest": {
            "type": "structure",
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "accountSettings": { "shape": "DatabaseConnectionAccountSettings" }
            }
        },
        "GetDatabaseConfigurationsResponse": {
            "type": "structure",
            "members": {
                "configurations": { "shape": "DatabaseConfigurations" }
            }
        },
        "GetQueryExecutionHistoryRequest": {
            "type": "structure",
            "required": ["queryExecutionId"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "queryExecutionId": { "shape": "GetQueryExecutionHistoryRequestQueryExecutionIdString" },
                "accountSettings": { "shape": "DatabaseConnectionAccountSettings" }
            }
        },
        "GetQueryExecutionHistoryRequestQueryExecutionIdString": {
            "type": "string",
            "max": 100,
            "min": 1
        },
        "GetQueryExecutionHistoryResponse": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "querySourceId": { "shape": "String" },
                "queryStartTime": { "shape": "Long" },
                "queryEndTime": { "shape": "Long" },
                "status": { "shape": "QueryExecutionStatus" },
                "queryText": { "shape": "FullQueryText" },
                "serializedMetadata": { "shape": "SerializedMetadata" },
                "serializedQueryStats": { "shape": "SerializedQueryStats" },
                "databaseType": { "shape": "DatabaseType" }
            }
        },
        "GetQueryResultRequest": {
            "type": "structure",
            "required": ["queryExecutionId", "databaseType"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "queryExecutionId": { "shape": "GetQueryResultRequestQueryExecutionIdString" },
                "accountSettings": { "shape": "DatabaseConnectionAccountSettings" },
                "pageToken": { "shape": "PageToken" },
                "databaseType": {
                    "shape": "DatabaseType",
                    "location": "querystring",
                    "locationName": "databaseType"
                },
                "pageSize": { "shape": "GetQueryResultRequestPageSizeInteger" }
            }
        },
        "GetQueryResultRequestPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 0
        },
        "GetQueryResultRequestQueryExecutionIdString": {
            "type": "string",
            "max": 100,
            "min": 1
        },
        "GetQueryResultResponse": {
            "type": "structure",
            "members": {
                "queryResult": { "shape": "QueryResult" },
                "nextToken": { "shape": "String" },
                "previousToken": { "shape": "String" }
            }
        },
        "GetResourcesRequest": {
            "type": "structure",
            "required": ["parents", "type", "maxItems"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "connectionId": { "shape": "GetResourcesRequestConnectionIdString" },
                "databaseType": {
                    "shape": "DatabaseType",
                    "location": "querystring",
                    "locationName": "databaseType"
                },
                "connection": { "shape": "DatabaseConnectionConfiguration" },
                "accountSettings": { "shape": "DatabaseConnectionAccountSettings" },
                "parents": { "shape": "ParentResources" },
                "type": { "shape": "GetResourcesRequestTypeString" },
                "maxItems": { "shape": "GetResourcesRequestMaxItemsInteger" },
                "pageToken": { "shape": "PageToken" },
                "forceRefresh": { "shape": "Boolean" },
                "forceRefreshRecursive": { "shape": "Boolean" }
            }
        },
        "GetResourcesRequestConnectionIdString": {
            "type": "string",
            "max": 2048,
            "min": 32
        },
        "GetResourcesRequestMaxItemsInteger": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 20
        },
        "GetResourcesRequestTypeString": {
            "type": "string",
            "max": 150,
            "min": 0
        },
        "GetResourcesResponse": {
            "type": "structure",
            "members": {
                "resources": { "shape": "Resources" },
                "nextToken": { "shape": "String" },
                "statusCode": {
                    "shape": "statusCode",
                    "location": "statusCode"
                },
                "connectionProperties": { "shape": "ConnectionProperties" }
            }
        },
        "GetTabStatesRequest": {
            "type": "structure",
            "required": ["tabId"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "accountSettings": { "shape": "DatabaseConnectionAccountSettings" },
                "tabId": { "shape": "String" }
            }
        },
        "GetTabStatesResponse": {
            "type": "structure",
            "required": ["queryExecutionStates"],
            "members": {
                "queryExecutionStates": { "shape": "QueryExecutionStates" },
                "sessionId": { "shape": "String" }
            }
        },
        "Integer": {
            "type": "integer",
            "box": true
        },
        "InternalServerError": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": { "shape": "String" },
                "code": { "shape": "ErrorCode" }
            },
            "error": { "httpStatusCode": 500 },
            "exception": true,
            "fault": true
        },
        "KmsKeyArn": {
            "type": "string",
            "max": 1000,
            "min": 0,
            "pattern": "arn:.*"
        },
        "ListQueryExecutionHistoryRequest": {
            "type": "structure",
            "required": ["maxItems"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "maxItems": { "shape": "ListQueryExecutionHistoryRequestMaxItemsInteger" },
                "accountSettings": { "shape": "DatabaseConnectionAccountSettings" },
                "pageToken": { "shape": "ListQueryExecutionHistoryRequestPageTokenString" },
                "querySourceId": { "shape": "ListQueryExecutionHistoryRequestQuerySourceIdString" },
                "databaseType": { "shape": "DatabaseType" },
                "status": { "shape": "QueryExecutionStatus" },
                "startTime": { "shape": "QueryHistoryTimestamp" },
                "endTime": { "shape": "QueryHistoryTimestamp" },
                "containsText": { "shape": "ListQueryExecutionHistoryRequestContainsTextString" }
            }
        },
        "ListQueryExecutionHistoryRequestContainsTextString": {
            "type": "string",
            "max": 100,
            "min": 0
        },
        "ListQueryExecutionHistoryRequestMaxItemsInteger": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 1
        },
        "ListQueryExecutionHistoryRequestPageTokenString": {
            "type": "string",
            "max": 10000,
            "min": 0
        },
        "ListQueryExecutionHistoryRequestQuerySourceIdString": {
            "type": "string",
            "max": 100,
            "min": 0
        },
        "ListQueryExecutionHistoryResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "items": { "shape": "QueryExecutionHistoryPreviews" },
                "nextToken": { "shape": "ListQueryExecutionHistoryResponseNextTokenString" }
            }
        },
        "ListQueryExecutionHistoryResponseNextTokenString": {
            "type": "string",
            "max": 1000,
            "min": 0
        },
        "ListTagsForResourceRequest": {
            "type": "structure",
            "required": ["resourceArn"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "resourceArn": {
                    "shape": "Arn",
                    "location": "uri",
                    "locationName": "resourceArn"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "structure",
            "required": ["tags"],
            "members": {
                "tags": { "shape": "Tags" }
            }
        },
        "Long": {
            "type": "long",
            "box": true
        },
        "PageToken": {
            "type": "string",
            "max": 1000,
            "min": 0
        },
        "ParentResource": {
            "type": "structure",
            "required": ["parentId", "parentType"],
            "members": {
                "parentId": { "shape": "ParentResourceParentIdString" },
                "parentType": { "shape": "ParentResourceParentTypeString" }
            }
        },
        "ParentResourceParentIdString": {
            "type": "string",
            "max": 1000,
            "min": 1,
            "sensitive": true
        },
        "ParentResourceParentTypeString": {
            "type": "string",
            "max": 100,
            "min": 1
        },
        "ParentResources": {
            "type": "list",
            "member": { "shape": "ParentResource" }
        },
        "PollQueryExecutionEventsRequest": {
            "type": "structure",
            "required": ["queryExecutionIds", "databaseType"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "queryExecutionIds": { "shape": "PollQueryExecutionEventsRequestQueryExecutionIdsList" },
                "accountSettings": { "shape": "DatabaseConnectionAccountSettings" },
                "databaseType": {
                    "shape": "DatabaseType",
                    "location": "querystring",
                    "locationName": "databaseType"
                },
                "ackIds": { "shape": "AckIds" }
            }
        },
        "PollQueryExecutionEventsRequestQueryExecutionIdsList": {
            "type": "list",
            "member": { "shape": "PollQueryExecutionEventsRequestQueryExecutionIdsListMemberString" },
            "max": 100,
            "min": 1
        },
        "PollQueryExecutionEventsRequestQueryExecutionIdsListMemberString": {
            "type": "string",
            "max": 100,
            "min": 1
        },
        "PollQueryExecutionEventsResponse": {
            "type": "structure",
            "members": {
                "events": { "shape": "QueryExecutionEvents" }
            }
        },
        "QueryCancellationStatus": {
            "type": "string",
            "enum": ["CANCELLED", "DOES_NOT_EXISTS", "ALREADY_FINISHED", "CANCELLATION_FAILED"]
        },
        "QueryExecution": {
            "type": "structure",
            "required": ["queryExecutionId"],
            "members": {
                "queryExecutionStatus": { "shape": "QueryExecutionStatus" },
                "queryExecutionId": { "shape": "QueryExecutionQueryExecutionIdString" },
                "queryResult": { "shape": "QueryResult" },
                "queryText": { "shape": "QueryText" }
            }
        },
        "QueryExecutionEvent": {
            "type": "structure",
            "required": ["queryExecutionEventType", "queryExecutionId"],
            "members": {
                "queryExecutionEventType": { "shape": "QueryExecutionEventType" },
                "queryExecutionId": { "shape": "QueryExecutionEventQueryExecutionIdString" },
                "queryExecutionStatus": { "shape": "QueryExecutionStatus" },
                "queryResult": { "shape": "QueryResult" },
                "nextToken": { "shape": "String" },
                "ackId": { "shape": "String" }
            }
        },
        "QueryExecutionEventQueryExecutionIdString": {
            "type": "string",
            "max": 100,
            "min": 0
        },
        "QueryExecutionEventType": {
            "type": "string",
            "enum": ["QUERY_EXECUTION_STATUS", "QUERY_EXECUTION_RESULT"]
        },
        "QueryExecutionEvents": {
            "type": "list",
            "member": { "shape": "QueryExecutionEvent" }
        },
        "QueryExecutionHistoryPreview": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "querySourceId": { "shape": "String" },
                "queryStartTime": { "shape": "Long" },
                "queryEndTime": { "shape": "Long" },
                "status": { "shape": "QueryExecutionStatus" },
                "queryTextPreview": { "shape": "QueryTextPreview" },
                "serializedMetadata": { "shape": "SerializedMetadata" },
                "databaseType": { "shape": "DatabaseType" }
            }
        },
        "QueryExecutionHistoryPreviews": {
            "type": "list",
            "member": { "shape": "QueryExecutionHistoryPreview" }
        },
        "QueryExecutionQueryExecutionIdString": {
            "type": "string",
            "max": 100,
            "min": 0
        },
        "QueryExecutionState": {
            "type": "structure",
            "required": ["queryExecutionId", "status", "databaseType"],
            "members": {
                "queryExecutionId": { "shape": "String" },
                "status": { "shape": "String" },
                "databaseType": { "shape": "DatabaseType" }
            }
        },
        "QueryExecutionStates": {
            "type": "list",
            "member": { "shape": "QueryExecutionState" }
        },
        "QueryExecutionStatus": {
            "type": "string",
            "enum": ["SCHEDULED", "RUNNING", "FAILED", "CANCELLED", "FINISHED"]
        },
        "QueryExecutionType": {
            "type": "string",
            "enum": ["PERSIST_SESSION", "NO_SESSION"]
        },
        "QueryExecutionWarning": {
            "type": "structure",
            "members": {
                "message": { "shape": "QueryExecutionWarningMessage" },
                "level": { "shape": "QueryExecutionWarningLevel" }
            }
        },
        "QueryExecutionWarningLevel": {
            "type": "string",
            "enum": ["INFO", "WARNING"]
        },
        "QueryExecutionWarningMessage": {
            "type": "string",
            "max": 1000,
            "min": 0,
            "sensitive": true
        },
        "QueryExecutionWarnings": {
            "type": "list",
            "member": { "shape": "QueryExecutionWarning" }
        },
        "QueryExecutions": {
            "type": "list",
            "member": { "shape": "QueryExecution" }
        },
        "QueryHistoryTimestamp": {
            "type": "long",
            "box": true
        },
        "QueryResponseDeliveryType": {
            "type": "string",
            "enum": ["SYNC", "ASYNC"]
        },
        "QueryResult": {
            "type": "structure",
            "members": {
                "queryExecutionStatus": { "shape": "QueryExecutionStatus" },
                "headers": { "shape": "QueryResultHeaders" },
                "rows": { "shape": "Rows" },
                "affectedRows": { "shape": "Integer" },
                "totalRowCount": { "shape": "Integer" },
                "elapsedTime": { "shape": "Long" },
                "errorMessage": { "shape": "QueryResultErrorMessage" },
                "errorPosition": { "shape": "Integer" },
                "queryResultWarningCode": { "shape": "QueryResultQueryResultWarningCodeString" },
                "warnings": { "shape": "QueryExecutionWarnings" },
                "queryExecutionId": { "shape": "String" },
                "sessionId": { "shape": "String" },
                "queryText": { "shape": "QueryText" },
                "statementType": { "shape": "StatementType" },
                "serializedMetadata": { "shape": "SerializedMetadata" },
                "connectionProperties": { "shape": "ConnectionProperties" }
            }
        },
        "QueryResultCellType": {
            "type": "string",
            "enum": ["STRING", "BOOLEAN", "INTEGER", "BIG_INTEGER", "FLOAT", "BIG_DECIMAL", "DATE", "TIME", "DATETIME"]
        },
        "QueryResultCellValue": {
            "type": "string",
            "sensitive": true
        },
        "QueryResultErrorMessage": {
            "type": "string",
            "max": 1000,
            "min": 0,
            "sensitive": true
        },
        "QueryResultHeader": {
            "type": "structure",
            "required": ["displayName", "type"],
            "members": {
                "displayName": { "shape": "QueryResultHeaderDisplayName" },
                "type": { "shape": "QueryResultCellType" }
            }
        },
        "QueryResultHeaderDisplayName": {
            "type": "string",
            "sensitive": true
        },
        "QueryResultHeaders": {
            "type": "list",
            "member": { "shape": "QueryResultHeader" }
        },
        "QueryResultQueryResultWarningCodeString": {
            "type": "string",
            "max": 100,
            "min": 0
        },
        "QueryText": {
            "type": "string",
            "sensitive": true
        },
        "QueryTextPreview": {
            "type": "string",
            "max": 150,
            "min": 0,
            "sensitive": true
        },
        "Resource": {
            "type": "structure",
            "required": ["displayName", "identifier", "childObjectTypes"],
            "members": {
                "displayName": { "shape": "ResourceDisplayName" },
                "identifier": { "shape": "ResourceIdentifier" },
                "type": { "shape": "ResourceTypeString" },
                "unavailable": { "shape": "Boolean" },
                "tooltipTranslationKey": { "shape": "ResourceTooltipTranslationKeyString" },
                "childObjectTypes": { "shape": "ChildObjectTypes" },
                "allowedActions": { "shape": "ResourceActions" },
                "resourceMetadata": { "shape": "ResourceMetadataItems" }
            }
        },
        "ResourceAction": {
            "type": "string",
            "enum": ["Drop", "Truncate", "GenerateDefinition", "GenerateSelectQuery"]
        },
        "ResourceActions": {
            "type": "list",
            "member": { "shape": "ResourceAction" }
        },
        "ResourceDisplayName": {
            "type": "string",
            "max": 150,
            "min": 0,
            "sensitive": true
        },
        "ResourceIdentifier": {
            "type": "string",
            "max": 150,
            "min": 0,
            "sensitive": true
        },
        "ResourceMetadata": {
            "type": "structure",
            "members": {
                "key": { "shape": "String" },
                "value": { "shape": "String" }
            }
        },
        "ResourceMetadataItems": {
            "type": "list",
            "member": { "shape": "ResourceMetadata" }
        },
        "ResourceNotFoundException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": { "shape": "String" },
                "code": { "shape": "ErrorCode" }
            },
            "error": {
                "httpStatusCode": 404,
                "senderFault": true
            },
            "exception": true
        },
        "ResourceTooltipTranslationKeyString": {
            "type": "string",
            "max": 50,
            "min": 0
        },
        "ResourceTypeString": {
            "type": "string",
            "max": 50,
            "min": 0
        },
        "Resources": {
            "type": "list",
            "member": { "shape": "Resource" }
        },
        "Row": {
            "type": "structure",
            "members": {
                "row": { "shape": "Columns" }
            }
        },
        "Rows": {
            "type": "list",
            "member": { "shape": "Row" }
        },
        "SecretKeyArn": {
            "type": "string",
            "max": 1000,
            "min": 0,
            "pattern": "arn:.*"
        },
        "SerializedMetadata": {
            "type": "string",
            "max": 1000000,
            "min": 0,
            "sensitive": true
        },
        "SerializedQueryStats": {
            "type": "string",
            "max": 1000000,
            "min": 0,
            "sensitive": true
        },
        "ServiceQuotaExceededException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": { "shape": "String" },
                "code": { "shape": "ErrorCode" }
            },
            "error": {
                "httpStatusCode": 402,
                "senderFault": true
            },
            "exception": true
        },
        "SqlworkbenchSource": {
            "type": "string",
            "enum": ["SUS", "RQEV2"]
        },
        "StatementType": {
            "type": "string",
            "enum": ["DQL", "DML", "DDL", "DCL", "Utility"]
        },
        "StreamingBlob": {
            "type": "blob",
            "streaming": true
        },
        "String": { "type": "string" },
        "TagKey": {
            "type": "string",
            "max": 128,
            "min": 1,
            "pattern": "([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)"
        },
        "TagKeyList": {
            "type": "list",
            "member": { "shape": "TagKey" },
            "max": 6500,
            "min": 1
        },
        "TagResourceRequest": {
            "type": "structure",
            "required": ["resourceArn", "tags"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "resourceArn": {
                    "shape": "Arn",
                    "location": "uri",
                    "locationName": "resourceArn"
                },
                "tags": { "shape": "Tags" }
            }
        },
        "TagResourceResponse": {
            "type": "structure",
            "members": {}
        },
        "TagValue": {
            "type": "string",
            "max": 256,
            "min": 0,
            "pattern": "([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)"
        },
        "TagrisAccessDeniedException": {
            "type": "structure",
            "members": {
                "message": { "shape": "TagrisExceptionMessage" }
            },
            "exception": true
        },
        "TagrisAccountId": {
            "type": "string",
            "max": 12,
            "min": 12
        },
        "TagrisAmazonResourceName": {
            "type": "string",
            "max": 1011,
            "min": 1
        },
        "TagrisExceptionMessage": {
            "type": "string",
            "max": 2048,
            "min": 0
        },
        "TagrisInternalId": {
            "type": "string",
            "max": 64,
            "min": 0
        },
        "TagrisInternalServiceException": {
            "type": "structure",
            "members": {
                "message": { "shape": "TagrisExceptionMessage" }
            },
            "exception": true,
            "fault": true
        },
        "TagrisInvalidArnException": {
            "type": "structure",
            "members": {
                "message": { "shape": "TagrisExceptionMessage" },
                "sweepListItem": { "shape": "TagrisSweepListItem" }
            },
            "exception": true
        },
        "TagrisInvalidParameterException": {
            "type": "structure",
            "members": {
                "message": { "shape": "TagrisExceptionMessage" }
            },
            "exception": true
        },
        "TagrisPartialResourcesExistResultsException": {
            "type": "structure",
            "members": {
                "message": { "shape": "TagrisExceptionMessage" },
                "resourceExistenceInformation": { "shape": "TagrisSweepListResult" }
            },
            "exception": true
        },
        "TagrisStatus": {
            "type": "string",
            "enum": ["ACTIVE", "NOT_ACTIVE"]
        },
        "TagrisSweepList": {
            "type": "list",
            "member": { "shape": "TagrisSweepListItem" }
        },
        "TagrisSweepListItem": {
            "type": "structure",
            "members": {
                "TagrisAccountId": { "shape": "TagrisAccountId" },
                "TagrisAmazonResourceName": { "shape": "TagrisAmazonResourceName" },
                "TagrisInternalId": { "shape": "TagrisInternalId" },
                "TagrisVersion": { "shape": "TagrisVersion" }
            }
        },
        "TagrisSweepListResult": {
            "type": "map",
            "key": { "shape": "TagrisAmazonResourceName" },
            "value": { "shape": "TagrisStatus" }
        },
        "TagrisThrottledException": {
            "type": "structure",
            "members": {
                "message": { "shape": "TagrisExceptionMessage" }
            },
            "exception": true
        },
        "TagrisVerifyResourcesExistInput": {
            "type": "structure",
            "required": ["TagrisSweepList"],
            "members": {
                "TagrisSweepList": { "shape": "TagrisSweepList" }
            }
        },
        "TagrisVerifyResourcesExistOutput": {
            "type": "structure",
            "required": ["TagrisSweepListResult"],
            "members": {
                "TagrisSweepListResult": { "shape": "TagrisSweepListResult" }
            }
        },
        "TagrisVersion": { "type": "long" },
        "Tags": {
            "type": "map",
            "key": { "shape": "TagKey" },
            "value": { "shape": "TagValue" },
            "max": 50,
            "min": 1
        },
        "ThrottlingException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": { "shape": "String" },
                "code": { "shape": "ErrorCode" }
            },
            "error": {
                "httpStatusCode": 429,
                "senderFault": true
            },
            "exception": true
        },
        "UntagResourceRequest": {
            "type": "structure",
            "required": ["resourceArn", "tagKeys"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "resourceArn": {
                    "shape": "Arn",
                    "location": "uri",
                    "locationName": "resourceArn"
                },
                "tagKeys": {
                    "shape": "TagKeyList",
                    "location": "querystring",
                    "locationName": "tagKeys"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "structure",
            "members": {}
        },
        "UpdateConnectionRequest": {
            "type": "structure",
            "required": ["id", "authenticationType"],
            "members": {
                "sqlworkbenchSource": {
                    "shape": "SqlworkbenchSource",
                    "location": "header",
                    "locationName": "sqlworkbench-source"
                },
                "id": {
                    "shape": "UpdateConnectionRequestIdString",
                    "documentation": "<p>Id of the connection to update</p>"
                },
                "name": {
                    "shape": "UpdateConnectionRequestNameString",
                    "documentation": "<p>Name of the connection</p>"
                },
                "databaseName": {
                    "shape": "UpdateConnectionRequestDatabaseNameString",
                    "documentation": "<p>Name of the database used for this connection</p>"
                },
                "authenticationType": {
                    "shape": "UpdateConnectionRequestAuthenticationTypeEnum",
                    "documentation": "<p>Number representing the type of authentication to use (2 = IAM, 3 = Username and Password, 4 = Federated connection)</p>"
                },
                "secretArn": {
                    "shape": "UpdateConnectionRequestSecretArnString",
                    "documentation": "<p>secretArn for redshift cluster</p>"
                },
                "clusterId": {
                    "shape": "UpdateConnectionRequestClusterIdString",
                    "documentation": "<p>Id of the cluster used for this connection</p>"
                },
                "isServerless": {
                    "shape": "Boolean",
                    "documentation": "<p>Is serverless connection</p>"
                },
                "dbUser": {
                    "shape": "DbUser",
                    "documentation": "<p>User of the database used for this connection</p>"
                },
                "username": {
                    "shape": "DbUser",
                    "documentation": "<p>Username used in the Username_Password connection type</p>"
                },
                "password": {
                    "shape": "UpdateConnectionRequestPasswordString",
                    "documentation": "<p>Password of the user used for this connection</p>"
                },
                "host": {
                    "shape": "String",
                    "documentation": "<p>Host address used for creating secret for Username_Password connection type</p>"
                },
                "databaseType": { "shape": "DatabaseType" },
                "connectableResourceIdentifier": {
                    "shape": "UpdateConnectionRequestConnectableResourceIdentifierString",
                    "documentation": "<p>Id of the connectable resource used for this connection</p>"
                },
                "connectableResourceType": {
                    "shape": "UpdateConnectionRequestConnectableResourceTypeString",
                    "documentation": "<p>Type of the connectable resource used for this connection</p>"
                }
            }
        },
        "UpdateConnectionRequestAuthenticationTypeEnum": {
            "type": "string",
            "enum": ["2", "3", "4", "5", "6", "7", "8"],
            "max": 1,
            "min": 1,
            "sensitive": true
        },
        "UpdateConnectionRequestClusterIdString": {
            "type": "string",
            "max": 63,
            "min": 1
        },
        "UpdateConnectionRequestConnectableResourceIdentifierString": {
            "type": "string",
            "max": 63,
            "min": 1,
            "sensitive": true
        },
        "UpdateConnectionRequestConnectableResourceTypeString": {
            "type": "string",
            "max": 63,
            "min": 1
        },
        "UpdateConnectionRequestDatabaseNameString": {
            "type": "string",
            "max": 64,
            "min": 1,
            "sensitive": true
        },
        "UpdateConnectionRequestIdString": {
            "type": "string",
            "max": 2048,
            "min": 32
        },
        "UpdateConnectionRequestNameString": {
            "type": "string",
            "max": 512,
            "min": 1,
            "sensitive": true
        },
        "UpdateConnectionRequestPasswordString": {
            "type": "string",
            "max": 64,
            "min": 8,
            "sensitive": true
        },
        "UpdateConnectionRequestSecretArnString": {
            "type": "string",
            "max": 1000,
            "min": 1
        },
        "UpdateConnectionResponse": {
            "type": "structure",
            "members": {
                "data": { "shape": "Connection" }
            }
        },
        "UserSettings": {
            "type": "string",
            "sensitive": true
        },
        "ValidationException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": { "shape": "String" },
                "code": { "shape": "ErrorCode" }
            },
            "error": {
                "httpStatusCode": 400,
                "senderFault": true
            },
            "exception": true
        },
        "statusCode": {
            "type": "integer",
            "box": true,
            "max": 500,
            "min": 100
        }
    }
}
