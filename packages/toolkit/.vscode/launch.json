// A launch configuration that compiles the extension and then opens it inside a new window
// Use IntelliSense to learn about possible attributes.
// Hover to view descriptions of existing attributes.
// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Extension",
            "type": "extensionHost",
            "request": "launch",
            "debugWebviews": true,
            "rendererDebugOptions": {
                "urlFilter": "*amazonwebservices.aws-toolkit-vscode*",
                "webRoot": "${workspaceFolder}"
            },
            "runtimeExecutable": "${execPath}",
            "args": ["--extensionDevelopmentPath=${workspaceFolder}"],
            "env": {
                "SSMDOCUMENT_LANGUAGESERVER_PORT": "6010",
                "WEBPACK_DEVELOPER_SERVER": "http://localhost:8080"
            },
            "envFile": "${workspaceFolder}/.local.env",
            "outFiles": ["${workspaceFolder}/dist/**/*.js", "${workspaceFolder}/../core/dist/**/*.js"],
            "preLaunchTask": "watch",
            "postDebugTask": "terminate"
        },
        {
            /** Handles the entire process of building and running the toolkit extension in the browser. **/
            "name": "Extension (Chrome)",
            "type": "chrome",
            "request": "attach",
            "port": 9222,
            /**
            To get an understanding why we need the following:
              - comment out the following
              - set a breakpoint in VS Code that gets triggerd on extension startup
            Now in the Chrome Developer Tools menu, the extension will load slower and open up random files.
            I think this is due to source maps for irrelevant code being attempted to be resolved and slowing execution.

            What this is doing is ignoring certain modules that match the following paths, it matches the path of
            a file in `Developer Tools` > `Sources`.
            I was inspired by this: https://github.com/microsoft/vscode-test-web/blob/897bca4907a87a6bc564efc242ce6794e5da3232/.vscode/launch.json#L28
            **/
            "resolveSourceMapLocations": [
                // "!**/node_modules/**", // TODO: Removing this makes it slow again, but debugging in VSCode won't work without it :(
                "!**/vs/**",
                "!**/extensions/**"
            ],
            "preLaunchTask": "webRun",
            "postDebugTask": "webRunTerminate"
        },
        {
            "name": "Extension (webpack)",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": ["--extensionDevelopmentPath=${workspaceFolder}"],
            "outFiles": ["${workspaceFolder}/dist/**/*.js", "${workspaceFolder}/../core/dist/**/*.js"],
            "preLaunchTask": "npm: compile",
            "postDebugTask": "terminate"
        },
        {
            "name": "Test Lint",
            "type": "node",
            "request": "launch",
            "program": "${workspaceFolder}/scripts/lint/testLint.ts",
            "outFiles": ["${workspaceFolder}/dist/**/*.js"],
            "preLaunchTask": "${defaultBuildTask}"
        },
        {
            "name": "Attach to ASL Server",
            "type": "node",
            "request": "attach",
            "port": 6009,
            "restart": true,
            "outFiles": ["${workspaceRoot}/dist/src/stepFunctions/asl/**.js"]
        },
        {
            "name": "Attach to SSM Document Language Server",
            "type": "node",
            "request": "attach",
            "port": 6010,
            "restart": true,
            "outFiles": ["${workspaceRoot}/dist/src/ssmDocument/ssm/ssmServer.js"]
        }
    ],
    "compounds": [
        {
            "name": "Extension + Attach to SSM Document Language Server",
            "configurations": ["Extension", "Attach to SSM Document Language Server"]
        }
    ]
}
