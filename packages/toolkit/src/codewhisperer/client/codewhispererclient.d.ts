
/**
 * THIS FILE IS AUTOGENERATED BY 'generateServiceClient.ts'.
 * DO NOT EDIT BY HAND.
 */

import {Request} from 'aws-sdk/lib/request';
import {Response} from 'aws-sdk/lib/response';
import {AWSError} from 'aws-sdk/lib/error';
import {Service} from 'aws-sdk/lib/service';
import {ServiceConfigurationOptions} from 'aws-sdk/lib/service';
import {ConfigBase as Config} from 'aws-sdk/lib/config-base';
interface Blob {}
declare class CodeWhispererClient extends Service {
  /**
   * Constructs a service object. This object has one method for each API operation.
   */
  constructor(options?: CodeWhispererClient.Types.ClientConfiguration)
  config: Config & CodeWhispererClient.Types.ClientConfiguration;
  /**
   * 
   */
  createCodeScan(params: CodeWhispererClient.Types.CreateCodeScanRequest, callback?: (err: AWSError, data: CodeWhispererClient.Types.CreateCodeScanResponse) => void): Request<CodeWhispererClient.Types.CreateCodeScanResponse, AWSError>;
  /**
   * 
   */
  createCodeScan(callback?: (err: AWSError, data: CodeWhispererClient.Types.CreateCodeScanResponse) => void): Request<CodeWhispererClient.Types.CreateCodeScanResponse, AWSError>;
  /**
   * 
   */
  createCodeScanUploadUrl(params: CodeWhispererClient.Types.CreateUploadUrlRequest, callback?: (err: AWSError, data: CodeWhispererClient.Types.CreateUploadUrlResponse) => void): Request<CodeWhispererClient.Types.CreateUploadUrlResponse, AWSError>;
  /**
   * 
   */
  createCodeScanUploadUrl(callback?: (err: AWSError, data: CodeWhispererClient.Types.CreateUploadUrlResponse) => void): Request<CodeWhispererClient.Types.CreateUploadUrlResponse, AWSError>;
  /**
   * 
   */
  createProfile(params: CodeWhispererClient.Types.CreateProfileRequest, callback?: (err: AWSError, data: CodeWhispererClient.Types.CreateProfileResponse) => void): Request<CodeWhispererClient.Types.CreateProfileResponse, AWSError>;
  /**
   * 
   */
  createProfile(callback?: (err: AWSError, data: CodeWhispererClient.Types.CreateProfileResponse) => void): Request<CodeWhispererClient.Types.CreateProfileResponse, AWSError>;
  /**
   * 
   */
  deleteProfile(params: CodeWhispererClient.Types.DeleteProfileRequest, callback?: (err: AWSError, data: CodeWhispererClient.Types.DeleteProfileResponse) => void): Request<CodeWhispererClient.Types.DeleteProfileResponse, AWSError>;
  /**
   * 
   */
  deleteProfile(callback?: (err: AWSError, data: CodeWhispererClient.Types.DeleteProfileResponse) => void): Request<CodeWhispererClient.Types.DeleteProfileResponse, AWSError>;
  /**
   * 
   */
  generateRecommendations(params: CodeWhispererClient.Types.GenerateRecommendationsRequest, callback?: (err: AWSError, data: CodeWhispererClient.Types.GenerateRecommendationsResponse) => void): Request<CodeWhispererClient.Types.GenerateRecommendationsResponse, AWSError>;
  /**
   * 
   */
  generateRecommendations(callback?: (err: AWSError, data: CodeWhispererClient.Types.GenerateRecommendationsResponse) => void): Request<CodeWhispererClient.Types.GenerateRecommendationsResponse, AWSError>;
  /**
   * 
   */
  getAccessToken(params: CodeWhispererClient.Types.GetAccessTokenRequest, callback?: (err: AWSError, data: CodeWhispererClient.Types.GetAccessTokenResponse) => void): Request<CodeWhispererClient.Types.GetAccessTokenResponse, AWSError>;
  /**
   * 
   */
  getAccessToken(callback?: (err: AWSError, data: CodeWhispererClient.Types.GetAccessTokenResponse) => void): Request<CodeWhispererClient.Types.GetAccessTokenResponse, AWSError>;
  /**
   * 
   */
  getCodeScan(params: CodeWhispererClient.Types.GetCodeScanRequest, callback?: (err: AWSError, data: CodeWhispererClient.Types.GetCodeScanResponse) => void): Request<CodeWhispererClient.Types.GetCodeScanResponse, AWSError>;
  /**
   * 
   */
  getCodeScan(callback?: (err: AWSError, data: CodeWhispererClient.Types.GetCodeScanResponse) => void): Request<CodeWhispererClient.Types.GetCodeScanResponse, AWSError>;
  /**
   * 
   */
  listCodeScanFindings(params: CodeWhispererClient.Types.ListCodeScanFindingsRequest, callback?: (err: AWSError, data: CodeWhispererClient.Types.ListCodeScanFindingsResponse) => void): Request<CodeWhispererClient.Types.ListCodeScanFindingsResponse, AWSError>;
  /**
   * 
   */
  listCodeScanFindings(callback?: (err: AWSError, data: CodeWhispererClient.Types.ListCodeScanFindingsResponse) => void): Request<CodeWhispererClient.Types.ListCodeScanFindingsResponse, AWSError>;
  /**
   * 
   */
  listProfiles(params: CodeWhispererClient.Types.ListProfilesRequest, callback?: (err: AWSError, data: CodeWhispererClient.Types.ListProfilesResponse) => void): Request<CodeWhispererClient.Types.ListProfilesResponse, AWSError>;
  /**
   * 
   */
  listProfiles(callback?: (err: AWSError, data: CodeWhispererClient.Types.ListProfilesResponse) => void): Request<CodeWhispererClient.Types.ListProfilesResponse, AWSError>;
  /**
   * 
   */
  listRecommendations(params: CodeWhispererClient.Types.ListRecommendationsRequest, callback?: (err: AWSError, data: CodeWhispererClient.Types.ListRecommendationsResponse) => void): Request<CodeWhispererClient.Types.ListRecommendationsResponse, AWSError>;
  /**
   * 
   */
  listRecommendations(callback?: (err: AWSError, data: CodeWhispererClient.Types.ListRecommendationsResponse) => void): Request<CodeWhispererClient.Types.ListRecommendationsResponse, AWSError>;
  /**
   * 
   */
  listTagsForResource(params: CodeWhispererClient.Types.ListTagsForResourceRequest, callback?: (err: AWSError, data: CodeWhispererClient.Types.ListTagsForResourceResponse) => void): Request<CodeWhispererClient.Types.ListTagsForResourceResponse, AWSError>;
  /**
   * 
   */
  listTagsForResource(callback?: (err: AWSError, data: CodeWhispererClient.Types.ListTagsForResourceResponse) => void): Request<CodeWhispererClient.Types.ListTagsForResourceResponse, AWSError>;
  /**
   * 
   */
  tagResource(params: CodeWhispererClient.Types.TagResourceRequest, callback?: (err: AWSError, data: CodeWhispererClient.Types.TagResourceResponse) => void): Request<CodeWhispererClient.Types.TagResourceResponse, AWSError>;
  /**
   * 
   */
  tagResource(callback?: (err: AWSError, data: CodeWhispererClient.Types.TagResourceResponse) => void): Request<CodeWhispererClient.Types.TagResourceResponse, AWSError>;
  /**
   * 
   */
  untagResource(params: CodeWhispererClient.Types.UntagResourceRequest, callback?: (err: AWSError, data: CodeWhispererClient.Types.UntagResourceResponse) => void): Request<CodeWhispererClient.Types.UntagResourceResponse, AWSError>;
  /**
   * 
   */
  untagResource(callback?: (err: AWSError, data: CodeWhispererClient.Types.UntagResourceResponse) => void): Request<CodeWhispererClient.Types.UntagResourceResponse, AWSError>;
  /**
   * 
   */
  updateProfile(params: CodeWhispererClient.Types.UpdateProfileRequest, callback?: (err: AWSError, data: CodeWhispererClient.Types.UpdateProfileResponse) => void): Request<CodeWhispererClient.Types.UpdateProfileResponse, AWSError>;
  /**
   * 
   */
  updateProfile(callback?: (err: AWSError, data: CodeWhispererClient.Types.UpdateProfileResponse) => void): Request<CodeWhispererClient.Types.UpdateProfileResponse, AWSError>;
}
declare namespace CodeWhispererClient {
  export type ArtifactMap = {[key: string]: UploadId};
  export type ArtifactType = "SourceCode"|"BuiltJars"|string;
  export type Base64EncodedPaginationToken = string;
  export type CodeScanFindingsSchema = "codescan/findings/1.0"|string;
  export type CodeScanStatus = "Completed"|"Pending"|"Failed"|string;
  export interface CreateCodeScanRequest {
    artifacts: ArtifactMap;
    programmingLanguage: ProgrammingLanguage;
    clientToken?: CreateCodeScanRequestClientTokenString;
  }
  export type CreateCodeScanRequestClientTokenString = string;
  export interface CreateCodeScanResponse {
    jobId: CreateCodeScanResponseJobIdString;
    status: CodeScanStatus;
    errorMessage?: String;
  }
  export type CreateCodeScanResponseJobIdString = string;
  export interface CreateProfileRequest {
    identitySource: IdentitySource;
    profileName: ProfileName;
    referenceTrackerConfiguration: ReferenceTrackerConfiguration;
    clientToken?: IdempotencyToken;
    kmsKeyArn?: ResourceArn;
    tags?: TagList;
  }
  export interface CreateProfileResponse {
    profileArn: ResourceArn;
  }
  export interface CreateUploadUrlRequest {
    contentMd5?: CreateUploadUrlRequestContentMd5String;
    artifactType?: ArtifactType;
  }
  export type CreateUploadUrlRequestContentMd5String = string;
  export interface CreateUploadUrlResponse {
    uploadId: UploadId;
    uploadUrl: PreSignedUrl;
    kmsKeyArn?: ResourceArn;
  }
  export interface DeleteProfileRequest {
    profileArn: ResourceArn;
  }
  export interface DeleteProfileResponse {
  }
  export interface FileContext {
    leftFileContent: FileContextLeftFileContentString;
    rightFileContent: FileContextRightFileContentString;
    filename: FileContextFilenameString;
    programmingLanguage: ProgrammingLanguage;
  }
  export type FileContextFilenameString = string;
  export type FileContextLeftFileContentString = string;
  export type FileContextRightFileContentString = string;
  export interface SupplementalContext {
    filePath: SupplementalContextFilePathString;
    content: SupplementalContextContentString;
  }
  export type SupplementalContextFilePathString = string;
  export type SupplementalContextContentString = string;
  export type SupplementalContextList = SupplementalContext[];
  export interface GenerateRecommendationsRequest {
    fileContext: FileContext;
    supplementalContexts?: SupplementalContextList;
    maxResults?: GenerateRecommendationsRequestMaxResultsInteger;
    nextToken?: GenerateRecommendationsRequestNextTokenString;
    referenceTrackerConfiguration?: ReferenceTrackerConfiguration;
  }
  export type GenerateRecommendationsRequestMaxResultsInteger = number;
  export type GenerateRecommendationsRequestNextTokenString = string;
  export interface GenerateRecommendationsResponse {
    recommendations?: RecommendationsList;
    nextToken?: String;
  }
  export interface GetAccessTokenRequest {
    identityToken: GetAccessTokenRequestIdentityTokenString;
  }
  export type GetAccessTokenRequestIdentityTokenString = string;
  export interface GetAccessTokenResponse {
    accessToken?: SensitiveString;
  }
  export interface GetCodeScanRequest {
    jobId: GetCodeScanRequestJobIdString;
  }
  export type GetCodeScanRequestJobIdString = string;
  export interface GetCodeScanResponse {
    status: CodeScanStatus;
    errorMessage?: String;
  }
  export type IdempotencyToken = string;
  export interface IdentityDetails {
    ssoIdentityDetails?: SSOIdentityDetails;
  }
  export interface IdentitySource {
    ssoIdentitySource?: SSOIdentitySource;
  }
  export interface Import {
    statement?: ImportStatementString;
  }
  export type ImportStatementString = string;
  export type Imports = Import[];
  export interface ListCodeScanFindingsRequest {
    jobId: ListCodeScanFindingsRequestJobIdString;
    nextToken?: PaginationToken;
    codeScanFindingsSchema: CodeScanFindingsSchema;
  }
  export type ListCodeScanFindingsRequestJobIdString = string;
  export interface ListCodeScanFindingsResponse {
    nextToken?: PaginationToken;
    codeScanFindings: String;
  }
  export interface ListProfilesRequest {
    maxResults?: ListProfilesRequestMaxResultsInteger;
    nextToken?: Base64EncodedPaginationToken;
  }
  export type ListProfilesRequestMaxResultsInteger = number;
  export interface ListProfilesResponse {
    profiles: ProfileList;
    nextToken?: Base64EncodedPaginationToken;
  }
  export interface ListRecommendationsRequest {
    fileContext: FileContext;
    maxResults?: ListRecommendationsRequestMaxResultsInteger;
    supplementalContexts?: SupplementalContextList;
    nextToken?: ListRecommendationsRequestNextTokenString;
    referenceTrackerConfiguration?: ReferenceTrackerConfiguration;
  }
  export type ListRecommendationsRequestMaxResultsInteger = number;
  export type ListRecommendationsRequestNextTokenString = string;
  export interface ListRecommendationsResponse {
    recommendations?: RecommendationsList;
    nextToken?: String;
  }
  export interface ListTagsForResourceRequest {
    resourceName: ResourceArn;
  }
  export interface ListTagsForResourceResponse {
    tags?: TagList;
  }
  export type PaginationToken = string;
  export type PreSignedUrl = string;
  export interface Profile {
    arn: ResourceArn;
    identityDetails: IdentityDetails;
    profileName: ProfileName;
    referenceTrackerConfiguration: ReferenceTrackerConfiguration;
    kmsKeyArn?: ResourceArn;
  }
  export type ProfileList = Profile[];
  export type ProfileName = string;
  export interface ProgrammingLanguage {
    languageName: ProgrammingLanguageLanguageNameString;
  }
  export type ProgrammingLanguageLanguageNameString = string;
  export interface Recommendation {
    content: RecommendationContentString;
    references?: References;
    mostRelevantMissingImports?: Imports;
  }
  export type RecommendationContentString = string;
  export type RecommendationsList = Recommendation[];
  export type RecommendationsWithReferencesPreference = "BLOCK"|"ALLOW"|string;
  export interface Reference {
    licenseName?: ReferenceLicenseNameString;
    repository?: ReferenceRepositoryString;
    url?: ReferenceUrlString;
    recommendationContentSpan?: Span;
  }
  export type ReferenceLicenseNameString = string;
  export type ReferenceRepositoryString = string;
  export interface ReferenceTrackerConfiguration {
    recommendationsWithReferences: RecommendationsWithReferencesPreference;
  }
  export type ReferenceUrlString = string;
  export type References = Reference[];
  export type ResourceArn = string;
  export interface SSOIdentityDetails {
    instanceArn: ResourceArn;
    oidcClientId: String;
  }
  export interface SSOIdentitySource {
    instanceArn: ResourceArn;
  }
  export type SensitiveString = string;
  export interface Span {
    start?: SpanStartInteger;
    end?: SpanEndInteger;
  }
  export type SpanEndInteger = number;
  export type SpanStartInteger = number;
  export type String = string;
  export interface Tag {
    key: TagKey;
    value: TagValue;
  }
  export type TagKey = string;
  export type TagKeyList = TagKey[];
  export type TagList = Tag[];
  export interface TagResourceRequest {
    resourceName: ResourceArn;
    tags: TagList;
  }
  export interface TagResourceResponse {
  }
  export type TagValue = string;
  export interface UntagResourceRequest {
    resourceName: ResourceArn;
    tagKeys: TagKeyList;
  }
  export interface UntagResourceResponse {
  }
  export interface UpdateProfileRequest {
    profileArn: ResourceArn;
    profileName?: ProfileName;
    referenceTrackerConfiguration?: ReferenceTrackerConfiguration;
    kmsKeyArn?: ResourceArn;
  }
  export interface UpdateProfileResponse {
    profileArn: ResourceArn;
  }
  export type UploadId = string;
  /**
   * A string in YYYY-MM-DD format that represents the latest possible API version that can be used in this service. Specify 'latest' to use the latest possible version.
   */
  export type apiVersion = "2022-06-15"|"latest"|string;
  export interface ClientApiVersions {
    /**
     * A string in YYYY-MM-DD format that represents the latest possible API version that can be used in this service. Specify 'latest' to use the latest possible version.
     */
    apiVersion?: apiVersion;
  }
  export type ClientConfiguration = ServiceConfigurationOptions & ClientApiVersions;
  /**
   * Contains interfaces for use with the CodeWhispererClient client.
   */
  export import Types = CodeWhispererClient;
}
export = CodeWhispererClient;

    