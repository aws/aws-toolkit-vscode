{
    "AWS.title": "AWS",
    "AWS.failedToWrite": "AWS: Failed to write \"{0}\". Use the \"{1}\" command to see error details.",
    "AWS.gotoRunPanel": "Run panel",
    "AWS.title.createCredentialProfile": "Create a new AWS credential profile",
    "AWS.title.creatingCredentialProfile": "Saving new credential profile {0}",
    "AWS.title.selectCredentialProfile": "Select an AWS credential profile",
    "AWS.startup.toastIfAlpha": "AWS Toolkit PREVIEW. (To get the latest STABLE version, uninstall this version.)",
    "AWS.cdk.explorerTitle": "AWS CDK Explorer (Preview)",
    "Aws.cdk.explorerNode.noApps": "[No CDK Apps found in Workspaces]",
    "Aws.cdk.explorerNode.app.noConstructTree": "[Unable to load construct tree for this App. Run `cdk synth`]",
    "Aws.cdk.explorerNode.app.noStacks": "[No stacks in this App]",
    "AWS.channel.remoteInvoke": "AWS Remote Invocations",
    "AWS.channel.aws.toolkit": "AWS Toolkit",
    "AWS.channel.aws.toolkit.activation.error": "Error Activating AWS Toolkit: {0}",
    "AWS.codelens.failToInitialize": "Failed to activate template registry. {0} will not appear on SAM template files.",
    "AWS.codelens.failToInitializeCode": "Failed to activate Lambda handler {0}",
    "AWS.codelens.lambda.invoke": "Run Locally",
    "AWS.codelens.lambda.invoke.debug": "Debug Locally",
    "AWS.configuration.title": "AWS Configuration",
    "AWS.configuration.profileDescription": "The name of the credential profile to obtain credentials from.",
    "AWS.configuration.description.cdk.explorer.enabled": "Enable the AWS CDK Explorer",
    "AWS.configuration.description.logLevel": "The AWS Toolkit's log level (changes reflected on restart)",
    "AWS.configuration.description.onDefaultRegionMissing": "Action to take when a Profile's default region is hidden in the Explorer. Possible values:\n* `add` - shows region in the explorer\n* `ignore` - does nothing with the region\n* `prompt` - (default) asks the user what they would like to do.",
    "AWS.configuration.description.s3.maxItemsPerPage": "Controls how many S3 items are listed before showing a node to `Load More...`.\nThis corresponds to the `MaxKeys` requested in a single call to S3. [Learn More](https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html#AmazonS3-ListObjectsV2-response-MaxKeys)",
    "AWS.configuration.description.samcli.debug.attach.timeout": "Maximum time (in milliseconds) to wait for SAM output while starting a Local Lambda session",
    "AWS.configuration.description.samcli.location": "Location of SAM CLI. SAM CLI is used to create, build, package, and deploy Serverless Applications. [Learn More](https://aws.amazon.com/serverless/sam/)",
    "AWS.configuration.description.telemetry": "Enable AWS Toolkit to send usage data to AWS.",
    "AWS.stepFunctions.asl.format.enable.desc": "Enables the default formatter used with Amazon States Language files",
    "AWS.stepFunctions.asl.maxItemsComputed.desc": "The maximum number of outline symbols and folding regions computed (limited for performance reasons).",
    "AWS.stepFunctions.publish": "Publish to Step Functions",
    "AWS.stepFunctions.publishWizard.publishAction.title": "Publish to AWS Step Functions ({0})",
    "AWS.stepFunctions.publishWizard.publishAction.quickCreate.detail": "Create a state machine from the ASL definition using default settings",
    "AWS.stepFunctions.publishWizard.publishAction.quickCreate.label": "Quick Create",
    "AWS.stepFunctions.publishWizard.publishAction.quickUpdate.detail": "Update an existing state machine with the ASL definition",
    "AWS.stepFunctions.publishWizard.publishAction.quickUpdate.label": "Quick Update",
    "AWS.stepFunctions.publishWizard.stateMachineName.title": "Name your state machine",
    "AWS.stepFunctions.publishWizard.stateMachineName.validation.empty": "State machine name cannot be empty",
    "AWS.stepFunctions.publishWizard.iamRole.noRoles.label": "No roles could be found",
    "AWS.stepFunctions.publishWizard.iamRole.noRoles.detail": "Create an IAM role before proceeding. See documentation for details.",
    "AWS.stepFunctions.publishWizard.iamRole.title": "Select execution role ({0})",
    "AWS.stepFunctions.publishWizard.stateMachineNameToUpdate.noStateMachines.label": "No state machines could be found",
    "AWS.stepFunctions.publishWizard.stateMachineNameToUpdate.noStateMachines.detail": "Create a state machine before proceeding. See documentation for details.",
    "AWS.stepFunctions.publishWizard.stateMachineNameToUpdate.title": "Select state machine to update ({0})",
    "AWS.stepFunctions.render": "Render graph",
    "AWS.stepfunctions.template.helloWorld.description": "A basic example using a Pass state.",
    "AWS.stepfunctions.template.retryFailure.description": "An example of a Task state using a retry policy to handle Lambda failures.",
    "AWS.stepfunctions.template.waitState.description": "Delays the state machine from continuing for a specified time.",
    "AWS.stepfunctions.template.parallel.description": "Used to create parallel branches of execution in your state machine.",
    "AWS.stepfunctions.template.mapState.description": "Use a Map state to dynamically process data in an array.",
    "AWS.stepfunctions.template.catchFailure.description": "An example of a Task state using Catchers to handle Lambda failures.",
    "AWS.stepfunctions.template.choiceState.description": "Adds branching logic to a state machine.",
    "AWS.stepfunctions.template.helloWorld.label": "Hello world",
    "AWS.stepfunctions.template.retryFailure.label": "Retry failure",
    "AWS.stepfunctions.template.waitState.label": "Wait state",
    "AWS.stepfunctions.template.parallel.label": "Parallel",
    "AWS.stepfunctions.template.mapState.label": "Map state",
    "AWS.stepfunctions.template.catchFailure.label": "Catch failure",
    "AWS.stepfunctions.template.choiceState.label": "Choice state",
    "AWS.stepFunctions.graph.status.inSync": "Previewing ASL document. <a href=\"\" style=\"text-decoration:none;\">View</a>",
    "AWS.stepFunctions.graph.status.notInSync": "Errors detected. Cannot preview.",
    "AWS.stepFunctions.graph.status.syncing": "Rendering ASL graph...",
    "AWS.configuration.description.awssam.debug.api": "API Gateway configuration",
    "AWS.configuration.description.awssam.debug.api.clientCertId": "The API Gateway client certificate ID",
    "AWS.configuration.description.awssam.debug.api.headers": "Additional HTTP headers",
    "AWS.configuration.description.awssam.debug.api.httpMethod": "The HTTP message method that will be used",
    "AWS.configuration.description.awssam.debug.api.path": "The path to the api (must start with /)",
    "AWS.configuration.description.awssam.debug.api.queryString": "URL query string (e.g. key=foo&value=bar)",
    "AWS.configuration.description.awssam.debug.api.stageVariables": "key-value map of API Gateway stage variables",
    "AWS.configuration.description.awssam.debug.label": "AWS SAM: Debug Lambda Function Locally",
    "AWS.configuration.description.awssam.debug.invokeTarget": "Configures the application to launch",
    "AWS.configuration.description.awssam.debug.target": "The type of invocation to launch. Possible values:\n* `template` uses a CFN/SAM Template as an entrypoint\n* `code` invokes Lambda code directly.\n* `api` uses the CFN/SAM Template to emulate API Gateway",
    "AWS.configuration.description.awssam.debug.lambdaHandler": "Lambda Function handler to invoke.",
    "AWS.configuration.description.awssam.debug.projectRoot": "The root of the project, used to determine where in the file-system to locate the lambdaHandler.",
    "AWS.configuration.description.awssam.debug.templatePath": "Path to the CFN/SAM template.",
    "AWS.configuration.description.awssam.debug.logicalId": "Resource name of an AWS::Lambda::Function or AWS::Serverless::Function to invoke.",
    "AWS.configuration.description.awssam.debug.envvars": "Environment variables to pass to the function invocation (replaces template variables).",
    "AWS.configuration.description.awssam.debug.lambda": "Lambda specific details of the invocation",
    "AWS.configuration.description.awssam.debug.memoryMb": "The amount of memory (in Mb) the Lambda function has access to.",
    "AWS.configuration.description.awssam.debug.runtime": "The Lambda Function's runtime",
    "AWS.configuration.description.awssam.debug.debuggingPlatform": "The debugger to be used with the Image-based Lambda Function",
    "AWS.configuration.description.awssam.debug.timeout": "The amount of time (in seconds) that Lambda allows a function to run before stopping it.",
    "AWS.configuration.description.awssam.debug.aws": "AWS connection details",
    "AWS.configuration.description.awssam.debug.credentials": "The AWS credential type and ID to use during the invocation. Example: credential profile \"default\" would be entered as `profile:default`.",
    "AWS.configuration.description.awssam.debug.region": "AWS region to use during the invocation.",
    "AWS.configuration.description.awssam.debug.event": "Event payload to pass to the Lambda invocation.\n Must specify one of 'json' or 'path'.",
    "AWS.configuration.description.awssam.debug.event.json": "JSON definition to use as the event payload",
    "AWS.configuration.description.awssam.debug.event.path": "Path to a file to use as the event payload",
    "AWS.configuration.description.awssam.debug.sam": "SAM CLI specific configurations",
    "AWS.configuration.description.awssam.debug.buildArguments": "Additional arguments to pass to the `sam build` command.",
    "AWS.configuration.description.awssam.debug.containerBuild": "Whether to build inside a container (default: false).",
    "AWS.configuration.description.awssam.debug.dockerNetwork": "Specifies the name or id of an existing Docker network that Lambda Docker containers should connect to.",
    "AWS.configuration.description.awssam.debug.localArguments": "Additional arguments to pass to the `sam local` command.",
    "AWS.configuration.description.awssam.debug.skipNewImageCheck": "Specifies whether the command should skip pulling down the latest Docker image for Lambda runtime (default: false).",
    "AWS.configuration.description.awssam.debug.template": "Values to override in the template",
    "AWS.configuration.description.awssam.debug.templateParameters": "Key:value mappings for SAM template parameter overrides. More information can be found here: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stackinstances-override.html#stackinstances-override-cli",
    "AWS.configuration.description.awssam.debug.snippets.lambdaCode.label": "AWS SAM: Direct Lambda handler invoke",
    "AWS.configuration.description.awssam.debug.snippets.lambdaCode.description": "A new configuration for invoking an AWS Lambda directly via the SAM CLI.",
    "AWS.configuration.description.awssam.debug.snippets.lambdaTemplate.label": "AWS SAM: Template-based Lambda invoke",
    "AWS.configuration.description.awssam.debug.snippets.lambdaTemplate.description": "A new configuration for invoking an AWS Lambda in a CloudFormation template via the SAM CLI.",
    "AWS.configuration.description.awssam.debug.snippets.api.label": "AWS SAM: API Gateway lambda invoke",
    "AWS.configuration.description.awssam.debug.snippets.api.description": "A new configuration for invoking an AWS Lambda in a CloudFormation template, simulating API Gateway",
    "AWS.ecr.createRepository.prompt": "Enter a new repository name",
    "AWS.ecr.createRepository.placeHolder": "Repository Name",
    "AWS.ecr.createRepository.failure": "Failed to create repository {0}",
    "AWS.ecr.createRepository.success": "Created repository {0}",
    "AWS.ecr.deleteRepository.failure": "Failed to delete repository {0}",
    "AWS.ecr.deleteRepository.success": "Deleted repository {0}",
    "AWS.ecr.deleteTag.failure": "Failed to delete tag {0} from repository {1}",
    "AWS.ecr.deleteTag.prompt": "Are you sure you want to delete tag {0} from repository {1}?",
    "AWS.ecr.deleteTag.success": "Deleted tag {0} from repository {1}",
    "AWS.ecr.validateRepoName.error.invalidCharacters": "Repository name must only contain lowercase letters, numbers, hyphens, underscores, and forward slashes",
    "AWS.ecr.validateRepoName.error.invalidStart": "Repository name must start with a lowercase letter",
    "AWS.ecr.validateRepoName.error.invalidString": "Invalid repository name",
    "AWS.telemetry.notificationMessage": "The AWS Toolkit collects usage metrics by default. These metrics help drive toolkit improvements. This setting can be changed from the IDE settings.",
    "AWS.telemetry.notificationOk": "OK",
    "AWS.telemetry.notificationViewSettings": "View Settings",
    "AWS.command.apig.copyUrl": "Copy URL",
    "AWS.command.apig.invokeRemoteRestApi": "Invoke on AWS",
    "AWS.command.github": "View Source on GitHub",
    "AWS.command.help": "View Toolkit Documentation",
    "AWS.command.login": "Connect to AWS",
    "AWS.command.logout": "Sign out",
    "AWS.command.createIssueOnGitHub": "Create a New Issue on GitHub",
    "AWS.command.createNewSamApp": "Create new SAM Application",
    "AWS.command.credential.profile.create": "Create Credentials Profile",
    "AWS.command.showRegion": "Show region in the Explorer",
    "AWS.command.hideRegion": "Hide region from the Explorer",
    "AWS.command.deleteLambda.confirm": "Are you sure you want to delete lambda function '{0}'?",
    "AWS.command.deleteLambda.error": "There was an error deleting lambda function '{0}'",
    "AWS.command.addSamDebugConfiguration": "Add Debug Configuration",
    "AWS.command.addSamApiDebugConfiguration": "Add API Debug Configuration",
    "AWS.command.deploySamApplication": "Deploy SAM Application",
    "AWS.command.aboutToolkit": "About AWS Toolkit",
    "AWS.command.importLambda": "Import...",
    "AWS.command.uploadLambda": "Upload Lambda...",
    "AWS.command.invokeLambda": "Invoke on AWS",
    "AWS.command.configureLambda": "Configure",
    "AWS.command.refreshAwsExplorer": "Refresh AWS Explorer",
    "AWS.command.refreshCdkExplorer": "Refresh CDK Explorer",
    "AWS.command.cdk.help": "View CDK Documentation",
    "AWS.command.ecr.copyTagUri": "Copy Tag URI",
    "AWS.command.ecr.copyRepositoryUri": "Copy Repository URI",
    "AWS.command.ecr.createRepository": "Create Repository...",
    "AWS.command.ecr.deleteRepository": "Delete Repository...",
    "AWS.command.ecr.deleteTag": "Delete Tag...",
    "AWS.command.samcli.detect": "Detect SAM CLI",
    "AWS.command.deleteCloudFormation": "Delete CloudFormation Stack",
    "AWS.command.viewSchemaItem": "View Schema",
    "AWS.command.searchSchema": "Search Schemas",
    "AWS.command.executeStateMachine": "Start Execution...",
    "AWS.command.copyArn": "Copy ARN",
    "AWS.command.copyName": "Copy Name",
    "AWS.command.downloadStateMachineDefinition": "Download Definition...",
    "AWS.command.searchSchemaPerRegistry": "Search Schemas in Registry",
    "AWS.command.submitFeedback": "Submit Quick Feedback...",
    "AWS.command.downloadSchemaItemCode": "Download Code Bindings",
    "AWS.command.viewLogs": "View AWS Toolkit Logs",
    "AWS.command.quickStart": "View Quick Start",
    "AWS.command.quickStart.title": "AWS Toolkit - Quick Start",
    "AWS.command.quickStart.error": "There was an error retrieving the Quick Start page",
    "AWS.command.s3.downloadFileAs": "Download As...",
    "AWS.command.s3.copyPath": "Copy Path",
    "AWS.command.s3.createBucket": "Create Bucket...",
    "AWS.command.s3.createFolder": "Create Folder...",
    "AWS.command.s3.uploadFile": "Upload File...",
    "AWS.command.s3.uploadFileToParent": "Upload to Parent...",
    "AWS.command.stepFunctions.createStateMachineFromTemplate": "Create a new Step Functions state machine",
    "AWS.command.stepFunctions.publishStateMachine": "Publish state machine to Step Functions",
    "AWS.command.stepFunctions.previewStateMachine": "Render state machine graph",
    "AWS.command.copyLogStreamName": "Copy Log Stream Name",
    "AWS.command.saveCurrentLogStreamContent": "Save Current Log Content to File",
    "AWS.command.saveCurrentLogStreamContent.logfile": "Log File",
    "AWS.command.saveCurrentLogStreamContent.error": "Error saving current log to {0}: {1}",
    "AWS.command.viewLogStream": "View Log Stream...",
    "AWS.command.ssmDocument.createLocalDocument": "Create a new Systems Manager Document locally",
    "AWS.command.ssmDocument.deleteDocument": "Delete Document",
    "AWS.command.ssmDocument.updateDocumentVersion": "Set Default Version",
    "AWS.command.ssmDocument.openLocalDocument": "Download",
    "AWS.command.ssmDocument.openLocalDocumentJson": "Download as JSON",
    "AWS.command.ssmDocument.openLocalDocumentYaml": "Download as YAML",
    "AWS.command.ssmDocument.publishDocument": "Publish a Systems Manager Document",
    "AWS.stepFunctions.graph.titlePrefix": "Graph: {0}",
    "AWS.credentials.statusbar.no.credentials": "(not connected)",
    "AWS.credentials.statusbar.text": "AWS: {0}",
    "AWS.credentials.statusbar.tooltip": "The current credentials used by the AWS Toolkit.\n\nClick this status bar item to use different credentials.",
    "AWS.error.during.sam.local": "Failed to run SAM application locally: {0}",
    "AWS.command.showErrorDetails": "Show error details",
    "AWS.error.endpoint.load.failure": "The AWS Toolkit was unable to load endpoints data.",
    "AWS.error.impactedFunctionalityReset.vscode": "Toolkit functionality may be impacted until VS Code is restarted.",
    "AWS.error.impactedFunctionalityReset.cloud9": "Toolkit functionality may be impacted until the Cloud9 browser tab is refreshed.",
    "AWS.error.mfa.userCancelled": "User cancelled entering authentication code",
    "AWS.error.no.error.code": "No error code",
    "AWS.error.sam.local.package_json_not_found": "Unable to find package.json related to {0}",
    "AWS.error.check.logs": "Check the logs for more information by running the \"{0}\" command from the {1}.",
    "AWS.explorerNode.addRegion": "Add a region to AWS Explorer...",
    "AWS.explorerNode.addRegion.tooltip": "Click here to add a region to AWS Explorer.",
    "AWS.explorerNode.apigateway.error": "Error loading API Gateway REST APIs",
    "AWS.explorerNode.apigateway.noRestApis": "[No API Gateway REST APIs found]",
    "AWS.explorerNode.lambda.noFunctions": "[No Functions found]",
    "AWS.explorerNode.cloudFormation.noFunctions": "[Stack has no Lambda Functions]",
    "AWS.explorerNode.cloudformation.noStacks": "[No Stacks found]",
    "AWS.explorerNode.cloudFormation.error": "Error loading CloudFormation resources",
    "AWS.explorerNode.cloudWatchLogs.noGroups": "[No Log Groups found]",
    "AWS.explorerNode.cloudWatchLogs.error": "Error loading CloudWatch Logs resources",
    "AWS.explorerNode.container.noItems": "[no items]",
    "AWS.explorerNode.copiedToClipboard": "Copied {0} to clipboard",
    "AWS.explorerNode.error.retry": "Unable to get child nodes, click here to retry",
    "AWS.explorerNode.ecr.error": "Error loading ECR resources",
    "AWS.explorerNode.ecr.noRepositories": "[No repositories found]",
    "AWS.explorerNode.ecr.noTags": "[No tags found]",
    "AWS.explorerNode.lambda.error": "Error loading Lambda resources",
    "AWS.explorerNode.loadMoreChildren": "Load More...",
    "AWS.explorerNode.loadMoreChildren.error": "Error loading more resources",
    "AWS.explorerNode.noArnFound": "Could not find an ARN for selected AWS Explorer node",
    "AWS.explorerNode.s3.error": "Error loading S3 resources",
    "AWS.explorerNode.s3.noBuckets": "[No Buckets found]",
    "AWS.explorerNode.s3.noObjects": "[No Objects found]",
    "AWS.explorerNode.s3.fileTooltip": "{0}\nSize: {1}\nLast Modified: {2}",
    "AWS.explorerNode.schemas.error": "Error loading Schemas resources",
    "AWS.explorerNode.schemas.noRegistry": "[No Schema Registries]",
    "AWS.explorerNode.registry.error": "Error loading registry schema items",
    "AWS.explorerNode.registry.noSchemas": "[No Registry Schemas]",
    "AWS.explorerNode.registry.registryName.Not.Found": "Registry name not found",
    "AWS.explorerNode.connecting.label": "Connecting...",
    "AWS.explorerNode.connecting.tooltip": "Connecting...",
    "AWS.explorerNode.signIn": "Connect to AWS...",
    "AWS.explorerNode.signIn.tooltip": "Click here to select credentials for the AWS Toolkit",
    "AWS.lambda.explorerTitle": "Explorer",
    "AWS.lambda.debug.node.launchConfig.name": "Lambda: Debug {0} locally",
    "AWS.lambda.debug.node.attachConfig.name": "Lambda: Attach to {0} locally",
    "AWS.lambda.debug.node.invokeTask.label": "Lambda: Invoke {0} locally",
    "AWS.lambda.import.prompt": "Importing {0} into: {1}\nExisting directory will be overwritten: {0}\nProceed with import?",
    "AWS.lambda.import.prompt.placeholder": "Select the import location",
    "AWS.lambda.import.status": "Importing Lambda function {0} into {1}...",
    "AWS.lambda.import.import": "Import",
    "AWS.lambda.import.otherLocation": "Select a folder...",
    "AWS.lambda.import.importError": "Error importing Lambda function {0}: {1}",
    "AWS.lambda.import.fileNotFound": "Handler file {0} not found in imported function.",
    "AWS.lambda.import.noWorkspaceFolders": "Open a workspace before importing a Lambda function.",
    "AWS.lambda.upload.title": "Select Upload Type",
    "AWS.lambda.upload.buildDirectory.title": "Build directory?",
    "AWS.lambda.upload.prebuiltDir.detail": "AWS Toolkit will upload a ZIP of the selected directory.",
    "AWS.lambda.upload.unbuiltDir.detail": "AWS Toolkit will attempt to build the selected directory using the sam build command.",
    "AWS.lambda.upload.confirm": "This will immediately publish the selected code as a new version of Lambda: {0}.\n\nAWS Toolkit cannot guarantee that the built code will work.\n\nContinue?",
    "AWS.lambda.upload.handlerNotFound": "AWS Toolkit can't find a file corresponding to handler: {0} at filepath {1}.\n\nThis directory likely will not work with this function.\n\nProceed with upload anyway?",
    "AWS.lambda.upload.progress.generatingTemplate": "Setting up temporary build files...",
    "AWS.lambda.upload.progress.samBuilding": "Building project via sam build command...",
    "AWS.lambda.upload.progress.archivingDir": "Archiving files...",
    "AWS.lambda.upload.progress.uploadingArchive": "Uploading archive to Lambda...",
    "AWS.lambda.upload.done": "Successfully uploaded Lambda function {0}",
    "AWS.log.fileLocation": "Error logs for this session are permanently stored in {0}",
    "AWS.log.invalidLevel": "Invalid log level: {0}",
    "AWS.message.loading": "Loading...",
    "AWS.message.credentials.error": "There was an issue trying to use credentials profile {0}: {1}",
    "AWS.message.credentials.invalid": "Invalid Credentials {0}, see logs for more information.",
    "AWS.message.enterProfileName": "Enter the name of the credential profile to use",
    "AWS.message.info.submitFeedback.success": "Thanks for the feedback!",
    "AWS.message.info.cloudFormation.delete": "Deleted CloudFormation Stack {0}",
    "AWS.message.error.cloudFormation.delete": "An error occurred while deleting CloudFormation Stack {0}. Please check the stack events on the AWS Console",
    "AWS.message.error.cloudFormation.unsupported": "Unable to delete a CloudFormation Stack. No stack provided.",
    "AWS.message.error.stepfunctions.downloadStateMachineDefinition": "Unable to download state machine '{0}', check logs for details.",
    "AWS.message.error.stepfunctions.getTextDocumentForSelectedItem": "There was an error creating the State Machine Template, check log for details.",
    "AWS.message.error.schemas.viewSchema.could_not_open": "Could not fetch and display schema {0} contents",
    "AWS.message.error.schemas.downloadCodeBindings.failed_to_download": "Unable to download schema code",
    "AWS.message.error.schemas.downloadCodeBindings.failed_to_generate": "Unable to generate schema code",
    "AWS.message.error.schemas.downloadCodeBindings.cancelled:": "Download code bindings cancelled",
    "AWS.message.error.schemas.downloadCodeBindings.invalid_code_generation_status": "Invalid Code generation status {0}",
    "AWS.message.error.schemas.downloadCodeBindings.timout": "Failed to download code for schema {0} before timeout. Please try again later",
    "AWS.message.error.settings.telemetry.invalid_type": "The aws.telemetry value must be a boolean",
    "AWS.message.info.schemas.downloadCodeBindings.start": "Downloading code for schema {0}...",
    "AWS.message.info.schemas.downloadCodeBindings.generate": "{0}: Generating code (this may take a few seconds the first time)...",
    "AWS.message.info.schemas.downloadCodeBindings.extracting": "{0}: Extracting/copying code...",
    "AWS.message.info.schemas.downloadCodeBindings.colliding_override": "Downloaded code hierarchy has collisions in the destination directory. Would you like to override?",
    "AWS.message.info.schemas.downloadCodeBindings.colliding_files": "Following files already exist in the folder hierarchy :",
    "AWS.message.info.schemas.downloadCodeBindings.downloading": "{0}: Downloading code...",
    "AWS.message.info.schemas.downloadCodeBindings.finished": "Downloaded code for schema {0}!",
    "AWS.message.error.stepFunctions.executeStateMachine.failed_to_start": "There was an error starting execution for {0}, check logs for more information.",
    "AWS.message.info.stepFunctions.executeStateMachine.executing": "Executing {0} in {1}...",
    "AWS.message.info.stepFunctions.executeStateMachine.started": "Execution started",
    "AWS.message.error.stepFunctions.publishStateMachine.createFailure": "There was an error creating state machine '{0}', check logs for more information.",
    "AWS.message.error.stepFunctions.publishStateMachine.updateFailure": "There was an error updating state machine '{0}', check logs for more information.",
    "AWS.message.info.stepFunctions.publishStateMachine.createSuccess": "Successfully created state machine '{0}'",
    "AWS.message.info.stepFunctions.publishStateMachine.creating": "Creating state machine '{0}' in {1}...",
    "AWS.message.info.stepFunctions.publishStateMachine.updateSuccess": "Successfully updated state machine '{0}'",
    "AWS.message.info.stepFunctions.publishStateMachine.updating": "Updating state machine '{0}' in {1}...",
    "AWS.message.info.yaml.prompt": "Install YAML extension for additional AWS features.",
    "AWS.message.info.yaml.goToMarketplace": "Open Marketplace Page",
    "AWS.message.info.yaml.suppressPrompt": "Dismiss, and don't show again",
    "AWS.schemas.downloadCodeBindings.initWizard.language.prompt": "Select a code binding language",
    "AWS.schemas.downloadCodeBindings.initWizard.version.prompt": "Select a version for schema {0} :",
    "AWS.schemas.downloadCodeBindings.initWizard.location.prompt": "Select a workspace folder to download code binding",
    "AWS.schemas.downloadCodeBindings.initWizard.location.select.folder.detail": "Code bindings will be downloaded to selected folder.",
    "AWS.schemas.search.title": "EventBridge Schemas Search",
    "AWS.schemas.search.no_registries": "No Schema Registries",
    "AWS.schemas.search.header.text.singleRegistry": "Search \"{0}\" registry",
    "AWS.schemas.search.header.text.allRegistries": "Search across all registries",
    "AWS.schemas.search.input.placeholder": "Search for schema keyword...",
    "AWS.schemas.search.version.prefix": "Search matched version:",
    "AWS.schemas.search.no_results": "No schemas found",
    "AWS.schemas.search.searching": "Searching for schemas...",
    "AWS.schemas.search.loading": "Loading...",
    "AWS.schemas.search.select": "Select a schema",
    "AWS.message.error.schemas.search.failed_to_search_registry": "Unable to search registry {0}",
    "AWS.message.error.schemas.search.failed_to_load_resources": "Error loading Schemas resources",
    "AWS.message.selectRegion": "Select an AWS region",
    "AWS.message.selectProfile": "Select an AWS credential profile",
    "AWS.message.statusBar.loading.cloudFormation": "Loading CloudFormations...",
    "AWS.message.statusBar.loading.logGroups": "Loading Log Groups...",
    "AWS.message.statusBar.loading.lambda": "Loading Lambdas...",
    "AWS.message.statusBar.loading.registries": "Loading Registry Items...",
    "AWS.message.statusBar.loading.schemaItems": "Loading Schema Items...",
    "AWS.message.statusBar.searching.schemas": "Searching Schemas...",
    "AWS.message.prompt.defaultRegionHidden": "This profile's default region ({0}) is currently hidden. Would you like to show it in the Explorer?",
    "AWS.message.prompt.defaultRegionHidden.alwaysAdd": "Yes, and don't ask again",
    "AWS.message.prompt.defaultRegionHidden.alwaysIgnore": "No, and don't ask again",
    "AWS.message.prompt.defaultRegionHidden.suppressed": "You will no longer be asked what to do when the current profile's default region is hidden from the Explorer. This behavior can be changed by modifying the '{0}' setting.",
    "AWS.message.prompt.cloudFormation.delete": "Are you sure you want to delete {0}?",
    "AWS.message.prompt.credentials.create": "You do not appear to have any AWS Credentials defined. Would you like to set one up now?",
    "AWS.message.prompt.credentials.definition.help": "Would you like some information related to defining credentials?",
    "AWS.message.prompt.credentials.definition.tryAgain": "The credentials do not appear to be valid. Check the AWS Toolkit Logs for details. Would you like to try again?",
    "AWS.message.prompt.selectLocalLambda.placeholder": "Select a lambda function",
    "AWS.message.prompt.selectStateMachineTemplate.placeholder": "Select a starter template",
    "AWS.message.prompt.selectStateMachineTemplateFormat.placeholder": "Select template format",
    "AWS.message.prompt.quickStart.toastMessage": "You are now using AWS Toolkit version {0}",
    "AWS.message.prompt.region.hide.title": "Select a region to hide from the AWS Explorer",
    "AWS.message.prompt.region.show.title": "Select a region to show in the AWS Explorer",
    "AWS.message.prompt.copyButtonLabel": "Copy",
    "AWS.message.toolkitInfo": "OS:  {0} {1} {2}\n{3} Extension Host Version:  {4}\nAWS Toolkit Version:  {5}\n",
    "AWS.output.building.sam.application": "Building SAM application...",
    "AWS.output.sam.no.image.support": "Debugging Image-based Lambdas requires a minimum SAM CLI version of 1.13.0.",
    "AWS.output.sam.local.no.net.3.1.debug": "Debugging dotnetcore3.1 requires a minimum SAM CLI version of 1.4.0. Function will run locally without debug.",
    "AWS.output.building.sam.application.complete": "Build complete.",
    "AWS.output.sam.local.attaching": "Attaching debugger to SAM application...",
    "AWS.output.sam.local.attach.success": "Debugger attached",
    "AWS.output.sam.local.attach.failure": "Unable to attach Debugger. Check AWS Toolkit logs. If it took longer than expected to start, you can still attach.",
    "AWS.output.sam.local.attach.retry.limit.exceeded": "Retry limit reached while trying to attach the debugger.",
    "AWS.output.sam.local.error": "Error: {0}",
    "AWS.output.sam.local.startRun": "Preparing to run locally: {0}",
    "AWS.output.sam.local.startDebug": "Preparing to debug locally: {0}",
    "AWS.output.sam.local.waiting": "Waiting for SAM application to start...",
    "AWS.output.starting.sam.app.locally": "Starting SAM application locally",
    "AWS.prompt.mfa.enterCode.placeholder": "Enter Authentication Code Here",
    "AWS.prompt.mfa.enterCode.prompt": "Enter code for MFA device {0}",
    "AWS.prompt.mfa.enterCode.title": "MFA Challenge for {0}",
    "AWS.placeHolder.inputAccessKey": "Input the AWS Access Key to be stored in the profile",
    "AWS.placeHolder.inputSecretKey": "Input the AWS Secret Key",
    "AWS.placeHolder.newProfileName": "Choose a unique name for the new profile",
    "AWS.placeHolder.selectProfile": "Select a credential profile",
    "AWS.profile.recentlyUsed": "recently used",
    "AWS.running.command": "Running command: {0}",
    "AWS.apig.portUnavailable": "Port is unavailable: {0}",
    "AWS.apig.copyUrlNoStages": "Failed to copy URL because '{0}' has no stages",
    "AWS.apig.loadingStages": "Loading stage list for API: {0}",
    "AWS.apig.remoteInvoke.noApiResource": "Select an API Resource",
    "AWS.apig.remoteInvoke.noMethod": "Select a HTTP method",
    "AWS.apig.selectStage": "Select an API stage",
    "AWS.s3.createBucket.placeHolder": "Bucket Name",
    "AWS.s3.createBucket.prompt": "Enter a new bucket name",
    "AWS.s3.createBucket.error.general": "Failed to create bucket {0}",
    "AWS.s3.createBucket.success": "Created bucket {0}",
    "AWS.s3.createFolder.placeHolder": "Folder Name",
    "AWS.s3.createFolder.prompt": "Enter a new folder name",
    "AWS.s3.createFolder.error.emptyName": "Folder name must not be empty",
    "AWS.s3.createFolder.error.illegalCharacter": "Folder name must not contain '{0}'",
    "AWS.s3.createFolder.error.general": "Failed to create folder {0}",
    "AWS.s3.createFolder.success": "Created folder {0}",
    "AWS.s3.deleteBucket.error.general": "Failed to delete bucket {0}",
    "AWS.s3.deleteBucket.progressTitle": "Deleting {0}...",
    "AWS.s3.deleteBucket.prompt": "Enter {0} to confirm deletion",
    "AWS.s3.deleteFile.error.general": "Failed to delete file {0}",
    "AWS.s3.deleteFile.prompt": "Are you sure you want to delete file {0}?",
    "AWS.s3.deleteFile.success": "Deleted {0}",
    "AWS.s3.downloadFile.progressTitle": "Downloading {0}...",
    "AWS.s3.downloadFile.saveButton": "Download",
    "AWS.s3.downloadFile.error.general": "Failed to download file {0}",
    "AWS.s3.uploadFile.progressTitle": "Uploading {0}...",
    "AWS.s3.uploadFile.openButton": "Upload",
    "AWS.s3.uploadFile.error.general": "Failed to upload file {0}",
    "AWS.s3.validateBucketName.error.invalidCharacters": "Bucket name must only contain lowercase letters, numbers, hyphens, and periods",
    "AWS.s3.validateBucketName.error.invalidEnd": "Bucket name must end with a lowercase letter or number",
    "AWS.s3.validateBucketName.error.invalidLength": "Bucket name must be between 3 and 63 characters long",
    "AWS.s3.validateBucketName.error.invalidStart": "Bucket name must start with a lowercase letter or number",
    "AWS.s3.validateBucketName.error.misusedPeriods": "Periods in bucket name must be surrounded by a lowercase letter or number",
    "AWS.s3.validateBucketName.error.resemblesIpAddress": "Bucket name must not resemble an IP address",
    "AWS.sam.build.failure.diskSpace": "\"sam build\" failed. Check system disk space.",
    "AWS.sam.debugger.invalidRequest": "Debug Configuration has an unsupported request type. Supported types: {0}",
    "AWS.sam.debugger.invalidTarget": "Debug Configuration has an unsupported target type. Supported types: {0}",
    "AWS.sam.debugger.invalidDebuggingPlatform": "AWS SAM debug: unknown debugging platform: {0}",
    "AWS.sam.debugger.invalidRuntime": "AWS SAM debug: unknown runtime: {0}",
    "AWS.sam.debugger.noLaunchJson": "AWS SAM: To debug a Lambda locally, create a launch.json from the Run panel, then select a configuration.",
    "AWS.sam.debugger.noTemplates": "No SAM templates found in workspace",
    "AWS.sam.debugger.noWorkspace": "AWS SAM debug: choose a workspace, then try again",
    "AWS.sam.debugger.failedLaunch": "AWS SAM failed to launch. Try creating launch.json",
    "AWS.sam.debugger.missingTemplate": "Cannot find template file (must be workspace-relative, or absolute): {0}",
    "AWS.sam.debugger.missingResource": "Cannot find template resource \"{0}\" in template file: {1}",
    "AWS.sam.debugger.missingField": "Missing required field \"{0}\" in debug config",
    "AWS.sam.debugger.missingSlash": "Path must start with a '/'",
    "AWS.sam.debugger.resourceNotAFunction": "Template Resource {0} in Template file {1} needs to be of type {2} or {3}",
    "AWS.sam.debugger.unsupportedRuntime": "Runtime for Template Resource {0} in Template file {1} is either undefined or unsupported.",
    "AWS.sam.debugger.useExistingConfig": "AWS Toolkit detected an existing legacy configuration for this function. Create the debug config based on the legacy config?",
    "AWS.sam.debugger.useExistingConfig.migrate": "Create based on the legacy config",
    "AWS.sam.debugger.useExistingConfig.doNotMigrate": "Create new config only",
    "AWS.sam.debugger.extraEnvVars": "The following environment variables are not found in the targeted template and will not be overridden: {0}",
    "AWS.sam.debugger.missingRuntime": "Debug Configurations with an invoke target of \"{0}\" require a valid Lambda runtime value, expected one of [{1}]",
    "AWS.sam.debugger.missingPayloadFile": "Payload file not found: \"{0}\"",
    "AWS.sam.debugger.missingRuntimeForImage": "Run configurations for Image-based Lambdas require a valid Lambda runtime value, expected one of [{0}]",
    "AWS.sam.debugger.missingSamMetadata": "The SAM metadata section for Template Resource {0} in Template file {1} is not defined",
    "AWS.sam.local.invoke.python.server.not.available": "Unable to communicate with the Python Debug Adapter. The debugger might not successfully attach to your SAM Application.",
    "aws.cloudWatchLogs.viewLogStream.workflow.prompt": "Select a log stream",
    "aws.cloudWatchLogs.viewLogStream.workflow.noStreams": "[No Log Events found]",
    "aws.cloudWatchLogs.viewLogStream.errorRetrievingLogs": "Error retrieving logs for Log Stream {0} : {1}",
    "aws.cloudWatchLogs.codeLens.loadOlder": "Load older events...",
    "aws.cloudWatchLogs.codeLens.loadNewer": "Load newer events...",
    "aws.cloudWatchLogs.invalidEditor": "Not a Cloudwatch Log stream: {0}",
    "aws.cloudWatchLogs.limit.desc": "Maximum amount of log entries pulled per request from CloudWatch Logs (max 10000)",
    "AWS.samcli.detect.settings.updated": "Settings updated.",
    "AWS.samcli.detect.settings.not.updated": "No settings changes necessary.",
    "AWS.samcli.deploy.general.error": "An error occurred while deploying a SAM Application. {0}",
    "AWS.samcli.deploy.workflow.init": "Building SAM Application...",
    "AWS.samcli.deploy.workflow.packaging": "Packaging SAM Application to S3 Bucket: {0}",
    "AWS.samcli.deploy.workflow.packaging.noBuild": "Attempting to package source template directory directly after \"sam build\" failed",
    "AWS.samcli.deploy.workflow.stackName.initiated": "Deploying SAM Application to CloudFormation Stack: {0}",
    "AWS.samcli.deploy.workflow.start": "Starting SAM Application deployment...",
    "AWS.samcli.deploy.workflow.success": "Successfully deployed SAM Application to CloudFormation Stack: {0}",
    "AWS.samcli.deploy.workflow.success.general": "SAM Application deployment succeeded.",
    "AWS.samcli.deploy.workflow.error": "Failed to deploy SAM application.",
    "AWS.samcli.deploy.parameters.mandatoryPrompt.message": "The template {0} contains parameters without default values. In order to deploy, you must provide values for these parameters. Configure them now?",
    "AWS.samcli.deploy.parameters.mandatoryPrompt.responseConfigure": "Configure",
    "AWS.samcli.deploy.parameters.optionalPrompt.message": "The template {0} contains parameters. Would you like to override the default values for these parameters?",
    "AWS.samcli.deploy.region.prompt": "Which AWS Region would you like to deploy to?",
    "AWS.samcli.deploy.ecrRepo.prompt": "Select a ECR repo to deploy images to",
    "AWS.samcli.deploy.s3bucket.picker.loading": "Loading S3 buckets...",
    "AWS.samcli.deploy.s3bucket.picker.noBuckets": "No buckets found.",
    "AWS.samcli.deploy.s3bucket.picker.error": "There was an error loading S3 buckets.",
    "AWS.samcli.deploy.s3Bucket.prompt": "Select an AWS S3 Bucket to deploy code to",
    "AWS.samcli.deploy.stackName.prompt": "Enter the name to use for the deployed stack",
    "AWS.samcli.deploy.stackName.error.invalidCharacters": "A stack name may contain only alphanumeric characters (case sensitive) and hyphens",
    "AWS.samcli.deploy.stackName.error.firstCharacter": "A stack name must begin with an alphabetic character",
    "AWS.samcli.deploy.stackName.error.length": "A stack name must not be longer than 128 characters",
    "AWS.samcli.deploy.statusbar.message": "Deploying SAM Application to {0}...",
    "AWS.samcli.deploy.template.prompt": "Which SAM Template would you like to deploy to AWS?",
    "AWS.samcli.configured.location": "SAM CLI Location: {0}",
    "AWS.samcli.error.notFound": "Cannot find SAM CLI, which is required to create new Serverless Applications and debug them locally. If you have already installed the SAM CLI, update your User Settings by locating it.",
    "AWS.samcli.error.notFound.brief": "Failed to get SAM CLI location",
    "AWS.samcli.error.invalid_schema_support_version": "Installed SAM executable does not support templates that require Event Schema selection. Required minimum version {0}, but found {1}",
    "AWS.samcli.local.invoke.portUnavailable": "Port {0} is unavailable. Debugger may fail to attach.",
    "AWS.samcli.local.invoke.debugger.install": "Installing .NET Core Debugger to {0}...",
    "AWS.samcli.local.invoke.debugger.install.failed": "Error installing .NET Core Debugger: {0}",
    "AWS.samcli.error": "Error running command \"{0}\": {1}",
    "AWS.samcli.stopped": "Command stopped: \"{0}\"",
    "AWS.samcli.timeout": "Timeout while waiting for command: \"{0}\"",
    "AWS.samcli.notification.not.found": "Cannot find SAM CLI. It is required in order to work with Serverless Applications locally.",
    "AWS.samcli.notification.unexpected.validation.issue": "An unexpected issue occured while validating SAM CLI: {0}",
    "AWS.samcli.notification.version.invalid": "Your SAM CLI version {0} does not meet requirements ({1} ≤ version < {2}). {3}",
    "AWS.samcli.notification.version.valid": "Your SAM CLI version {0} is valid.",
    "AWS.samcli.recommend.update.toolkit": "Check the Marketplace for an updated AWS Toolkit.",
    "AWS.samcli.recommend.update.samcli": "Update your SAM CLI.",
    "AWS.samcli.userChoice.browse": "Locate SAM CLI...",
    "AWS.samcli.userChoice.visit.install.url": "Get SAM CLI",
    "AWS.samcli.userChoice.update.awstoolkit.url": "Visit Marketplace",
    "AWS.samcli.initWizard.general.error": "An error occurred while creating a new SAM Application. {0}",
    "AWS.wizard.location.prompt": "Select a workspace folder for your new project",
    "AWS.initWizard.location.select.folder": "Select a different folder...",
    "AWS.initWizard.location.select.folder.empty.workspace": "There are no workspace folders open. Select a folder...",
    "AWS.wizard.location.select.folder.detail": "The selected folder will be added to the workspace.",
    "AWS.samcli.initWizard.name.prompt": "Enter a name for your new application",
    "AWS.initWizard.name.browse.openLabel": "Open",
    "AWS.samcli.initWizard.name.error.empty": "Application name cannot be empty",
    "AWS.samcli.initWizard.name.error.pathSep": "The path separator ({0}) is not allowed in application names",
    "AWS.samcli.initWizard.schemas.aws_credentials_missing": "You need to be connected to AWS to select {0}.",
    "AWS.samcli.initWizard.runtime.prompt": "Select a SAM Application Runtime",
    "AWS.samcli.initWizard.template.prompt": "Select a SAM Application Template",
    "AWS.samcli.initWizard.template.helloWorld.name": "AWS SAM Hello World",
    "AWS.samcli.initWizard.template.eventBridge_helloWorld.name": "AWS SAM EventBridge Hello World",
    "AWS.samcli.initWizard.template.eventBridge_starterApp.name": "AWS SAM EventBridge App from Scratch",
    "AWS.samcli.initWizard.template.helloWorld.description": "A basic SAM app",
    "AWS.samcli.initWizard.template.eventBridge_helloWorld.description": "Invokes a Lambda for every EC2 instance state change in your account",
    "AWS.samcli.initWizard.template.eventBridge_starterApp.description": "Invokes a Lambda based on a dynamic event trigger for an EventBridge Schema of your choice",
    "AWS.samcli.initWizard.template.stepFunctionsSampleApp.description": "Orchestrates multiple Lambdas to execute a stock trading workflow on an hourly schedule",
    "AWS.samcli.initWizard.schemas.region.prompt": "Select an EventBridge Schemas Region",
    "AWS.samcli.initWizard.schemas.registry.prompt": "Select a Registry",
    "AWS.samcli.initWizard.schemas.registry.failed_to_load_resources": "Error loading registries.",
    "AWS.samcli.initWizard.schemas.schema.prompt": "Select a Schema",
    "AWS.samcli.initWizard.schemas.notFound": "No schemas found in registry {0}.",
    "AWS.samcli.initWizard.schemas.failed_to_load_resources": "Error loading schemas in registry {0}.",
    "AWS.samcli.initWizard.source.error.notFound": "Project created successfully, but main source code file not found: {0}",
    "AWS.samcli.initWizard.source.error.notInWorkspace": "Could not open file '{0}'. If this file exists on disk, try adding it to your workspace.",
    "AWS.samcli.initWizard.completionMessage": "Created SAM application \"{0}\" and added launch configurations to launch.json: {1}",
    "AWS.samcli.initWizard.launchConfigFail": "Created SAM application \"{0}\" but failed to generate launch configurations. You can generate these via {1} in the template or handler file.",
    "AWS.samcli.build.failedBuild": "\"sam build\" failed: {0}",
    "AWS.sam.localApi.request": "Sending request to local API: {0}",
    "AWS.pickDebugConfig.prompt": "Create a Debug Configuration from a CloudFormation Template",
    "AWS.pickDebugConfig.noTemplate": "No Template",
    "AWS.pickDebugConfig.noTemplate.detail": "Launch config will execute function in isolation, without referencing a CloudFormation template",
    "AWS.stepfunctions.visualisation.errors.rendering": "There was an error rendering State Machine Graph, check logs for details.",
    "AWS.stepfunctions.visualisation.errors.rename": "State machine visualization closed due to file renaming or closure.",
    "AWS.submitFeedback.title": "Submit Quick Feedback",
    "AWS.wizard.selectedPreviously": "Selected Previously",
    "AWS.generic.response.dismiss": "Dismiss",
    "AWS.generic.response.no": "No",
    "AWS.generic.response.yes": "Yes",
    "AWS.generic.notImplemented": "Not implemented",
    "AWS.generic.refresh": "Refresh",
    "AWS.generic.open": "Open {0}",
    "AWS.generic.message.viewLogs": "View Logs...",
    "AWS.generic.cancel": "Cancel",
    "AWS.generic.delete": "Delete",
    "AWS.generic.promptDelete": "Delete...",
    "AWS.generic.filetype.directory": "Directory",
    "AWS.generic.filetype.zipfile": "ZIP Archive",
    "AWS.generic.message.getHelp": "Get Help...",
    "AWS.generic.name": "name",
    "AWS.template.error.showErrorDetails.title": "Error details for",
    "AWS.template.error.showErrorDetails.errorCode": "Error code",
    "AWS.template.error.showErrorDetails.errorMessage": "Error message",
    "AWS.ssmDocument.ssm.maxItemsComputed.desc": "Controls the maximum number of problems produced by the SSM Document language server.",
    "AWS.picker.dynamic.noItemsFound.detail": "Click here to go back",
    "AWS.picker.dynamic.noItemsFound.label": "[No items found]",
    "AWS.picker.dynamic.errorNode.label": "There was an error retrieving more items."
}
