{
    "AWS.title": "AWS",
    "AWS.title.createCredentialProfile": "Create a new AWS credential profile",
    "AWS.title.creatingCredentialProfile": "Saving new credential profile {0}",
    "AWS.title.selectCredentialProfile": "Select an AWS credential profile",
    "AWS.cdk.explorerTitle": "AWS CDK Explorer (Preview)",
    "Aws.cdk.explorerNode.noApps": "[No CDK Apps found in Workspaces]",
    "Aws.cdk.explorerNode.app.noConstructTree": "[Unable to load construct tree for this App. Run `cdk synth`]",
    "Aws.cdk.explorerNode.app.noStacks": "[No stacks in this App]",
    "AWS.channel.aws.toolkit": "AWS Toolkit",
    "AWS.channel.aws.toolkit.activation.error": "Error Activating AWS Toolkit",
    "AWS.codelens.lambda.invoke": "Run Locally",
    "AWS.codelens.lambda.invoke.debug": "Debug Locally",
    "AWS.configuration.title": "AWS Configuration",
    "AWS.configuration.profileDescription": "The name of the credential profile to obtain credentials from.",
    "AWS.configuration.description.cdk.explorer.enabled": "Enable the AWS CDK Explorer",
    "AWS.configuration.description.logLevel": "The AWS Toolkit's log level (changes reflected on restart)",
    "AWS.configuration.description.onDefaultRegionMissing": "Action to take when a Profile's default region is hidden in the Explorer. Possible values:\n* `add` - shows region in the explorer\n* `ignore` - does nothing with the region\n* `prompt` - (default) asks the user what they would like to do.",
    "AWS.configuration.sam.template.depth": "The maximum subfolder depth within a workspace that the Toolkit will search for SAM Template files",
    "AWS.configuration.description.samcli.debug.attach.retry.maximum": "If the Toolkit is unable to attach a debugger, this is the number of times to retry before giving up.",
    "AWS.configuration.description.samcli.debug.attach.timeout": "Maximum amount of time to wait for debugger to connect to a SAM Local debug run (in milliseconds)",
    "AWS.configuration.description.samcli.location": "Location of SAM CLI. SAM CLI is used to create, build, package, and deploy Serverless Applications. [Learn More](https://aws.amazon.com/serverless/sam/)",
    "AWS.configuration.description.telemetry": "Enable the AWS Toolkit to send usage data to AWS. `\"Use IDE settings\"` respects the value specified in \"`telemetry.enableTelemetry`\"",
    "AWS.stepFunctions.asl.format.enable.desc": "Enables the default formatter used with Amazon States Language files",
    "AWS.stepFunctions.asl.maxItemsComputed.desc": "The maximum number of outline symbols and folding regions computed (limited for performance reasons).",
    "AWS.stepFunctions.publish": "Publish to Step Functions",
    "AWS.stepFunctions.publishWizard.publishAction.title": "Publish to AWS Step Functions ({0})",
    "AWS.stepFunctions.publishWizard.publishAction.quickCreate.detail": "Create a state machine from the ASL definition using default settings",
    "AWS.stepFunctions.publishWizard.publishAction.quickCreate.label": "Quick Create",
    "AWS.stepFunctions.publishWizard.publishAction.quickUpdate.detail": "Update an existing state machine with the ASL definition",
    "AWS.stepFunctions.publishWizard.publishAction.quickUpdate.label": "Quick Update",
    "AWS.stepFunctions.publishWizard.stateMachineName.title": "Name your state machine",
    "AWS.stepFunctions.publishWizard.stateMachineName.validation.empty": "State machine name cannot be empty",
    "AWS.stepFunctions.publishWizard.iamRole.noRoles.label": "No roles could be found",
    "AWS.stepFunctions.publishWizard.iamRole.noRoles.detail": "Create an IAM role before proceeding. See documentation for details.",
    "AWS.stepFunctions.publishWizard.iamRole.title": "Select execution role ({0})",
    "AWS.stepFunctions.publishWizard.stateMachineNameToUpdate.noStateMachines.label": "No state machines could be found",
    "AWS.stepFunctions.publishWizard.stateMachineNameToUpdate.noStateMachines.detail": "Create a state machine before proceeding. See documentation for details.",
    "AWS.stepFunctions.publishWizard.stateMachineNameToUpdate.title": "Select state machine to update ({0})",
    "AWS.stepFunctions.render": "Render graph",
    "AWS.stepfunctions.template.helloWorld.description": "A basic example using a Pass state.",
    "AWS.stepfunctions.template.retryFailure.description": "An example of a Task state using a retry policy to handle Lambda failures.",
    "AWS.stepfunctions.template.waitState.description": "Delays the state machine from continuing for a specified time.",
    "AWS.stepfunctions.template.parallel.description": "Used to create parallel branches of execution in your state machine.",
    "AWS.stepfunctions.template.mapState.description": "Use a Map state to dynamically process data in an array.",
    "AWS.stepfunctions.template.catchFailure.description": "An example of a Task state using Catchers to handle Lambda failures.",
    "AWS.stepfunctions.template.choiceState.description": "Adds branching logic to a state machine.",
    "AWS.stepfunctions.template.helloWorld.label": "Hello world",
    "AWS.stepfunctions.template.retryFailure.label": "Retry failure",
    "AWS.stepfunctions.template.waitState.label": "Wait state",
    "AWS.stepfunctions.template.parallel.label": "Parallel",
    "AWS.stepfunctions.template.mapState.label": "Map state",
    "AWS.stepfunctions.template.catchFailure.label": "Catch failure",
    "AWS.stepfunctions.template.choiceState.label": "Choice state",
    "AWS.stepFunctions.graph.status.inSync": "Previewing ASL document. <a href=\"\" style=\"text-decoration:none;\">View</a>",
    "AWS.stepFunctions.graph.status.notInSync": "Errors detected. Cannot preview.",
    "AWS.stepFunctions.graph.status.syncing": "Rendering ASL graph...",
    "AWS.configuration.description.awssam.debug.invokeTarget": "Configures the application to launch",
    "AWS.configuration.description.awssam.debug.target": "The type of invocation to launch. Possible values:\n* `template` uses a SAM Template as an entrypoint\n* `code` invokes Lambda code directly.",
    "AWS.configuration.description.awssam.debug.lambdaHandler": "Lambda Function handler to invoke.",
    "AWS.configuration.description.awssam.debug.projectRoot": "The root of the project, used to determine where in the file-system to locate the lambdaHandler.",
    "AWS.configuration.description.awssam.debug.samTemplatePath": "The path to the SAM Template.",
    "AWS.configuration.description.awssam.debug.samTemplateResource": "The LogicalID of the AWS::Lambda::Function or AWS::Serverless::Function to invoke.",
    "AWS.configuration.description.awssam.debug.envvars": "Environment variables to pass to the function invocation (replaces template variables).",
    "AWS.configuration.description.awssam.debug.lambda": "Lambda specific details of the invocation",
    "AWS.configuration.description.awssam.debug.memoryMb": "The amount of memory (in Mb) the Lambda function has access to.",
    "AWS.configuration.description.awssam.debug.runtime": "The Lambda Function's runtime",
    "AWS.configuration.description.awssam.debug.timeout": "The amount of time (in seconds) that Lambda allows a function to run before stopping it.",
    "AWS.configuration.description.awssam.debug.aws": "AWS connection details",
    "AWS.configuration.description.awssam.debug.credentials": "The AWS credential id to use during the invocation.",
    "AWS.configuration.description.awssam.debug.region": "The AWS region to use during the invocation.",
    "AWS.configuration.description.awssam.debug.event": "The payload to pass to the lambda invocation.\n Must specify one of 'json' or 'path'.",
    "AWS.configuration.description.awssam.debug.event.json": "A JSON document to use as the event payload",
    "AWS.configuration.description.awssam.debug.event.path": "The path to a file to use as the event payload",
    "AWS.configuration.description.awssam.debug.sam": "SAM CLI specific configurations",
    "AWS.configuration.description.awssam.debug.buildArguments": "Additional arguments to pass to the `sam build` command.",
    "AWS.configuration.description.awssam.debug.containerBuild": "Whether to build inside a container (default: false).",
    "AWS.configuration.description.awssam.debug.dockerNetwork": "Specifies the name or id of an existing Docker network that Lambda Docker containers should connect to.",
    "AWS.configuration.description.awssam.debug.localArguments": "Additional arguments to pass to the `sam local` command.",
    "AWS.configuration.description.awssam.debug.skipNewImageCheck": "Specifies whether the command should skip pulling down the latest Docker image for Lambda runtime (default: false).",
    "AWS.telemetry.notificationMessage": "Please help improve the AWS Toolkit by enabling it to send usage data to AWS. You can always change your mind later by going to the \"AWS Configuration\" section in your user settings.",
    "AWS.telemetry.notificationYes": "Enable",
    "AWS.telemetry.notificationNo": "Disable",
    "AWS.command.github": "View Source on GitHub",
    "AWS.command.help": "View Documentation",
    "AWS.command.login": "Connect to AWS",
    "AWS.command.logout": "Sign out",
    "AWS.command.createIssueOnGitHub": "Create a New Issue on GitHub",
    "AWS.command.createNewSamApp": "Create new SAM Application",
    "AWS.command.credential.profile.create": "Create Credentials Profile",
    "AWS.command.showRegion": "Show region in the Explorer",
    "AWS.command.hideRegion": "Hide region from the Explorer",
    "AWS.command.deleteLambda": "Delete",
    "AWS.command.deleteLambda.confirm": "Are you sure you want to delete lambda function '{0}'?",
    "AWS.command.deleteLambda.error": "There was an error deleting lambda function '{0}'",
    "AWS.command.deploySamApplication": "Deploy SAM Application",
    "AWS.command.aboutToolkit": "About AWS Toolkit",
    "AWS.command.invokeLambda": "Invoke on AWS",
    "AWS.command.configureLambda": "Configure",
    "AWS.command.refreshAwsExplorer": "Refresh AWS Explorer",
    "AWS.command.refreshCdkExplorer": "Refresh CDK Explorer",
    "AWS.command.cdk.provideFeedback": "Provide Feedback",
    "AWS.command.cdk.help": "View Documentation",
    "AWS.command.samcli.detect": "Detect SAM CLI",
    "AWS.command.deleteCloudFormation": "Delete CloudFormation Stack",
    "AWS.command.viewSchemaItem": "View Schema",
    "AWS.command.searchSchema": "Search Schemas",
    "AWS.command.executeStateMachine": "Start Execution...",
    "AWS.command.downloadStateMachineDefinition": "Download Definition...",
    "AWS.command.searchSchemaPerRegistry": "Search Schemas in Registry",
    "AWS.command.submitFeedback": "Submit Quick Feedback...",
    "AWS.command.downloadSchemaItemCode": "Download Code Bindings",
    "AWS.command.viewLogs": "View AWS Toolkit Logs",
    "AWS.command.quickStart": "View Quick Start",
    "AWS.command.quickStart.title": "AWS Toolkit - Quick Start",
    "AWS.command.quickStart.error": "There was an error retrieving the Quick Start page",
    "AWS.command.stepFunctions.createStateMachineFromTemplate": "Create a new Step Functions state machine",
    "AWS.command.stepFunctions.publishStateMachine": "Publish state machine to Step Functions",
    "AWS.command.stepFunctions.previewStateMachine": "Render state machine graph",
    "AWS.stepFunctions.graph.titlePrefix": "Graph: {0}",
    "AWS.credentials.statusbar.no.credentials": "(not connected)",
    "AWS.credentials.statusbar.text": "AWS Credentials: {0}",
    "AWS.credentials.statusbar.tooltip": "The current credentials used by the AWS Toolkit.\n\nClick this status bar item to use different credentials.",
    "AWS.error.during.sam.local": "An error occurred trying to run SAM Application locally: {0}",
    "AWS.command.showErrorDetails": "Show error details",
    "AWS.error.endpoint.load.failure": "The AWS Toolkit was unable to load endpoints data. Toolkit functionality may be impacted until VS Code is restarted.",
    "AWS.error.mfa.userCancelled": "User cancelled entering authentication code",
    "AWS.error.no.error.code": "No error code",
    "AWS.error.sam.local.package_json_not_found": "Unable to find package.json related to {0}",
    "AWS.error.check.logs": "Check the logs for more information by running the \"{0}\" command from the Command Palette.",
    "AWS.explorerNode.addRegion": "Add a region to AWS Explorer...",
    "AWS.explorerNode.addRegion.tooltip": "Click here to add a region to AWS Explorer.",
    "AWS.explorerNode.lambda.noFunctions": "[No Functions found]",
    "AWS.explorerNode.cloudFormation.noFunctions": "[Stack has no Lambda Functions]",
    "AWS.explorerNode.cloudformation.noStacks": "[No Stacks found]",
    "AWS.explorerNode.cloudFormation.error": "Error loading CloudFormation resources",
    "AWS.explorerNode.container.noItems": "[no items]",
    "AWS.explorerNode.error.retry": "Unable to get child nodes, click here to retry",
    "AWS.explorerNode.lambda.error": "Error loading Lambda resources",
    "AWS.explorerNode.schemas.error": "Error loading Schemas resources",
    "AWS.explorerNode.schemas.noRegistry": "[No Schema Registries]",
    "AWS.explorerNode.registry.error": "Error loading registry schema items",
    "AWS.explorerNode.registry.noSchemas": "[No Registry Schemas]",
    "AWS.explorerNode.registry.registryName.Not.Found": "Registry name not found",
    "AWS.explorerNode.connecting.label": "Connecting...",
    "AWS.explorerNode.connecting.tooltip": "Connecting...",
    "AWS.explorerNode.signIn": "Connect to AWS...",
    "AWS.explorerNode.signIn.tooltip": "Click here to select credentials for the AWS Toolkit",
    "AWS.lambda.explorerTitle": "Explorer",
    "AWS.lambda.configure.error.fieldtype": "Your templates.json file has an issue. {0} was detected as {1} instead of one of the following: [{2}]. Please change or remove this field, and try again.",
    "AWS.lambda.debug.node.launchConfig.name": "Lambda: Debug {0} locally",
    "AWS.lambda.debug.node.attachConfig.name": "Lambda: Attach to {0} locally",
    "AWS.lambda.debug.node.invokeTask.label": "Lambda: Invoke {0} locally",
    "AWS.log.fileLocation": "Error logs for this session are permanently stored in {0}",
    "AWS.log.invalidLevel": "Invalid log level: {0}",
    "AWS.message.loading": "Loading...",
    "AWS.message.credentials.error": "There was an issue trying to use credentials profile {0}: {1}",
    "AWS.message.credentials.invalid": "Invalid Credentials {0}, see logs for more information.",
    "AWS.message.credentials.invalid.help": "Get Help...",
    "AWS.message.credentials.invalid.logs": "View Logs...",
    "AWS.message.enterProfileName": "Enter the name of the credential profile to use",
    "AWS.message.info.submitFeedback.success": "Thanks for the feedback!",
    "AWS.message.info.cloudFormation.delete": "Deleted CloudFormation Stack {0}",
    "AWS.message.error.cloudFormation.delete": "An error occurred while deleting CloudFormation Stack {0}. Please check the stack events on the AWS Console",
    "AWS.message.error.cloudFormation.unsupported": "Unable to delete a CloudFormation Stack. No stack provided.",
    "AWS.message.error.stepfunctions.downloadStateMachineDefinition": "Unable to download state machine '{0}', check logs for details.",
    "AWS.message.error.stepfunctions.getTextDocumentForSelectedItem": "There was an error creating the State Machine Template, check log for details.",
    "AWS.message.error.schemas.viewSchema.could_not_open": "Could not fetch and display schema {0} contents",
    "AWS.message.error.schemas.downloadCodeBindings.failed_to_download": "Unable to download schema code",
    "AWS.message.error.schemas.downloadCodeBindings.failed_to_generate": "Unable to generate schema code",
    "AWS.message.error.schemas.downloadCodeBindings.failed_to_extract_collision": "Unable to place schema code in workspace because there is already a file {0} in the folder hierarchy",
    "AWS.message.error.schemas.downloadCodeBindings.invalid_code_generation_status": "Invalid Code generation status {0}",
    "AWS.message.error.schemas.downloadCodeBindings.timout": "Failed to download code for schema {0} before timeout. Please try again later",
    "AWS.message.info.schemas.downloadCodeBindings.start": "Downloading code for schema {0}...",
    "AWS.message.info.schemas.downloadCodeBindings.generate": "{0}: Generating code (this may take a few seconds the first time)...",
    "AWS.message.info.schemas.downloadCodeBindings.extracting": "{0}: Extracting/copying code...",
    "AWS.message.info.schemas.downloadCodeBindings.downloading": "{0}: Downloading code...",
    "AWS.message.info.schemas.downloadCodeBindings.finished": "Downloaded code for schema {0}!",
    "AWS.message.error.stepFunctions.executeStateMachine.failed_to_start": "There was an error starting execution for {0}, check logs for more information.",
    "AWS.message.info.stepFunctions.executeStateMachine.executing": "Executing {0} in {1}...",
    "AWS.message.info.stepFunctions.executeStateMachine.started": "Execution started",
    "AWS.message.error.stepFunctions.publishStateMachine.createFailure": "There was an error creating state machine '{0}', check logs for more information.",
    "AWS.message.error.stepFunctions.publishStateMachine.updateFailure": "There was an error updating state machine '{0}', check logs for more information.",
    "AWS.message.info.stepFunctions.publishStateMachine.createSuccess": "Successfully created state machine '{0}'",
    "AWS.message.info.stepFunctions.publishStateMachine.creating": "Creating state machine '{0}' in {1}...",
    "AWS.message.info.stepFunctions.publishStateMachine.updateSuccess": "Successfully updated state machine '{0}'",
    "AWS.message.info.stepFunctions.publishStateMachine.updating": "Updating state machine '{0}' in {1}...",
    "AWS.schemas.downloadCodeBindings.initWizard.language.prompt": "Select a code binding language",
    "AWS.schemas.downloadCodeBindings.initWizard.version.prompt": "Select a version for schema {0} :",
    "AWS.schemas.downloadCodeBindings.initWizard.location.prompt": "Select a workspace folder to download code binding",
    "AWS.schemas.downloadCodeBindings.initWizard.location.select.folder.detail": "Code bindings will be downloaded to selected folder.",
    "AWS.schemas.search.title": "EventBridge Schemas Search",
    "AWS.schemas.search.no_registries": "No Schema Registries",
    "AWS.schemas.search.header.text.singleRegistry": "Search \"{0}\" registry",
    "AWS.schemas.search.header.text.allRegistries": "Search across all registries",
    "AWS.schemas.search.input.placeholder": "Search for schema keyword...",
    "AWS.schemas.search.version.prefix": "Search matched version:",
    "AWS.schemas.search.no_results": "No schemas found",
    "AWS.schemas.search.searching": "Searching for schemas...",
    "AWS.schemas.search.loading": "Loading...",
    "AWS.schemas.search.select": "Select a schema",
    "AWS.message.error.schemas.search.failed_to_search_registry": "Unable to search registry {0}",
    "AWS.message.error.schemas.search.failed_to_load_resources": "Error loading Schemas resources",
    "AWS.message.selectRegion": "Select an AWS region",
    "AWS.message.selectProfile": "Select an AWS credential profile",
    "AWS.message.statusBar.loading.cloudFormation": "Loading CloudFormations...",
    "AWS.message.statusBar.loading.lambda": "Loading Lambdas...",
    "AWS.message.statusBar.loading.registries": "Loading Registry Items...",
    "AWS.message.statusBar.loading.schemaItems": "Loading Schema Items...",
    "AWS.message.statusBar.searching.schemas": "Searching Schemas...",
    "AWS.message.prompt.defaultRegionHidden": "This profile's default region ({0}) is currently hidden. Would you like to show it in the Explorer?",
    "AWS.message.prompt.defaultRegionHidden.add": "Yes",
    "AWS.message.prompt.defaultRegionHidden.alwaysAdd": "Yes, and don't ask again",
    "AWS.message.prompt.defaultRegionHidden.ignore": "No",
    "AWS.message.prompt.defaultRegionHidden.alwaysIgnore": "No, and don't ask again",
    "AWS.message.prompt.defaultRegionHidden.suppressed": "You will no longer be asked what to do when the current profile's default region is hidden from the Explorer. This behavior can be changed by modifying the '{0}' setting.",
    "AWS.message.prompt.cloudFormation.delete": "Are you sure you want to delete {0}?",
    "AWS.message.prompt.credentials.create": "You do not appear to have any AWS Credentials defined. Would you like to set one up now?",
    "AWS.message.prompt.credentials.definition.help": "Would you like some information related to defining credentials?",
    "AWS.message.prompt.credentials.definition.tryAgain": "The credentials do not appear to be valid. Check the AWS Toolkit Logs for details. Would you like to try again?",
    "AWS.message.prompt.selectLocalLambda.placeholder": "Select a lambda function",
    "AWS.message.prompt.quickStart.toastMessage": "You are now using AWS Toolkit version {0}",
    "AWS.message.prompt.region.hide.title": "Select a region to hide from the AWS Explorer",
    "AWS.message.prompt.region.show.title": "Select a region to show in the AWS Explorer",
    "AWS.message.prompt.copyButtonLabel": "Copy",
    "AWS.message.toolkitInfo": "OS:  {0} {1} {2}\nVisual Studio Code Version:  {3}\nAWS Toolkit Version:  {4}\n",
    "AWS.output.building.sam.application": "Building SAM Application...",
    "AWS.output.building.sam.application.complete": "Build complete.",
    "AWS.output.sam.local.attaching": "Attaching debugger to SAM Application...",
    "AWS.output.sam.local.attach.success": "Debugger attached",
    "AWS.output.sam.local.attach.failure": "Unable to attach Debugger. Check the Terminal tab for output. If it took longer than expected to successfully start, you may still attach to it.",
    "AWS.output.sam.local.attach.retry.limit.exceeded": "Retry limit reached while trying to attach the debugger.",
    "AWS.output.sam.local.error": "Error: {0}",
    "AWS.output.sam.local.start": "Preparing to run {0} locally...",
    "AWS.output.sam.local.waiting": "Waiting for SAM Application to start before attaching debugger...",
    "AWS.output.starting.sam.app.locally": "Starting the SAM Application locally (see Terminal for output)",
    "AWS.prompt.mfa.enterCode.placeholder": "Enter Authentication Code Here",
    "AWS.prompt.mfa.enterCode.prompt": "Enter code for MFA device {0}",
    "AWS.prompt.mfa.enterCode.title": "MFA Challenge for {0}",
    "AWS.placeHolder.inputAccessKey": "Input the AWS Access Key to be stored in the profile",
    "AWS.placeHolder.inputSecretKey": "Input the AWS Secret Key",
    "AWS.placeHolder.newProfileName": "Choose a unique name for the new profile",
    "AWS.placeHolder.selectProfile": "Select a credential profile",
    "AWS.profile.recentlyUsed": "recently used",
    "AWS.running.command": "Running command: {0}",
    "AWS.sam.debugger.invalidRequest": "Debug Configuration has an unsupported request type. Supported types: {0}",
    "AWS.sam.debugger.invalidTarget": "Debug Configuration has an unsupported target type. Supported types: {0}",
    "AWS.sam.debugger.missingTemplate": "Unable to find the Template file {0}",
    "AWS.sam.debugger.missingResource": "Unable to find the Template Resource {0} in Template file {1}",
    "AWS.sam.debugger.resourceNotAFunction": "Template Resource {0} in Template file {1} needs to be of type {2}",
    "AWS.sam.debugger.unsupportedRuntime": "Runtime for Template Resource {0} in Template file {1} is either undefined or unsupported.",
    "AWS.sam.debugger.extraEnvVars": "The following environment variables are not found in the targeted template and will not be overridden: {0}",
    "AWS.sam.debugger.missingRuntime": "Debug Configurations with an invoke target of \"{0}\" require a valid Lambda runtime value",
    "AWS.sam.local.invoke.python.server.not.available": "Unable to communicate with the Python Debug Adapter. The debugger might not successfully attach to your SAM Application.",
    "AWS.samcli.detect.settings.updated": "Settings updated.",
    "AWS.samcli.detect.settings.not.updated": "No settings changes necessary.",
    "AWS.samcli.deploy.general.error": "An error occurred while deploying a SAM Application. {0}",
    "AWS.samcli.deploy.workflow.init": "Building SAM Application...",
    "AWS.samcli.deploy.workflow.packaging": "Packaging SAM Application to S3 Bucket: {0}",
    "AWS.samcli.deploy.workflow.stackName.initiated": "Deploying SAM Application to CloudFormation Stack: {0}",
    "AWS.samcli.deploy.workflow.start": "Starting SAM Application deployment...",
    "AWS.samcli.deploy.workflow.success": "Successfully deployed SAM Application to CloudFormation Stack: {0}",
    "AWS.samcli.deploy.workflow.success.general": "SAM Application deployment succeeded.",
    "AWS.samcli.deploy.workflow.error": "Failed to deploy SAM application.",
    "AWS.samcli.deploy.parameters.mandatoryPrompt.message": "The template {0} contains parameters without default values. In order to deploy, you must provide values for these parameters. Configure them now?",
    "AWS.samcli.deploy.parameters.mandatoryPrompt.responseConfigure": "Configure",
    "AWS.samcli.deploy.parameters.mandatoryPrompt.responseCancel": "Cancel",
    "AWS.samcli.deploy.parameters.optionalPrompt.message": "The template {0} contains parameters. Would you like to override the default values for these parameters?",
    "AWS.samcli.deploy.parameters.optionalPrompt.responseYes": "Yes",
    "AWS.samcli.deploy.parameters.optionalPrompt.responseNo": "No",
    "AWS.samcli.deploy.region.prompt": "Which AWS Region would you like to deploy to?",
    "AWS.samcli.deploy.s3Bucket.region": "S3 bucket must be in selected region: {0}",
    "AWS.samcli.deploy.s3Bucket.prompt": "Enter the AWS S3 bucket to which your code should be deployed",
    "AWS.samcli.deploy.s3Bucket.error": "S3 bucket cannot be empty",
    "AWS.samcli.deploy.stackName.prompt": "Enter the name to use for the deployed stack",
    "AWS.samcli.deploy.s3Bucket.error.length": "S3 bucket name must be between 3 and 63 characters long",
    "AWS.samcli.deploy.s3Bucket.error.invalidCharacters": "S3 bucket name may only contain lower-case characters, numbers, periods, and dashes",
    "AWS.samcli.deploy.s3Bucket.error.ipAddress": "S3 bucket name may not be formatted as an IP address (198.51.100.24)",
    "AWS.samcli.deploy.s3Bucket.error.endsWithDash": "S3 bucket name may not end with a dash",
    "AWS.samcli.deploy.s3Bucket.error.consecutivePeriods": "S3 bucket name may not have consecutive periods",
    "AWS.samcli.deploy.s3Bucket.error.dashAdjacentPeriods": "S3 bucket name may not contain a period adjacent to a dash",
    "AWS.samcli.deploy.s3Bucket.error.labelFirstCharacter": "Each label in an S3 bucket name must begin with a number or a lower-case character",
    "AWS.samcli.deploy.stackName.error.invalidCharacters": "A stack name may contain only alphanumeric characters (case sensitive) and hyphens",
    "AWS.samcli.deploy.stackName.error.firstCharacter": "A stack name must begin with an alphabetic character",
    "AWS.samcli.deploy.stackName.error.length": "A stack name must not be longer than 128 characters",
    "AWS.samcli.deploy.statusbar.message": "$(cloud-upload) Deploying SAM Application to {0}...",
    "AWS.samcli.deploy.template.prompt": "Which SAM Template would you like to deploy to AWS?",
    "AWS.samcli.configured.location": "Configured SAM CLI Location: {0}",
    "AWS.samcli.error.notFound": "Unable to find the SAM CLI, which is required to create new Serverless Applications and debug them locally. If you have already installed the SAM CLI, update your User Settings by locating it.",
    "AWS.samcli.error.notFound.brief": "Could not get SAM CLI location",
    "AWS.samcli.error.invalid_schema_support_version": "Installed SAM executable does not support templates that require Event Schema selection. Required minimum version {0}, but found {1}",
    "AWS.samcli.local.invoke.ended": "Local invoke of SAM Application has ended.",
    "AWS.samcli.local.invoke.error": "Error encountered running local SAM Application",
    "AWS.samcli.local.invoke.port.not.open": "The debug port doesn't appear to be open. The debugger might not succeed when attaching to your SAM Application.",
    "AWS.samcli.local.invoke.runtime.unsupported": "Unsupported {0} runtime: {1}",
    "AWS.samcli.local.invoke.debugger.install": "Installing .NET Core Debugger to {0}...",
    "AWS.samcli.local.invoke.debugger.install.failed": "Error installing .NET Core Debugger: {0}",
    "AWS.samcli.local.invoke.debugger.timeout": "The SAM process did not make the debugger available within the time limit",
    "AWS.samcli.notification.not.found": "Unable to find SAM CLI. It is required in order to work with Serverless Applications locally.",
    "AWS.samcli.notification.unexpected.validation.issue": "An unexpected issue occured while validating SAM CLI: {0}",
    "AWS.samcli.notification.version.invalid": "Your SAM CLI version {0} does not meet requirements ({1} ≤ version < {2}). {3}",
    "AWS.samcli.notification.version.valid": "Your SAM CLI version {0} is valid.",
    "AWS.samcli.recommend.update.toolkit": "Please check the Marketplace for an updated AWS Toolkit.",
    "AWS.samcli.recommend.update.samcli": "Please update your SAM CLI.",
    "AWS.samcli.userChoice.browse": "Locate SAM CLI...",
    "AWS.samcli.userChoice.visit.install.url": "Get SAM CLI",
    "AWS.samcli.userChoice.update.awstoolkit.url": "Visit Marketplace",
    "AWS.samcli.initWizard.general.error": "An error occurred while creating a new SAM Application. {0}",
    "AWS.samcli.initWizard.location.prompt": "Select a workspace folder for your new project",
    "AWS.initWizard.location.select.folder": "Select a different folder...",
    "AWS.initWizard.location.select.folder.empty.workspace": "There are no workspace folders open. Select a folder...",
    "AWS.samcli.initWizard.location.select.folder.detail": "The folder you select will be added to your VS Code workspace.",
    "AWS.samcli.initWizard.name.prompt": "Enter a name for your new application",
    "AWS.initWizard.name.browse.openLabel": "Open",
    "AWS.samcli.initWizard.name.error.empty": "Application name cannot be empty",
    "AWS.samcli.initWizard.name.error.pathSep": "The path separator ({0}) is not allowed in application names",
    "AWS.samcli.initWizard.schemas.aws_credentials_missing": "You need to be connected to AWS to select {0}.",
    "AWS.samcli.initWizard.runtime.prompt": "Select a SAM Application Runtime",
    "AWS.samcli.initWizard.template.prompt": "Select a SAM Application Template",
    "AWS.samcli.initWizard.template.helloWorld.name": "AWS SAM Hello World",
    "AWS.samcli.initWizard.template.eventBridge_helloWorld.name": "AWS SAM EventBridge Hello World",
    "AWS.samcli.initWizard.template.eventBridge_starterApp.name": "AWS SAM EventBridge App from Scratch",
    "AWS.samcli.initWizard.template.helloWorld.description": "A basic SAM app",
    "AWS.samcli.initWizard.template.eventBridge_helloWorld.description": "Invokes a Lambda for every EC2 instance state change in your account",
    "AWS.samcli.initWizard.template.eventBridge_starterApp.description": "Invokes a Lambda based on a dynamic event trigger for an EventBridge Schema of your choice",
    "AWS.samcli.initWizard.schemas.region.prompt": "Select an EventBridge Schemas Region",
    "AWS.samcli.initWizard.schemas.registry.prompt": "Select a Registry",
    "AWS.samcli.initWizard.schemas.registry.failed_to_load_resources": "Error loading registries.",
    "AWS.samcli.initWizard.schemas.schema.prompt": "Select a Schema",
    "AWS.samcli.initWizard.schemas.notFound": "No schemas found in registry {0}.",
    "AWS.samcli.initWizard.schemas.failed_to_load_resources": "Error loading schemas in registry {0}.",
    "AWS.samcli.initWizard.source.error.notFound": "Project created successfully, but main source code file not found: {0}",
    "AWS.samcli.initWizard.source.error.notInWorkspace": "Could not open file '{0}'. If this file exists on disk, try adding it to your workspace.",
    "AWS.stepfunctions.visualisation.errors.rendering": "There was an error rendering State Machine Graph, check logs for details.",
    "AWS.stepfunctions.visualisation.errors.rename": "State machine visualization closed due to file renaming or closure.",
    "AWS.submitFeedback.title": "Submit Quick Feedback",
    "AWS.wizard.selectedPreviously": "Selected Previously",
    "AWS.generic.response.no": "No",
    "AWS.generic.response.yes": "Yes",
    "AWS.generic.notImplemented": "Not implemented",
    "AWS.template.error.showErrorDetails.title": "Error details for",
    "AWS.template.error.showErrorDetails.errorCode": "Error code",
    "AWS.template.error.showErrorDetails.errorMessage": "Error message"
}
