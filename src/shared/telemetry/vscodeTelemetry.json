{
    "types": [
        {
            "name": "amazonGenerateApproachLatency",
            "type": "double",
            "description": "The time it takes to generate approach response"
        },
        {
            "name": "ec2ConnectionType",
            "type": "string",
            "allowedValues": ["remoteDesktop", "ssh", "scp", "ssm"],
            "description": "Ec2 Connection Methods"
        },
        {
            "name": "documentFormat",
            "type": "string",
            "allowedValues": ["JSON, YAML"],
            "description": "SSM Create document format selection"
        },
        {
            "name": "ssmOperation",
            "type": "string",
            "allowedValues": ["Create", "Update"],
            "description": "SSM Publish Document operation type"
        },
        {
            "name": "starterTemplate",
            "type": "string",
            "description": "Starter template chosen during create document"
        },
        {
            "name": "command",
            "type": "string",
            "description": "The id of a VS Code command"
        },
        {
            "name": "debounceCount",
            "type": "int",
            "description": "Number of times the telemetry event was debounced before emission"
        },
        {
            "name": "cli",
            "type": "string",
            "description": "Installed CLI"
        },
        {
            "name": "findingId",
            "type": "string",
            "description": "The id of a security finding from a code scan"
        },
        {
            "name": "detectorId",
            "type": "string",
            "description": "The id of the detector which produced the code scan issue"
        },
        {
            "name": "cwsprChatTriggerInteraction",
            "type": "string",
            "allowedValues": ["hotkeys", "click", "contextMenu"],
            "description": "Identifies the specific interaction that opens the chat panel"
        },
        {
            "name": "cwsprChatConversationId",
            "type": "string",
            "description": "Unique identifier for each conversation"
        },
        {
            "name": "cwsprChatUserIntent",
            "type": "string",
            "allowedValues": [
                "suggestAlternateImplementation",
                "applyCommonBestPractices",
                "improveCode",
                "showExample",
                "citeSources",
                "explainLineByLine",
                "explainCodeSelection"
            ],
            "description": "Explict user intent associated with a chat message"
        },
        {
            "name": "cwsprChatHasCodeSnippet",
            "type": "boolean",
            "description": "true if user has selected code snippet, false otherwise."
        },
        {
            "name": "cwsprChatProgrammingLanguage",
            "type": "string",
            "description": "Programming language associated with the message"
        },
        {
            "name": "cwsprChatConversationType",
            "type": "string",
            "allowedValues": ["Chat", "Assign", "Transform"],
            "description": "Identifies the type of conversation"
        },
        {
            "name": "cwsprChatMessageId",
            "type": "string",
            "description": "Unique identifier for each message in an conversation"
        },
        {
            "name": "cwsprChatActiveEditorTotalCharacters",
            "type": "int",
            "description": "Total number of characters in the active editor"
        },
        {
            "name": "cwsprChatActiveEditorImportCount",
            "type": "int",
            "description": "Number of import statements in the active editor"
        },
        {
            "name": "cwsprChatResponseCodeSnippetCount",
            "type": "int",
            "description": "Number of code snippets in response"
        },
        {
            "name": "cwsprChatResponseCode",
            "type": "int",
            "description": "HTTP response code for message API invocation"
        },
        {
            "name": "cwsprChatResponseErrorReason",
            "type": "string",
            "description": "Client error reason when processing response stream"
        },
        {
            "name": "cwsprChatSourceLinkCount",
            "type": "int",
            "description": "Number of links in response"
        },
        {
            "name": "cwsprChatReferencesCount",
            "type": "int",
            "description": "Number of references in response"
        },
        {
            "name": "cwsprChatFollowUpCount",
            "type": "int",
            "description": "Number of follow ups in response"
        },
        {
            "name": "cwsprChatTimeToFirstChunk",
            "type": "int",
            "description": "Time taken in ms to get back the first chunk"
        },
        {
            "name": "cwsprChatTimeBetweenChunks",
            "type": "string",
            "description": "Time (list of int) taken in ms between chunks"
        },
        {
            "name": "cwsprChatFullResponseLatency",
            "type": "int",
            "description": "Time taken to get the full response in ms"
        },
        {
            "name": "cwsprChatResponseLength",
            "type": "int",
            "description": "Number of characters in response"
        },
        {
            "name": "cwsprChatRequestLength",
            "type": "int",
            "description": "Number of characters in request"
        },
        {
            "name": "cwsprChatInteractionType",
            "allowedValues": [
                "insertAtCursor",
                "copySnippet",
                "copy",
                "clickLink",
                "clickFollowUp",
                "hoverReference",
                "upvote",
                "downvote",
                "clickBodyLink"
            ],
            "type": "string",
            "description": "Indicates the specific interaction type with a message in a conversation"
        },
        {
            "name": "cwsprChatInteractionTarget",
            "type": "string",
            "description": "Identifies the entity within the message that user interacts with."
        },
        {
            "name": "cwsprChatAcceptedCharactersLength",
            "type": "int",
            "description": "Count of code characters copied to the editor"
        },
        {
            "name": "cwsprChatHasReference",
            "type": "boolean",
            "description": "True if the code snippet that user interacts with has a reference."
        },
        {
            "name": "cwsprChatModificationPercentage",
            "type": "double",
            "description": "% of characters edited by user after copying/inserting code from a message"
        },
        {
            "name": "cwsprChatCommandType",
            "type": "string",
            "allowedValues": ["clear", "help", "transform", "auth"],
            "description": "Type of chat command (/command) executed"
        },
        {
            "name": "cwsprChatCommandName",
            "type": "string",
            "description": "Type of chat command name executed"
        },
        {
            "name": "codeTransform_JobId",
            "type": "string",
            "description": "A string ID for the current job running"
        },
        {
            "name": "codeTransform_SourceJavaVersion",
            "type": "string",
            "description": "The Java version of the project the customer has selected to transform"
        },
        {
            "name": "codeTransform_ResultStatusMessage",
            "type": "string",
            "description": "A general string field to represent the ending status of the job"
        },
        {
            "name": "codeTransform_ApiErrorId",
            "type": "string",
            "description": "A general string field to represent the key/id to be used so that we can map to a specific API error message"
        },
        {
            "name": "codeTransform_RuntimeErrorId",
            "type": "string",
            "description": "A general string field to represent the key/id to be used so that we can map to a specific runtime error message"
        },
        {
            "name": "codeTransform_SessionId",
            "type": "string",
            "description": "A general string field to represent the IDE session from when users start the transformation process"
        },
        {
            "name": "codeTransform_ApiName",
            "type": "string",
            "description": "Names of allowed API calls in Gumby",
            "allowedValues": [
                "StartTransformation",
                "StopTransformation",
                "GetTransformation",
                "GetTransformationPlan",
                "UploadZip",
                "CreateUploadUrl",
                "ExportResultArchive"
            ]
        },
        {
            "name": "codeTransform_ProjectType",
            "type": "string",
            "description": "The type of the project the user calls transform on",
            "allowedValues": ["maven", "gradle", "unknown"]
        }
    ],
    "metrics": [
        {
            "name": "vscode_executeCommand",
            "description": "Emitted whenever a registered Toolkit command is executed",
            "passive": true,
            "metadata": [
                {
                    "type": "command"
                },
                {
                    "type": "debounceCount",
                    "required": false
                },
                {
                    "type": "duration"
                },
                {
                    "type": "result"
                },
                {
                    "type": "reason",
                    "required": false
                },
                {
                    "type": "source",
                    "required": false
                }
            ]
        },
        {
            "name": "aws_autoUpdateBeta",
            "description": "Emitted whenever the Toolkit checks, and potentially installs, a beta version",
            "passive": true
        },
        {
            "name": "aws_installCli",
            "description": "Called after attempting to install a local copy of a missing CLI",
            "metadata": [
                {
                    "type": "result"
                },
                {
                    "type": "cli"
                }
            ]
        },
        {
            "name": "ssm_createDocument",
            "description": "An SSM Document is created locally",
            "unit": "None",
            "metadata": [
                {
                    "type": "result"
                },
                {
                    "type": "documentFormat",
                    "required": false
                },
                {
                    "type": "starterTemplate",
                    "required": false
                }
            ]
        },
        {
            "name": "ssm_deleteDocument",
            "description": "An SSM Document is deleted",
            "unit": "None",
            "metadata": [
                {
                    "type": "result"
                }
            ]
        },
        {
            "name": "ssm_executeDocument",
            "description": "An SSM Document is deleted",
            "unit": "None",
            "metadata": [
                {
                    "type": "result"
                }
            ]
        },
        {
            "name": "ssm_openDocument",
            "description": "An SSM Document is opened locally",
            "unit": "None",
            "metadata": [
                {
                    "type": "result"
                }
            ]
        },
        {
            "name": "ssm_publishDocument",
            "description": "SSM Document related metrics for create and update",
            "unit": "None",
            "metadata": [
                {
                    "type": "result"
                },
                {
                    "type": "ssmOperation"
                }
            ]
        },
        {
            "name": "ssm_updateDocumentVersion",
            "description": "SSM Document related metrics for updating document default version",
            "unit": "None",
            "metadata": [
                {
                    "type": "result"
                }
            ]
        },
        {
            "name": "stepfunctions_createStateMachineFromTemplate",
            "description": ""
        },
        {
            "name": "stepfunctions_downloadStateMachineDefinition",
            "description": "",
            "unit": "None",
            "metadata": [
                {
                    "type": "result"
                }
            ]
        },
        {
            "name": "stepfunctions_executeStateMachine",
            "description": "",
            "unit": "None",
            "metadata": [
                {
                    "type": "result"
                }
            ]
        },
        {
            "name": "stepfunctions_executeStateMachineView",
            "description": ""
        },
        {
            "name": "stepfunctions_previewstatemachine",
            "description": ""
        },
        {
            "name": "vscode_activeRegions",
            "description": "Record the number of active regions at startup and when regions are added/removed",
            "unit": "Count",
            "passive": true
        },
        {
            "name": "aws_showExplorerErrorDetails",
            "description": "Called when getting more details about errors thrown by the explorer",
            "metadata": [
                {
                    "type": "result"
                }
            ]
        },
        {
            "name": "aws_showRegion",
            "description": "Records a call to add a region to the explorer"
        },
        {
            "name": "aws_hideRegion",
            "description": "Records a call to remove a region from the explorer"
        },
        {
            "name": "sam_detect",
            "description": "Called when detecting the location of the SAM CLI",
            "metadata": [
                {
                    "type": "result"
                }
            ],
            "passive": true
        },
        {
            "name": "cdk_explorerDisabled",
            "description": "Called when expanding the CDK explorer is disabled"
        },
        {
            "name": "cdk_explorerEnabled",
            "description": "Called when the CDK explorer is enabled"
        },
        {
            "name": "cdk_appExpanded",
            "description": "Called when the CDK explorer is expanded"
        },
        {
            "name": "cdk_provideFeedback",
            "description": "Called when providing feedback for CDK"
        },
        {
            "name": "cdk_help",
            "description": "Called when clicking on help for CDK"
        },
        {
            "name": "cdk_refreshExplorer",
            "description": "Called when refreshing the CDK explorer"
        },
        {
            "name": "redshift_executeQuery",
            "description": "Called when redshift query is executed"
        },
        {
            "name": "redshift_listDatabases",
            "description": "Called when redshift listDatabases API is called"
        },
        {
            "name": "redshift_listSchemas",
            "description": "Called when redshift listSchemas API is called"
        },
        {
            "name": "redshift_listTables",
            "description": "Called when redshift listTables API is called"
        },
        {
            "name": "sam_attachDebugger",
            "description": "Called after trying to attach a debugger to a local sam invoke",
            "metadata": [
                {
                    "type": "result"
                },
                {
                    "type": "lambdaPackageType"
                },
                {
                    "type": "runtime"
                },
                {
                    "type": "attempts"
                },
                {
                    "type": "duration"
                },
                {
                    "type": "lambdaArchitecture",
                    "required": false
                }
            ]
        },
        {
            "name": "sam_openConfigUi",
            "description": "Called after opening the SAM Config UI"
        },
        {
            "name": "codewhisperer_codeScanIssueHover",
            "description": "Called when a code scan issue is hovered over",
            "metadata": [{ "type": "findingId" }, { "type": "detectorId" }]
        },
        {
            "name": "codewhisperer_codeScanIssueApplyFix",
            "description": "Called when a code scan issue suggested fix is applied",
            "metadata": [{ "type": "findingId" }, { "type": "detectorId" }, { "type": "component" }]
        },
        {
            "name": "amazonq_openChat",
            "description": "When user opens CWSPR chat panel"
        },
        {
            "name": "amazonq_enterFocusChat",
            "description": "When chat panel comes into focus"
        },
        {
            "name": "amazonq_exitFocusChat",
            "description": "When chat panel goes out of focus"
        },
        {
            "name": "amazonq_closeChat",
            "description": "When chat panel is closed"
        },
        {
            "name": "amazonq_startConversation",
            "description": "When user starts a new conversation",
            "metadata": [
                {
                    "type": "cwsprChatConversationId"
                },
                {
                    "type": "cwsprChatTriggerInteraction"
                },
                {
                    "type": "cwsprChatUserIntent",
                    "required": false
                },
                {
                    "type": "cwsprChatHasCodeSnippet",
                    "required": false
                },
                {
                    "type": "cwsprChatProgrammingLanguage",
                    "required": false
                },
                {
                    "type": "cwsprChatConversationType"
                }
            ]
        },
        {
            "name": "amazonq_addMessage",
            "description": "When a message is added to the conversation",
            "metadata": [
                {
                    "type": "cwsprChatConversationId"
                },
                {
                    "type": "cwsprChatMessageId"
                },
                {
                    "type": "cwsprChatTriggerInteraction"
                },
                {
                    "type": "cwsprChatUserIntent",
                    "required": false
                },
                {
                    "type": "cwsprChatHasCodeSnippet",
                    "required": false
                },
                {
                    "type": "cwsprChatProgrammingLanguage",
                    "required": false
                },
                {
                    "type": "cwsprChatActiveEditorTotalCharacters",
                    "required": false
                },
                {
                    "type": "cwsprChatActiveEditorImportCount",
                    "required": false
                },
                {
                    "type": "cwsprChatResponseCodeSnippetCount",
                    "required": false
                },
                {
                    "type": "cwsprChatResponseCode"
                },
                {
                    "type": "cwsprChatSourceLinkCount",
                    "required": false
                },
                {
                    "type": "cwsprChatReferencesCount",
                    "required": false
                },
                {
                    "type": "cwsprChatFollowUpCount",
                    "required": false
                },
                {
                    "type": "cwsprChatTimeToFirstChunk"
                },
                {
                    "type": "cwsprChatTimeBetweenChunks"
                },
                {
                    "type": "cwsprChatFullResponseLatency"
                },
                {
                    "type": "cwsprChatRequestLength"
                },
                {
                    "type": "cwsprChatResponseLength",
                    "required": false
                },
                {
                    "type": "cwsprChatConversationType"
                }
            ]
        },
        {
            "name": "amazonq_messageResponseError",
            "description": "When an error has occured in response to a prompt",
            "metadata": [
                {
                    "type": "cwsprChatConversationId",
                    "required": false
                },
                {
                    "type": "cwsprChatTriggerInteraction"
                },
                {
                    "type": "cwsprChatUserIntent",
                    "required": false
                },
                {
                    "type": "cwsprChatHasCodeSnippet",
                    "required": false
                },
                {
                    "type": "cwsprChatProgrammingLanguage",
                    "required": false
                },
                {
                    "type": "cwsprChatActiveEditorTotalCharacters",
                    "required": false
                },
                {
                    "type": "cwsprChatActiveEditorImportCount",
                    "required": false
                },
                {
                    "type": "cwsprChatResponseCode"
                },
                {
                    "type": "cwsprChatRequestLength"
                },
                {
                    "type": "cwsprChatConversationType"
                },
                {
                    "type": "cwsprChatResponseErrorReason",
                    "required": false
                }
            ]
        },
        {
            "name": "amazonq_interactWithMessage",
            "description": "When a user interacts with a message in the conversation",
            "metadata": [
                {
                    "type": "cwsprChatConversationId"
                },
                {
                    "type": "cwsprChatMessageId"
                },
                {
                    "type": "cwsprChatInteractionType"
                },
                {
                    "type": "cwsprChatInteractionTarget",
                    "required": false
                },
                {
                    "type": "cwsprChatAcceptedCharactersLength",
                    "required": false
                },
                {
                    "type": "cwsprChatHasReference",
                    "required": false
                }
            ]
        },
        {
            "name": "amazonq_modifyCode",
            "description": "% of code modified by the user after copying/inserting code from a message",
            "metadata": [
                {
                    "type": "cwsprChatConversationId"
                },
                {
                    "type": "cwsprChatMessageId"
                },
                {
                    "type": "cwsprChatModificationPercentage"
                }
            ]
        },
        {
            "name": "amazonq_enterFocusConversation",
            "description": "When a conversation comes into focus",
            "metadata": [
                {
                    "type": "cwsprChatConversationId"
                }
            ]
        },
        {
            "name": "amazonq_exitFocusConversation",
            "description": "When a conversation goes out of focus",
            "metadata": [
                {
                    "type": "cwsprChatConversationId"
                }
            ]
        },
        {
            "name": "amazonq_runCommand",
            "description": "When a chat command is executed",
            "metadata": [
                {
                    "type": "cwsprChatCommandType"
                },
                {
                    "type": "cwsprChatCommandName",
                    "required": false
                }
            ]
        },
        {
            "name": "amazonq_codeTransformInvoke",
            "description": "The user selects code transform on an open project",
            "metadata": [
                {
                    "type": "codeTransform_SessionId",
                    "required": true
                },
                {
                    "type": "codeTransform_ApiName",
                    "required": false
                },
                {
                    "type": "codeTransform_ApiErrorId",
                    "required": false
                },
                {
                    "type": "codeTransform_JobId",
                    "required": false
                },
                {
                    "type": "codeTransform_ProjectType",
                    "required": false
                },
                {
                    "type": "codeTransform_SourceJavaVersion",
                    "required": false
                },
                {
                    "type": "codeTransform_ResultStatusMessage",
                    "required": false
                },
                {
                    "type": "duration",
                    "required": true
                },
                {
                    "type": "result",
                    "required": true
                },
                {
                    "type": "reason",
                    "required": false
                }
            ]
        },
        {
            "name": "amazonq_codeTransformReview",
            "description": "The user reviews the proposed results of a code transformation",
            "metadata": [
                {
                    "type": "codeTransform_SessionId",
                    "required": true
                },
                {
                    "type": "codeTransform_JobId",
                    "required": true
                },
                {
                    "type": "codeTransform_ApiName",
                    "required": false
                },
                {
                    "type": "result",
                    "required": true
                },
                {
                    "type": "reason",
                    "required": false
                }
            ]
        }
    ]
}
