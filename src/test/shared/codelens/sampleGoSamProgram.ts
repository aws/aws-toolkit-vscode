/*!
 * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */

import * as vscode from 'vscode'

/**
 * This script emits file contents from the stock SAM CLI app for go, as well as
 * the corresponding DocumentSymbols generated by VS Code.
 */

export function getDocumentSymbols(): vscode.DocumentSymbol[] {
    const badFuncSymbol: vscode.DocumentSymbol = new vscode.DocumentSymbol(
        'notAHandler()',
        '()',
        vscode.SymbolKind.Function,
        new vscode.Range(38, 9, 40, 4),
        new vscode.Range(38, 9, 38, 20)
    )
    const goodFuncSymbol: vscode.DocumentSymbol = new vscode.DocumentSymbol(
        'handler(request events.APIGatewayProxyRequest)',
        '(request events.APIGatewayProxyRequest)',
        vscode.SymbolKind.Function,
        new vscode.Range(23, 5, 50, 0),
        new vscode.Range(23, 5, 23, 12)
    )

    return [badFuncSymbol, goodFuncSymbol]
}

export function getFunctionText(): string {
    return String.raw`
package main

import (
    "errors"
    "fmt"
    "io/ioutil"
    "net/http"

    "github.com/aws/aws-lambda-go/events"
    "github.com/aws/aws-lambda-go/lambda"
)

var (
    // DefaultHTTPGetAddress Default Address
    DefaultHTTPGetAddress = "https://checkip.amazonaws.com"

    // ErrNoIP No IP found in response
    ErrNoIP = errors.New("No IP in HTTP response")

    // ErrNon200Response non 200 status code in response
    ErrNon200Response = errors.New("Non 200 Response found")
)

func handler(request events.APIGatewayProxyRequest) (events.APIGatewayProxyResponse, error) {
    resp, err := http.Get(DefaultHTTPGetAddress)
    if err != nil {
        return events.APIGatewayProxyResponse{}, err
    }

    if resp.StatusCode != 200 {
        return events.APIGatewayProxyResponse{}, ErrNon200Response
    }

    ip, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        return events.APIGatewayProxyResponse{}, err
    }

    func notAHandler() int {
        return 0
    }

    if len(ip) == 0 {
        return events.APIGatewayProxyResponse{}, ErrNoIP
    }

    return events.APIGatewayProxyResponse{
        Body:       fmt.Sprintf("Hello, %v", string(ip)),
        StatusCode: 200,
    }, nil
}

func main() {
    lambda.Start(handler)
}    
`
}
